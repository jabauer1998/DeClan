SYMBOL SECTION
 ENTRY a INTERNAL PARAM n IntToReal 0 <INT>
 ENTRY b INTERNAL RETURN IntToReal <REAL>
 ENTRY c INTERNAL PARAM n RealToInt 0 <REAL>
 ENTRY d INTERNAL RETURN RealToInt <INT>
 ENTRY e INTERNAL PARAM b BoolToInt 0 <BOOL>
 ENTRY f INTERNAL RETURN BoolToInt <INT>
 ENTRY g INTERNAL PARAM b BoolToReal 0 <BOOL>
 ENTRY h INTERNAL RETURN BoolToReal <REAL>
 ENTRY i INTERNAL PARAM n IntToBool 0 <INT>
 ENTRY j INTERNAL RETURN IntToBool <BOOL>
 ENTRY k INTERNAL PARAM r RealToBool 0 <REAL>
 ENTRY l INTERNAL RETURN RealToBool <BOOL>
 ENTRY m INTERNAL PARAM r RealBinaryAsInt 0 <REAL>
 ENTRY n INTERNAL RETURN RealBinaryAsInt <INT>
 ENTRY o INTERNAL PARAM n IntBinaryAsReal 0 <INT>
 ENTRY p INTERNAL RETURN IntBinaryAsReal <REAL>
 ENTRY q INTERNAL PARAM b BoolBinaryAsReal 0 <BOOL>
 ENTRY r INTERNAL RETURN BoolBinaryAsReal <REAL>
 ENTRY s INTERNAL PARAM r RealBinaryAsBool 0 <REAL>
 ENTRY t INTERNAL RETURN RealBinaryAsBool <BOOL>
 ENTRY u INTERNAL PARAM b BoolBinaryAsInt 0 <BOOL>
 ENTRY v INTERNAL RETURN BoolBinaryAsInt <INT>
 ENTRY w INTERNAL PARAM n IntBinaryAsBool 0 <INT>
 ENTRY x INTERNAL RETURN IntBinaryAsBool <BOOL>
 ENTRY y INTERNAL PARAM s StringAsAddress 0 <STRING>
 ENTRY z INTERNAL RETURN StringAsAddress <INT>
 ENTRY A INTERNAL result IntToReal <REAL>
 ENTRY B INTERNAL absN IntToReal <INT>
 ENTRY C INTERNAL isNeg IntToReal <BOOL>
 ENTRY D INTERNAL intResult IntToReal <INT>
 ENTRY E INTERNAL furthestOne IntToReal <INT>
 ENTRY F INTERNAL count IntToReal <INT>
 ENTRY G INTERNAL tempN IntToReal <INT>
 ENTRY H INTERNAL lastBit IntToReal <INT>
 ENTRY I INTERNAL fullExponent IntToReal <INT>
 ENTRY J INTERNAL exponent IntToReal <INT>
 ENTRY K INTERNAL mantissa IntToReal <INT>
 ENTRY L INTERNAL mantissaMask IntToReal <INT>
 ENTRY M INTERNAL toShiftOver IntToReal <INT>
 ENTRY N EXTERNAL PARAM Abs 0 <INT>
 ENTRY O EXTERNAL RETURN Abs <INT>
 ENTRY R EXTERNAL PARAM IntIsNegative 0 <INT>
 ENTRY S EXTERNAL RETURN IntIsNegative <BOOL>
 ENTRY U EXTERNAL PARAM IntIsZero 0 <INT>
 ENTRY V EXTERNAL RETURN IntIsZero <BOOL>
 ENTRY c5 EXTERNAL GLOBAL realBias  <INT>
 ENTRY d8 INTERNAL result RealToInt <INT>
 ENTRY d9 INTERNAL exp RealToInt <INT>
 ENTRY e0 INTERNAL mantissa RealToInt <INT>
 ENTRY e1 INTERNAL sign RealToInt <INT>
 ENTRY e2 INTERNAL fullMantissa RealToInt <INT>
 ENTRY e3 EXTERNAL PARAM RealExponent 0 <REAL>
 ENTRY e4 EXTERNAL RETURN RealExponent <INT>
 ENTRY e6 EXTERNAL PARAM RealMantissa 0 <REAL>
 ENTRY e7 EXTERNAL RETURN RealMantissa <INT>
 ENTRY e9 EXTERNAL PARAM RealSign 0 <REAL>
 ENTRY f0 EXTERNAL RETURN RealSign <INT>
 ENTRY g8 INTERNAL result BoolToInt <INT>
 ENTRY h2 INTERNAL result BoolToReal <REAL>
 ENTRY h6 INTERNAL result IntToBool <BOOL>
 ENTRY i1 INTERNAL result RealToBool <BOOL>
 ENTRY i2 EXTERNAL PARAM RealIsZero 0 <REAL>
 ENTRY i3 EXTERNAL RETURN RealIsZero <BOOL>
 ENTRY i8 INTERNAL result RealBinaryAsInt <INT>
 ENTRY i9 INTERNAL temp RealBinaryAsInt <REAL>
 ENTRY j0 INTERNAL result IntBinaryAsReal <REAL>
 ENTRY j1 INTERNAL temp IntBinaryAsReal <INT>
 ENTRY j2 INTERNAL result BoolBinaryAsReal <REAL>
 ENTRY j3 INTERNAL temp BoolBinaryAsReal <INT>
 ENTRY j4 INTERNAL result RealBinaryAsBool <BOOL>
 ENTRY j5 INTERNAL temp RealBinaryAsBool <INT>
 ENTRY j6 INTERNAL result BoolBinaryAsInt <INT>
 ENTRY j7 INTERNAL temp BoolBinaryAsInt <INT>
 ENTRY j8 INTERNAL result IntBinaryAsBool <BOOL>
 ENTRY j9 INTERNAL temp IntBinaryAsBool <INT>
 ENTRY k0 INTERNAL result StringAsAddress <INT>
 ENTRY k1 INTERNAL temp StringAsAddress <INT>
DATA SECTION
PROC SECTION
 PROC LABEL IntToReal
  DEF A := 0.0 <REAL>
  DEF B := 0 <INT>
  DEF C := FALSE <BOOL>
  DEF D := 0 <INT>
  DEF E := 0 <INT>
  DEF F := 0 <INT>
  DEF G := 0 <INT>
  DEF H := 0 <INT>
  DEF I := 0 <INT>
  DEF J := 0 <INT>
  DEF K := 0 <INT>
  DEF L := 0 <INT>
  DEF M := 0 <INT>
  CALL Abs([(PARAM a) -> N]<INT>)
  DEF P := (RETURN O) <INT>
  B := P <INT>
  G := B <INT>
  DEF Q := 0 <INT>
  F := Q <INT>
  CALL IntIsNegative([(PARAM a) -> R]<INT>)
  DEF T := (RETURN S) <BOOL>
  C := T <BOOL>
  CALL IntIsZero([G -> U]<INT>)
  DEF W := (RETURN V) <BOOL>
  DEF X := TRUE <BOOL>
  IF W BEQ X
  THEN IFSTAT_0_SEQ_0_LEVEL_0
  ELSE IFNEXT_0_SEQ_0_LEVEL_0
  LABEL IFSTAT_0_SEQ_0_LEVEL_0
  DEF Y := 0 <INT>
  D := Y <INT>
  GOTO IFEND_0_LEVEL_0
  LABEL IFNEXT_0_SEQ_0_LEVEL_0
  CALL IntIsZero([G -> U]<INT>)
  DEF Z := (RETURN V) <BOOL>
  DEF a0 := BNOT Z <BOOL>
  DEF a1 := TRUE <BOOL>
  IF a0 BEQ a1
  THEN WHILESTAT_0_SEQ_0_LEVEL_0
  ELSE WHILENEXT_0_SEQ_0_LEVEL_0
  LABEL WHILECOND_0_SEQ_0_LEVEL_0
  IF a0 BEQ a1
  THEN WHILESTAT_0_SEQ_0_LEVEL_0
  ELSE WHILEEND_0_LEVEL_0
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0
  DEF a2 := 1 <INT>
  DEF a3 := G IAND a2 <INT>
  H := a3 <INT>
  DEF a4 := 1 <INT>
  DEF a5 := H IEQ a4 <BOOL>
  DEF a6 := TRUE <BOOL>
  IF a5 BEQ a6
  THEN IFSTAT_1_SEQ_0_LEVEL_1
  ELSE IFNEXT_1_SEQ_0_LEVEL_1
  LABEL IFSTAT_1_SEQ_0_LEVEL_1
  E := F <INT>
  GOTO IFEND_1_LEVEL_1
  LABEL IFNEXT_1_SEQ_0_LEVEL_1
  LABEL IFEND_1_LEVEL_1
  DEF a7 := 1 <INT>
  DEF a8 := F IADD a7 <INT>
  F := a8 <INT>
  DEF a9 := 1 <INT>
  DEF b0 := G IRSHIFT a9 <INT>
  G := b0 <INT>
  CALL IntIsZero([G -> U]<INT>)
  DEF b1 := (RETURN V) <BOOL>
  DEF b2 := BNOT b1 <BOOL>
  a0 := b2 <BOOL>
  GOTO WHILECOND_0_SEQ_0_LEVEL_0
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0
  LABEL WHILEEND_0_LEVEL_0
  DEF b3 := 23 <INT>
  DEF b4 := E GT b3 <BOOL>
  DEF b5 := TRUE <BOOL>
  IF b4 BEQ b5
  THEN IFSTAT_2_SEQ_0_LEVEL_1
  ELSE IFNEXT_2_SEQ_0_LEVEL_1
  LABEL IFSTAT_2_SEQ_0_LEVEL_1
  DEF b6 := 23 <INT>
  DEF b7 := E ISUB b6 <INT>
  DEF b8 := B IRSHIFT b7 <INT>
  B := b8 <INT>
  GOTO IFEND_2_LEVEL_1
  LABEL IFNEXT_2_SEQ_0_LEVEL_1
  DEF b9 := 23 <INT>
  DEF c0 := E LT b9 <BOOL>
  DEF c1 := TRUE <BOOL>
  IF c0 BEQ c1
  THEN IFSTAT_2_SEQ_1_LEVEL_1
  ELSE IFNEXT_2_SEQ_1_LEVEL_1
  LABEL IFSTAT_2_SEQ_1_LEVEL_1
  DEF c2 := 23 <INT>
  DEF c3 := c2 ISUB E <INT>
  DEF c4 := B ILSHIFT c3 <INT>
  B := c4 <INT>
  GOTO IFEND_2_LEVEL_1
  LABEL IFNEXT_2_SEQ_1_LEVEL_1
  LABEL IFEND_2_LEVEL_1
  DEF c6 := E IADD (GLOBAL c5) <INT>
  J := c6 <INT>
  DEF c7 := 8388607 <INT>
  L := c7 <INT>
  DEF c8 := B IAND L <INT>
  K := c8 <INT>
  D := K <INT>
  DEF c9 := 23 <INT>
  DEF d0 := J ILSHIFT c9 <INT>
  DEF d1 := D IOR d0 <INT>
  D := d1 <INT>
  DEF d2 := TRUE <BOOL>
  IF C BEQ d2
  THEN IFSTAT_3_SEQ_0_LEVEL_1
  ELSE IFNEXT_3_SEQ_0_LEVEL_1
  LABEL IFSTAT_3_SEQ_0_LEVEL_1
  DEF d3 := 1 <INT>
  DEF d4 := 31 <INT>
  DEF d5 := d3 ILSHIFT d4 <INT>
  DEF d6 := D IOR d5 <INT>
  D := d6 <INT>
  GOTO IFEND_3_LEVEL_1
  LABEL IFNEXT_3_SEQ_0_LEVEL_1
  LABEL IFEND_3_LEVEL_1
  GOTO IFEND_0_LEVEL_0
  LABEL IFNEXT_0_SEQ_1_LEVEL_0
  LABEL IFEND_0_LEVEL_0
  CALL IntBinaryAsReal([D -> o]<INT>)
  DEF d7 := (RETURN p) <REAL>
  A := d7 <REAL>
  DEF RETURN b := A <REAL>
 RETURN FROM IntToReal
 PROC LABEL RealToInt
  DEF d8 := 0 <INT>
  DEF d9 := 0 <INT>
  DEF e0 := 0 <INT>
  DEF e1 := 0 <INT>
  DEF e2 := 0 <INT>
  CALL RealExponent([(PARAM c) -> e3]<REAL>)
  DEF e5 := (RETURN e4) <INT>
  d9 := e5 <INT>
  CALL RealMantissa([(PARAM c) -> e6]<REAL>)
  DEF e8 := (RETURN e7) <INT>
  e0 := e8 <INT>
  CALL RealSign([(PARAM c) -> e9]<REAL>)
  DEF f1 := (RETURN f0) <INT>
  e1 := f1 <INT>
  DEF f2 := 0 <INT>
  DEF f3 := d9 GT f2 <BOOL>
  DEF f4 := TRUE <BOOL>
  IF f3 BEQ f4
  THEN IFSTAT_5_SEQ_0_LEVEL_0
  ELSE IFNEXT_5_SEQ_0_LEVEL_0
  LABEL IFSTAT_5_SEQ_0_LEVEL_0
  DEF f5 := e0 ILSHIFT d9 <INT>
  e2 := f5 <INT>
  GOTO IFEND_5_LEVEL_0
  LABEL IFNEXT_5_SEQ_0_LEVEL_0
  DEF f6 := 0 <INT>
  DEF f7 := d9 LT f6 <BOOL>
  DEF f8 := TRUE <BOOL>
  IF f7 BEQ f8
  THEN IFSTAT_5_SEQ_1_LEVEL_0
  ELSE IFNEXT_5_SEQ_1_LEVEL_0
  LABEL IFSTAT_5_SEQ_1_LEVEL_0
  DEF f9 := e0 IRSHIFT d9 <INT>
  e2 := f9 <INT>
  GOTO IFEND_5_LEVEL_0
  LABEL IFNEXT_5_SEQ_1_LEVEL_0
  e2 := e0 <INT>
  GOTO IFEND_5_LEVEL_0
  LABEL IFNEXT_5_SEQ_2_LEVEL_0
  LABEL IFEND_5_LEVEL_0
  DEF g0 := 23 <INT>
  DEF g1 := e2 IRSHIFT g0 <INT>
  d8 := g1 <INT>
  DEF g2 := 1 <INT>
  DEF g3 := e1 IEQ g2 <BOOL>
  DEF g4 := TRUE <BOOL>
  IF g3 BEQ g4
  THEN IFSTAT_6_SEQ_0_LEVEL_0
  ELSE IFNEXT_6_SEQ_0_LEVEL_0
  LABEL IFSTAT_6_SEQ_0_LEVEL_0
  DEF g5 := INOT d8 <INT>
  d8 := g5 <INT>
  DEF g6 := 1 <INT>
  DEF g7 := d8 IADD g6 <INT>
  d8 := g7 <INT>
  GOTO IFEND_6_LEVEL_0
  LABEL IFNEXT_6_SEQ_0_LEVEL_0
  LABEL IFEND_6_LEVEL_0
  DEF RETURN d := d8 <INT>
 RETURN FROM RealToInt
 PROC LABEL BoolToInt
  DEF g8 := 0 <INT>
  DEF g9 := TRUE <BOOL>
  IF (PARAM e) BEQ g9
  THEN IFSTAT_7_SEQ_0_LEVEL_0
  ELSE IFNEXT_7_SEQ_0_LEVEL_0
  LABEL IFSTAT_7_SEQ_0_LEVEL_0
  DEF h0 := 1 <INT>
  g8 := h0 <INT>
  GOTO IFEND_7_LEVEL_0
  LABEL IFNEXT_7_SEQ_0_LEVEL_0
  DEF h1 := 0 <INT>
  g8 := h1 <INT>
  GOTO IFEND_7_LEVEL_0
  LABEL IFNEXT_7_SEQ_1_LEVEL_0
  LABEL IFEND_7_LEVEL_0
  DEF RETURN f := g8 <INT>
 RETURN FROM BoolToInt
 PROC LABEL BoolToReal
  DEF h2 := 0.0 <REAL>
  DEF h3 := TRUE <BOOL>
  IF (PARAM g) BEQ h3
  THEN IFSTAT_8_SEQ_0_LEVEL_0
  ELSE IFNEXT_8_SEQ_0_LEVEL_0
  LABEL IFSTAT_8_SEQ_0_LEVEL_0
  DEF h4 := 1.0 <REAL>
  h2 := h4 <REAL>
  GOTO IFEND_8_LEVEL_0
  LABEL IFNEXT_8_SEQ_0_LEVEL_0
  DEF h5 := 2.0 <REAL>
  h2 := h5 <REAL>
  GOTO IFEND_8_LEVEL_0
  LABEL IFNEXT_8_SEQ_1_LEVEL_0
  LABEL IFEND_8_LEVEL_0
  DEF RETURN h := h2 <REAL>
 RETURN FROM BoolToReal
 PROC LABEL IntToBool
  DEF h6 := FALSE <BOOL>
  CALL IntIsZero([(PARAM i) -> U]<INT>)
  DEF h7 := (RETURN V) <BOOL>
  DEF h8 := TRUE <BOOL>
  IF h7 BEQ h8
  THEN IFSTAT_9_SEQ_0_LEVEL_0
  ELSE IFNEXT_9_SEQ_0_LEVEL_0
  LABEL IFSTAT_9_SEQ_0_LEVEL_0
  DEF h9 := FALSE <BOOL>
  h6 := h9 <BOOL>
  GOTO IFEND_9_LEVEL_0
  LABEL IFNEXT_9_SEQ_0_LEVEL_0
  DEF i0 := TRUE <BOOL>
  h6 := i0 <BOOL>
  GOTO IFEND_9_LEVEL_0
  LABEL IFNEXT_9_SEQ_1_LEVEL_0
  LABEL IFEND_9_LEVEL_0
  DEF RETURN j := h6 <BOOL>
 RETURN FROM IntToBool
 PROC LABEL RealToBool
  DEF i1 := FALSE <BOOL>
  CALL RealIsZero([(PARAM k) -> i2]<REAL>)
  DEF i4 := (RETURN i3) <BOOL>
  DEF i5 := TRUE <BOOL>
  IF i4 BEQ i5
  THEN IFSTAT_10_SEQ_0_LEVEL_0
  ELSE IFNEXT_10_SEQ_0_LEVEL_0
  LABEL IFSTAT_10_SEQ_0_LEVEL_0
  DEF i6 := FALSE <BOOL>
  i1 := i6 <BOOL>
  GOTO IFEND_10_LEVEL_0
  LABEL IFNEXT_10_SEQ_0_LEVEL_0
  DEF i7 := TRUE <BOOL>
  i1 := i7 <BOOL>
  GOTO IFEND_10_LEVEL_0
  LABEL IFNEXT_10_SEQ_1_LEVEL_0
  LABEL IFEND_10_LEVEL_0
  DEF RETURN l := i1 <BOOL>
 RETURN FROM RealToBool
 PROC LABEL RealBinaryAsInt
  DEF i8 := 0 <INT>
  DEF i9 := 0.0 <REAL>
  IPARAM i9
  IPARAM (PARAM m)
  IASM "LDR %r, %a"
  IPARAM i9
  IPARAM i8
  IASM "STR %r, %a"
  DEF RETURN n := i8 <INT>
 RETURN FROM RealBinaryAsInt
 PROC LABEL IntBinaryAsReal
  DEF j0 := 0.0 <REAL>
  DEF j1 := 0 <INT>
  IPARAM j1
  IPARAM (PARAM o)
  IASM "LDR %r, %a"
  IPARAM j1
  IPARAM j0
  IASM "STR %r, %a"
  DEF RETURN p := j0 <REAL>
 RETURN FROM IntBinaryAsReal
 PROC LABEL BoolBinaryAsReal
  DEF j2 := 0.0 <REAL>
  DEF j3 := 0 <INT>
  IPARAM j3
  IPARAM (PARAM q)
  IASM "LDRB %r, %a"
  IPARAM j3
  IPARAM j2
  IASM "STR %r, %a"
  DEF RETURN r := j2 <REAL>
 RETURN FROM BoolBinaryAsReal
 PROC LABEL RealBinaryAsBool
  DEF j4 := FALSE <BOOL>
  DEF j5 := 0 <INT>
  IPARAM j5
  IPARAM (PARAM s)
  IASM "LDR %r, %a"
  IPARAM j5
  IPARAM j4
  IASM "STRB %r, %a"
  DEF RETURN t := j4 <BOOL>
 RETURN FROM RealBinaryAsBool
 PROC LABEL BoolBinaryAsInt
  DEF j6 := 0 <INT>
  DEF j7 := 0 <INT>
  IPARAM j7
  IPARAM (PARAM u)
  IASM "LDRB %r, %a"
  IPARAM j7
  IPARAM j6
  IASM "STR %r, %a"
  DEF RETURN v := j6 <INT>
 RETURN FROM BoolBinaryAsInt
 PROC LABEL IntBinaryAsBool
  DEF j8 := FALSE <BOOL>
  DEF j9 := 0 <INT>
  IPARAM j9
  IPARAM (PARAM w)
  IASM "LDR %r, %a"
  IPARAM j9
  IPARAM j8
  IASM "STRB %r, %a"
  DEF RETURN x := j8 <BOOL>
 RETURN FROM IntBinaryAsBool
 PROC LABEL StringAsAddress
  DEF k0 := 0 <INT>
  DEF k1 := 0 <INT>
  IPARAM k1
  IPARAM (PARAM y)
  IASM "LDR %r, %a"
  IPARAM k1
  IPARAM k0
  IASM "STR %r, %a"
  DEF RETURN z := k0 <INT>
 RETURN FROM StringAsAddress
