SYMBOL SECTION
 ENTRY a INTERNAL PARAM s WriteString 0 <STRING>
 ENTRY b INTERNAL PARAM i WriteInt 0 <INT>
 ENTRY c INTERNAL PARAM r WriteReal 0 <REAL>
 ENTRY d INTERNAL PARAM b WriteBool 0 <BOOL>
 ENTRY e INTERNAL RETURN ReadInt <INT>
 ENTRY f INTERNAL RETURN ReadReal <REAL>
 ENTRY g INTERNAL RETURN ReadBool <BOOL>
 ENTRY h INTERNAL addressHolder WriteString <INT>
 ENTRY i INTERNAL offsetHolder WriteString <INT>
 ENTRY j INTERNAL valueHolder WriteString <INT>
 ENTRY k INTERNAL tempHolder WriteString <INT>
 ENTRY l EXTERNAL PARAM StringAsAddress 0 <STRING>
 ENTRY m EXTERNAL RETURN StringAsAddress <INT>
 ENTRY p EXTERNAL PARAM IntIsZero 0 <INT>
 ENTRY q EXTERNAL RETURN IntIsZero <BOOL>
 ENTRY y INTERNAL tempReg WriteInt <INT>
 ENTRY z INTERNAL tempReg WriteReal <INT>
 ENTRY A INTERNAL tempReg WriteBool <INT>
 ENTRY B INTERNAL result ReadInt <INT>
 ENTRY C INTERNAL tempReg ReadInt <INT>
 ENTRY D INTERNAL result ReadReal <REAL>
 ENTRY E INTERNAL tempReg ReadReal <INT>
 ENTRY F INTERNAL result ReadBool <BOOL>
 ENTRY G INTERNAL tempReg ReadBool <INT>
DATA SECTION
PROC SECTION
 PROC LABEL WriteLn
  IASM "SWI 4"
 RETURN FROM WriteLn
 PROC LABEL WriteString
  DEF h := 0 <INT>
  DEF i := 0 <INT>
  DEF j := 0 <INT>
  DEF k := 0 <INT>
  CALL StringAsAddress([(PARAM a) -> l]<STRING>)
  DEF n := (RETURN m) <INT>
  h := n <INT>
  DEF o := 0 <INT>
  i := o <INT>
  IPARAM j
  IPARAM h
  IPARAM i
  IASM "LDRB %r, [%r, +%r]"
  IPARAM j
  IPARAM j
  IASM "STR %r, %a"
  CALL IntIsZero([j -> p]<INT>)
  DEF r := (RETURN q) <BOOL>
  DEF s := BNOT r <BOOL>
  DEF t := TRUE <BOOL>
  IF s BEQ t
  THEN WHILESTAT_0_SEQ_0_LEVEL_0
  ELSE WHILENEXT_0_SEQ_0_LEVEL_0
  LABEL WHILECOND_0_SEQ_0_LEVEL_0
  IF s BEQ t
  THEN WHILESTAT_0_SEQ_0_LEVEL_0
  ELSE WHILEEND_0_LEVEL_0
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0
  IPARAM k
  IASM "MOV %r, R0"
  IPARAM j
  IASM "MOV R0, %r"
  IASM "SWI 6"
  DEF u := 1 <INT>
  DEF v := i IADD u <INT>
  i := v <INT>
  IPARAM j
  IPARAM h
  IPARAM i
  IASM "LDRB %r, [%r, +%r]"
  IPARAM j
  IPARAM j
  IASM "STR %r, %a"
  IPARAM k
  IASM "MOV R0, %r"
  CALL IntIsZero([j -> p]<INT>)
  DEF w := (RETURN q) <BOOL>
  DEF x := BNOT w <BOOL>
  s := x <BOOL>
  GOTO WHILECOND_0_SEQ_0_LEVEL_0
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0
  LABEL WHILEEND_0_LEVEL_0
 RETURN FROM WriteString
 PROC LABEL WriteInt
  DEF y := 0 <INT>
  IPARAM y
  IASM "MOV %r, R0"
  IPARAM (PARAM b)
  IASM "LDR R0, %a"
  IASM "SWI 1"
  IPARAM y
  IASM "MOV R0, %r"
 RETURN FROM WriteInt
 PROC LABEL WriteReal
  DEF z := 0 <INT>
  IPARAM z
  IASM "MOV %r, R0"
  IPARAM (PARAM c)
  IASM "LDR R0, %a"
  IASM "SWI 2"
  IPARAM z
  IASM "MOV R0, %r"
 RETURN FROM WriteReal
 PROC LABEL WriteBool
  DEF A := 0 <INT>
  IPARAM A
  IASM "MOV %r, R0"
  IPARAM (PARAM d)
  IASM "LDRB R0, %a"
  IASM "SWI 6"
  IPARAM A
  IASM "MOV R0, %r"
 RETURN FROM WriteBool
 PROC LABEL ReadInt
  DEF B := 0 <INT>
  DEF C := 0 <INT>
  IPARAM C
  IASM "MOV %r, R0"
  IASM "SWI 3"
  IPARAM B
  IASM "STR R0, %a"
  IPARAM C
  IASM "MOV R0, %r"
  DEF RETURN e := B <INT>
 RETURN FROM ReadInt
 PROC LABEL ReadReal
  DEF D := 0.0 <REAL>
  DEF E := 0 <INT>
  IPARAM E
  IASM "MOV %r, R0"
  IASM "SWI 5"
  IPARAM D
  IASM "STR R0, %a"
  IPARAM E
  IASM "MOV R0, %r"
  DEF RETURN f := D <REAL>
 RETURN FROM ReadReal
 PROC LABEL ReadBool
  DEF F := FALSE <BOOL>
  DEF G := 0 <INT>
  IPARAM G
  IASM "MOV %r, R0"
  IASM "SWI 7"
  IPARAM F
  IASM "STRB R0, %a"
  IPARAM G
  IASM "MOV R0, %r"
  DEF RETURN g := F <BOOL>
 RETURN FROM ReadBool
