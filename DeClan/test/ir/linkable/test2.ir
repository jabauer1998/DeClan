SYMBOL SECTION
 ENTRY b EXTERNAL PARAM INeg 0 <INT>
 ENTRY c EXTERNAL RETURN INeg <INT>
 ENTRY e CONST INTERNAL GLOBAL answer  <INT>
 ENTRY f INTERNAL GLOBAL n  <INT>
 ENTRY g INTERNAL PARAM arg Display 0 <INT>
 ENTRY u EXTERNAL PARAM WriteInt 0 <INT>
 ENTRY A INTERNAL answer Display <BOOL>
 ENTRY C EXTERNAL PARAM Mod 0 <INT>
 ENTRY D EXTERNAL PARAM Mod 1 <INT>
 ENTRY E EXTERNAL RETURN Mod <INT>
 ENTRY N EXTERNAL PARAM Div 0 <INT>
 ENTRY O EXTERNAL PARAM Div 1 <INT>
 ENTRY P EXTERNAL RETURN Div <INT>
DATA SECTION
 DEF a := 42 <INT>
 CALL INeg([a -> b]<INT>)
 DEF d := (RETURN c) <INT>
 DEF GLOBAL e := d <INT>
BSS SECTION
 DEF GLOBAL f := 0 <INT>
CODE SECTION
 GLOBAL f := (GLOBAL e) <INT>
 DEF h := 0 <INT>
 DEF i := (GLOBAL f) LT h <BOOL>
 DEF j := TRUE <BOOL>
 IF i BEQ j
 THEN WHILESTAT_0_SEQ_0_LEVEL_0
 ELSE WHILENEXT_0_SEQ_0_LEVEL_0
 LABEL WHILECOND_0_SEQ_0_LEVEL_0
 IF i BEQ j
 THEN WHILESTAT_0_SEQ_0_LEVEL_0
 ELSE WHILEEND_0_LEVEL_0
 LABEL WHILESTAT_0_SEQ_0_LEVEL_0
 CALL INeg([(GLOBAL f) -> b]<INT>)
 DEF k := (RETURN c) <INT>
 GLOBAL f := k <INT>
 DEF l := 0 <INT>
 DEF m := (GLOBAL f) LT l <BOOL>
 i := m <BOOL>
 GOTO WHILECOND_0_SEQ_0_LEVEL_0
 LABEL WHILENEXT_0_SEQ_0_LEVEL_0
 DEF n := 0 <INT>
 DEF o := (GLOBAL f) GT n <BOOL>
 DEF p := TRUE <BOOL>
 IF o BEQ p
 THEN WHILESTAT_0_SEQ_1_LEVEL_0
 ELSE WHILENEXT_0_SEQ_1_LEVEL_0
 LABEL WHILECOND_0_SEQ_1_LEVEL_0
 IF o BEQ p
 THEN WHILESTAT_0_SEQ_1_LEVEL_0
 ELSE WHILEEND_0_LEVEL_0
 LABEL WHILESTAT_0_SEQ_1_LEVEL_0
 CALL Display([(GLOBAL f) -> g]<INT>)
 DEF q := 0 <INT>
 DEF r := (GLOBAL f) GT q <BOOL>
 o := r <BOOL>
 GOTO WHILECOND_0_SEQ_1_LEVEL_0
 LABEL WHILENEXT_0_SEQ_1_LEVEL_0
 LABEL WHILEEND_0_LEVEL_0
 DEF s := 10 <INT>
 GLOBAL f := s <INT>
 DEF t := 2 <INT>
 LABEL FORBEG_0_LEVEL_0
 IF (GLOBAL f) GT t
 THEN FORLOOP_0_LEVEL_0
 ELSE FOREND_0_LEVEL_0
 LABEL FORLOOP_0_LEVEL_0
 CALL WriteInt([(GLOBAL f) -> u]<INT>)
 DEF v := 1 <INT>
 CALL INeg([v -> b]<INT>)
 DEF w := (RETURN c) <INT>
 GLOBAL f := (GLOBAL f) IADD w <INT>
 GOTO FORBEG_0_LEVEL_0
 LABEL FOREND_0_LEVEL_0
 DEF x := TRUE <BOOL>
 DEF y := TRUE <BOOL>
 LABEL REPEATBEG_0_LEVEL_0
 IF x BEQ y
 THEN REPEATEND_0_LEVEL_0
 ELSE REPEATLOOP_0_LEVEL_0
 LABEL REPEATLOOP_0_LEVEL_0
 CALL Display([(GLOBAL f) -> g]<INT>)
 DEF z := TRUE <BOOL>
 x := z <BOOL>
 GOTO REPEATBEG_0_LEVEL_0
 LABEL REPEATEND_0_LEVEL_0
END
PROC SECTION
 PROC LABEL Display
  DEF A := FALSE <BOOL>
  DEF B := 2 <INT>
  CALL Mod([(PARAM g) -> C]<INT>, [B -> D]<INT>)
  DEF F := (RETURN E) <INT>
  DEF G := 0 <INT>
  DEF H := F INE G <BOOL>
  A := H <BOOL>
  DEF I := TRUE <BOOL>
  IF A BEQ I
  THEN IFSTAT_0_SEQ_0_LEVEL_0
  ELSE IFNEXT_0_SEQ_0_LEVEL_0
  LABEL IFSTAT_0_SEQ_0_LEVEL_0
  DEF J := 1 <INT>
  CALL WriteInt([J -> u]<INT>)
  DEF K := 1 <INT>
  DEF L := (PARAM g) ISUB K <INT>
  DEF M := 2 <INT>
  CALL Div([L -> N]<INT>, [M -> O]<INT>)
  DEF Q := (RETURN P) <INT>
  PARAM g := Q <INT>
  GOTO IFEND_0_LEVEL_0
  LABEL IFNEXT_0_SEQ_0_LEVEL_0
  DEF R := 0 <INT>
  DEF S := (PARAM g) IEQ R <BOOL>
  DEF T := TRUE <BOOL>
  IF S BEQ T
  THEN IFSTAT_0_SEQ_1_LEVEL_0
  ELSE IFNEXT_0_SEQ_1_LEVEL_0
  LABEL IFSTAT_0_SEQ_1_LEVEL_0
  DEF U := 1 <INT>
  CALL INeg([U -> b]<INT>)
  DEF V := (RETURN c) <INT>
  CALL WriteInt([V -> u]<INT>)
  GOTO IFEND_0_LEVEL_0
  LABEL IFNEXT_0_SEQ_1_LEVEL_0
  DEF W := 0 <INT>
  CALL WriteInt([W -> u]<INT>)
  DEF X := 2 <INT>
  CALL Div([(PARAM g) -> N]<INT>, [X -> O]<INT>)
  DEF Y := (RETURN P) <INT>
  PARAM g := Y <INT>
  GOTO IFEND_0_LEVEL_0
  LABEL IFNEXT_0_SEQ_2_LEVEL_0
  LABEL IFEND_0_LEVEL_0
 RETURN FROM Display
