SYMBOL SECTION
 ENTRY f28 INTERNAL low Multiply <INT>
 ENTRY f29 INTERNAL high Multiply <INT>
 ENTRY f30 INTERNAL PARAM a Multiply 0 <INT>
 ENTRY f31 INTERNAL PARAM b Multiply 1 <INT>
 ENTRY f32 INTERNAL RETURN Multiply <INT>
 ENTRY f34 CONST INTERNAL GLOBAL a  <INT>
 ENTRY f36 INTERNAL total Mod <INT>
 ENTRY f37 INTERNAL result Mod <INT>
 ENTRY f38 INTERNAL PARAM dividend Mod 0 <INT>
 ENTRY f40 INTERNAL PARAM divisor Mod 1 <INT>
 ENTRY f48 INTERNAL RETURN Mod <INT>
 ENTRY f50 CONST INTERNAL GLOBAL b  <INT>
 ENTRY f51 INTERNAL GLOBAL result  <REAL>
 ENTRY f52 INTERNAL divResult Divide <REAL>
 ENTRY f53 INTERNAL realDividend Divide <REAL>
 ENTRY f54 INTERNAL realDivisor Divide <REAL>
 ENTRY f55 INTERNAL result IntToReal <REAL>
 ENTRY f56 INTERNAL absN IntToReal <INT>
 ENTRY f57 INTERNAL isNeg IntToReal <BOOL>
 ENTRY f58 INTERNAL intResult IntToReal <INT>
 ENTRY f59 INTERNAL furthestOne IntToReal <INT>
 ENTRY f60 INTERNAL count IntToReal <INT>
 ENTRY f61 INTERNAL tempN IntToReal <INT>
 ENTRY f62 INTERNAL lastBit IntToReal <INT>
 ENTRY f63 INTERNAL fullExponent IntToReal <INT>
 ENTRY f64 INTERNAL exponent IntToReal <INT>
 ENTRY f65 INTERNAL mantissa IntToReal <INT>
 ENTRY f66 INTERNAL mantissaMask IntToReal <INT>
 ENTRY f67 INTERNAL toShiftOver IntToReal <INT>
 ENTRY f68 INTERNAL result Abs <INT>
 ENTRY f71 INTERNAL PARAM n Abs 0 <INT>
 ENTRY f73 INTERNAL result INeg <INT>
 ENTRY f75 INTERNAL PARAM n INeg 0 <INT>
 ENTRY f78 INTERNAL RETURN INeg <INT>
 ENTRY f80 INTERNAL RETURN Abs <INT>
 ENTRY g64 INTERNAL PARAM n IntToReal 0 <INT>
 ENTRY f83 INTERNAL result IntIsNegative <BOOL>
 ENTRY f84 INTERNAL thirtyFirstBit IntIsNegative <INT>
 ENTRY f87 INTERNAL PARAM n IntIsNegative 0 <INT>
 ENTRY f95 INTERNAL RETURN IntIsNegative <BOOL>
 ENTRY f97 INTERNAL result IntIsZero <BOOL>
 ENTRY g10 INTERNAL PARAM n IntIsZero 0 <INT>
 ENTRY g14 INTERNAL RETURN IntIsZero <BOOL>
 ENTRY h78 CONST INTERNAL GLOBAL realBias  <INT>
 ENTRY g58 INTERNAL result IntBinaryAsReal <REAL>
 ENTRY g59 INTERNAL temp IntBinaryAsReal <INT>
 ENTRY g60 INTERNAL RETURN IntBinaryAsReal <REAL>
 ENTRY g63 INTERNAL RETURN IntToReal <REAL>
 ENTRY h84 INTERNAL PARAM dividend Divide 0 <INT>
 ENTRY h85 INTERNAL PARAM divisor Divide 1 <INT>
 ENTRY T3 INTERNAL result RDivide <REAL>
 ENTRY T4 INTERNAL intResult RDivide <INT>
 ENTRY T5 INTERNAL n1Sign RDivide <INT>
 ENTRY T6 INTERNAL n2Sign RDivide <INT>
 ENTRY T7 INTERNAL n1Exp RDivide <INT>
 ENTRY T8 INTERNAL n2Exp RDivide <INT>
 ENTRY T9 INTERNAL n1Base RDivide <INT>
 ENTRY U0 INTERNAL n2Base RDivide <INT>
 ENTRY U1 INTERNAL resultSign RDivide <INT>
 ENTRY U2 INTERNAL resultBase RDivide <INT>
 ENTRY U3 INTERNAL resultExp RDivide <INT>
 ENTRY U4 INTERNAL n2Count RDivide <INT>
 ENTRY U5 INTERNAL n2LastDigit RDivide <INT>
 ENTRY U6 INTERNAL n2TempBase RDivide <INT>
 ENTRY U7 INTERNAL n2FirstOne RDivide <INT>
 ENTRY U8 INTERNAL n2LastOne RDivide <INT>
 ENTRY U9 INTERNAL toShiftExp RDivide <INT>
 ENTRY V0 INTERNAL toShiftBase RDivide <INT>
 ENTRY V1 INTERNAL toShiftBack RDivide <INT>
 ENTRY V2 INTERNAL resultLastOne RDivide <INT>
 ENTRY V3 INTERNAL resultLastDigit RDivide <INT>
 ENTRY V4 INTERNAL count RDivide <INT>
 ENTRY V5 INTERNAL resultTempBase RDivide <INT>
 ENTRY V6 INTERNAL n1DecimalPlace RDivide <INT>
 ENTRY V7 INTERNAL resultDecimalPlace RDivide <INT>
 ENTRY V8 INTERNAL roundIndex RDivide <INT>
 ENTRY V9 INTERNAL afterRound RDivide <INT>
 ENTRY W0 INTERNAL lowBase RDivide <INT>
 ENTRY W1 INTERNAL hiBase RDivide <INT>
 ENTRY W2 INTERNAL lowDiff RDivide <INT>
 ENTRY W3 INTERNAL hiDiff RDivide <INT>
 ENTRY W4 INTERNAL lowBit RDivide <INT>
 ENTRY W5 INTERNAL hiBit RDivide <INT>
 ENTRY W6 INTERNAL resultBitStorage RDivide <INT>
 ENTRY W7 INTERNAL lowBitStorage RDivide <INT>
 ENTRY W8 INTERNAL hiBitStorage RDivide <INT>
 ENTRY g67 INTERNAL result RealSign <INT>
 ENTRY g68 INTERNAL realAsInteger RealSign <INT>
 ENTRY g69 INTERNAL result RealBinaryAsInt <INT>
 ENTRY g70 INTERNAL temp RealBinaryAsInt <REAL>
 ENTRY g71 INTERNAL PARAM r RealBinaryAsInt 0 <REAL>
 ENTRY g72 INTERNAL RETURN RealBinaryAsInt <INT>
 ENTRY g79 INTERNAL PARAM r RealSign 0 <REAL>
 ENTRY g78 INTERNAL RETURN RealSign <INT>
 ENTRY h80 INTERNAL PARAM n1 RDivide 0 <REAL>
 ENTRY h81 INTERNAL PARAM n2 RDivide 1 <REAL>
 ENTRY g80 INTERNAL result RealExponent <INT>
 ENTRY g81 INTERNAL realAsInteger RealExponent <INT>
 ENTRY g82 INTERNAL exponent RealExponent <INT>
 ENTRY g92 INTERNAL PARAM r RealExponent 0 <REAL>
 ENTRY g91 INTERNAL RETURN RealExponent <INT>
 ENTRY g93 INTERNAL result RealMantissa <INT>
 ENTRY g94 INTERNAL realAsInt RealMantissa <INT>
 ENTRY g95 INTERNAL significand RealMantissa <INT>
 ENTRY g96 INTERNAL exp RealMantissa <INT>
 ENTRY h28 INTERNAL PARAM r RealMantissa 0 <REAL>
 ENTRY h10 INTERNAL result RealIsZero <BOOL>
 ENTRY h11 INTERNAL val RealIsZero <INT>
 ENTRY h12 INTERNAL exp RealIsZero <INT>
 ENTRY h22 INTERNAL PARAM r RealIsZero 0 <REAL>
 ENTRY h21 INTERNAL RETURN RealIsZero <BOOL>
 ENTRY h27 INTERNAL RETURN RealMantissa <INT>
 ENTRY h29 INTERNAL total Div <INT>
 ENTRY h30 INTERNAL result Div <INT>
 ENTRY h31 INTERNAL tempDividend Div <INT>
 ENTRY h32 INTERNAL dividendLastOne Div <INT>
 ENTRY h33 INTERNAL dividendLastDigit Div <INT>
 ENTRY h34 INTERNAL dividendCount Div <INT>
 ENTRY h35 INTERNAL dividendIndex Div <INT>
 ENTRY h36 INTERNAL bitAtIndex Div <INT>
 ENTRY h37 INTERNAL remainder Div <INT>
 ENTRY h38 INTERNAL PARAM dividend Div 0 <INT>
 ENTRY h67 INTERNAL PARAM divisor Div 1 <INT>
 ENTRY h77 INTERNAL RETURN Div <INT>
 ENTRY h79 INTERNAL RETURN RDivide <REAL>
 ENTRY h83 INTERNAL RETURN Divide <REAL>
 ENTRY h87 INTERNAL tempReg WriteReal <INT>
 ENTRY h88 INTERNAL PARAM r WriteReal 0 <REAL>
DATA SECTION
 DEF f24 := 6 <INT>
 DEF f25 := 6 <INT>
 DEF f26 := 1 <INT>
 DEF f27 := f25 IADD f26 <INT>
 CALL Multiply([f24 -> f30]<INT>, [f27 -> f31]<INT>)
 DEF f33 := (RETURN f32) <INT>
 DEF GLOBAL f34 := f33 <INT>
 DEF f35 := 10 <INT>
 CALL Mod([(GLOBAL f34) -> f38]<INT>, [f35 -> f40]<INT>)
 DEF f49 := (RETURN f48) <INT>
 DEF GLOBAL f50 := f49 <INT>
 DEF g45 := 127 <INT>
 DEF GLOBAL h78 := g45 <INT>
BSS SECTION
 DEF GLOBAL f51 := 0.0 <REAL>
CODE SECTION
 CALL Divide([(GLOBAL f34) -> h84]<INT>, [(GLOBAL f50) -> h85]<INT>)
 DEF h86 := (RETURN h83) <REAL>
 GLOBAL f51 := h86 <REAL>
 CALL WriteReal([(GLOBAL f51) -> h88]<REAL>)
END
PROC SECTION
 PROC LABEL Multiply
  DEF f28 := 0 <INT>
  DEF f29 := 0 <INT>
  IPARAM f28 <INT> %dr
  IPARAM f29 <INT> %dr
  IPARAM (PARAM f30) <INT> %r
  IPARAM (PARAM f31) <INT> %r
  IASM "MULL %dr, %dr, %ur, %ur"
  DEF RETURN f32 := f28 <INT>
 RETURN FROM Multiply
 PROC LABEL Mod
  DEF f36 := 0 <INT>
  DEF f37 := 0 <INT>
  f36 := (PARAM f38) <INT>
  DEF f39 := f36 ISUB (PARAM f40) <INT>
  DEF f41 := 0 <INT>
  DEF f42 := f39 GE f41 <BOOL>
  DEF f43 := TRUE <BOOL>
  IF f42 BEQ f43
  THEN WHILESTAT_4_SEQ_0_LEVEL_0_0
  ELSE WHILENEXT_4_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_4_SEQ_0_LEVEL_0_0
  IF f42 BEQ f43
  THEN WHILESTAT_4_SEQ_0_LEVEL_0_0
  ELSE WHILEEND_4_LEVEL_0_0
  LABEL WHILESTAT_4_SEQ_0_LEVEL_0_0
  DEF f44 := f36 ISUB (PARAM f40) <INT>
  f36 := f44 <INT>
  DEF f45 := f36 ISUB (PARAM f40) <INT>
  DEF f46 := 0 <INT>
  DEF f47 := f45 GE f46 <BOOL>
  f42 := f47 <BOOL>
  GOTO WHILECOND_4_SEQ_0_LEVEL_0_0
  LABEL WHILENEXT_4_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_4_LEVEL_0_0
  DEF RETURN f48 := f36 <INT>
 RETURN FROM Mod
 PROC LABEL Divide
  DEF f52 := 0.0 <REAL>
  DEF f53 := 0.0 <REAL>
  DEF f54 := 0.0 <REAL>
  CALL IntToReal([(PARAM h84) -> g64]<INT>)
  DEF g65 := (RETURN g63) <REAL>
  f53 := g65 <REAL>
  CALL IntToReal([(PARAM h85) -> g64]<INT>)
  DEF g66 := (RETURN g63) <REAL>
  f54 := g66 <REAL>
  CALL RDivide([f53 -> h80]<REAL>, [f54 -> h81]<REAL>)
  DEF h82 := (RETURN h79) <REAL>
  f52 := h82 <REAL>
  DEF RETURN h83 := f52 <REAL>
 RETURN FROM Divide
 PROC LABEL IntToReal
  DEF f55 := 0.0 <REAL>
  DEF f56 := 0 <INT>
  DEF f57 := FALSE <BOOL>
  DEF f58 := 0 <INT>
  DEF f59 := 0 <INT>
  DEF f60 := 0 <INT>
  DEF f61 := 0 <INT>
  DEF f62 := 0 <INT>
  DEF f63 := 0 <INT>
  DEF f64 := 0 <INT>
  DEF f65 := 0 <INT>
  DEF f66 := 0 <INT>
  DEF f67 := 0 <INT>
  CALL Abs([(PARAM g64) -> f71]<INT>)
  DEF f81 := (RETURN f80) <INT>
  f56 := f81 <INT>
  f61 := f56 <INT>
  DEF f82 := 0 <INT>
  f60 := f82 <INT>
  CALL IntIsNegative([(PARAM g64) -> f87]<INT>)
  DEF f96 := (RETURN f95) <BOOL>
  f57 := f96 <BOOL>
  CALL IntIsZero([f61 -> g10]<INT>)
  DEF g15 := (RETURN g14) <BOOL>
  DEF g16 := TRUE <BOOL>
  IF g15 BEQ g16
  THEN IFSTAT_0_SEQ_0_LEVEL_0_1
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_1
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_1
  DEF g17 := 0 <INT>
  f58 := g17 <INT>
  GOTO IFEND_0_LEVEL_0_1
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_1
  CALL IntIsZero([f61 -> g10]<INT>)
  DEF g18 := (RETURN g14) <BOOL>
  DEF g19 := BNOT g18 <BOOL>
  DEF g20 := TRUE <BOOL>
  IF g19 BEQ g20
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_0
  ELSE WHILENEXT_0_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_0_SEQ_0_LEVEL_0_0
  IF g19 BEQ g20
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_0
  ELSE WHILEEND_0_LEVEL_0_0
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0_0
  DEF g21 := 1 <INT>
  DEF g22 := f61 IAND g21 <INT>
  f62 := g22 <INT>
  DEF g23 := 1 <INT>
  DEF g24 := f62 IEQ g23 <BOOL>
  DEF g25 := TRUE <BOOL>
  IF g24 BEQ g25
  THEN IFSTAT_1_SEQ_0_LEVEL_1
  ELSE IFNEXT_1_SEQ_0_LEVEL_1
  LABEL IFSTAT_1_SEQ_0_LEVEL_1
  f59 := f60 <INT>
  GOTO IFEND_1_LEVEL_1
  LABEL IFNEXT_1_SEQ_0_LEVEL_1
  LABEL IFEND_1_LEVEL_1
  DEF g26 := 1 <INT>
  DEF g27 := f60 IADD g26 <INT>
  f60 := g27 <INT>
  DEF g28 := 1 <INT>
  DEF g29 := f61 IRSHIFT g28 <INT>
  f61 := g29 <INT>
  CALL IntIsZero([f61 -> g10]<INT>)
  DEF g30 := (RETURN g14) <BOOL>
  DEF g31 := BNOT g30 <BOOL>
  g19 := g31 <BOOL>
  GOTO WHILECOND_0_SEQ_0_LEVEL_0_0
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_0_LEVEL_0_0
  DEF g32 := 23 <INT>
  DEF g33 := f59 GT g32 <BOOL>
  DEF g34 := TRUE <BOOL>
  IF g33 BEQ g34
  THEN IFSTAT_2_SEQ_0_LEVEL_1_0
  ELSE IFNEXT_2_SEQ_0_LEVEL_1_0
  LABEL IFSTAT_2_SEQ_0_LEVEL_1_0
  DEF g35 := 23 <INT>
  DEF g36 := f59 ISUB g35 <INT>
  DEF g37 := f56 IRSHIFT g36 <INT>
  f56 := g37 <INT>
  GOTO IFEND_2_LEVEL_1_0
  LABEL IFNEXT_2_SEQ_0_LEVEL_1_0
  DEF g38 := 23 <INT>
  DEF g39 := f59 LT g38 <BOOL>
  DEF g40 := TRUE <BOOL>
  IF g39 BEQ g40
  THEN IFSTAT_2_SEQ_1_LEVEL_1_0
  ELSE IFNEXT_2_SEQ_1_LEVEL_1_0
  LABEL IFSTAT_2_SEQ_1_LEVEL_1_0
  DEF g41 := 23 <INT>
  DEF g42 := g41 ISUB f59 <INT>
  DEF g43 := f56 ILSHIFT g42 <INT>
  f56 := g43 <INT>
  GOTO IFEND_2_LEVEL_1_0
  LABEL IFNEXT_2_SEQ_1_LEVEL_1_0
  LABEL IFEND_2_LEVEL_1_0
  DEF g44 := f59 IADD (GLOBAL h78) <INT>
  f64 := g44 <INT>
  DEF g48 := 8388607 <INT>
  f66 := g48 <INT>
  DEF g49 := f56 IAND f66 <INT>
  f65 := g49 <INT>
  f58 := f65 <INT>
  DEF g50 := 23 <INT>
  DEF g51 := f64 ILSHIFT g50 <INT>
  DEF g52 := f58 IOR g51 <INT>
  f58 := g52 <INT>
  DEF g53 := TRUE <BOOL>
  IF f57 BEQ g53
  THEN IFSTAT_3_SEQ_0_LEVEL_1
  ELSE IFNEXT_3_SEQ_0_LEVEL_1
  LABEL IFSTAT_3_SEQ_0_LEVEL_1
  DEF g54 := 1 <INT>
  DEF g55 := 31 <INT>
  DEF g56 := g54 ILSHIFT g55 <INT>
  DEF g57 := f58 IOR g56 <INT>
  f58 := g57 <INT>
  GOTO IFEND_3_LEVEL_1
  LABEL IFNEXT_3_SEQ_0_LEVEL_1
  LABEL IFEND_3_LEVEL_1
  GOTO IFEND_0_LEVEL_0_1
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_1
  LABEL IFEND_0_LEVEL_0_1
  CALL IntBinaryAsReal([f58 -> g61]<INT>)
  DEF g62 := (RETURN g60) <REAL>
  f55 := g62 <REAL>
  DEF RETURN g63 := f55 <REAL>
 RETURN FROM IntToReal
 PROC LABEL Abs
  DEF f68 := 0 <INT>
  DEF f69 := 0 <INT>
  DEF f70 := (PARAM f71) GE f69 <BOOL>
  DEF f72 := TRUE <BOOL>
  IF f70 BEQ f72
  THEN IFSTAT_0_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_0
  f68 := (PARAM f71) <INT>
  GOTO IFEND_0_LEVEL_0_0
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_0
  CALL INeg([(PARAM f71) -> f75]<INT>)
  DEF f79 := (RETURN f78) <INT>
  f68 := f79 <INT>
  GOTO IFEND_0_LEVEL_0_0
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_0
  LABEL IFEND_0_LEVEL_0_0
  DEF RETURN f80 := f68 <INT>
 RETURN FROM Abs
 PROC LABEL INeg
  DEF f73 := 0 <INT>
  DEF f74 := INOT (PARAM f75) <INT>
  DEF f76 := 1 <INT>
  DEF f77 := f74 IADD f76 <INT>
  f73 := f77 <INT>
  DEF RETURN f78 := f73 <INT>
 RETURN FROM INeg
 PROC LABEL IntIsNegative
  DEF f83 := FALSE <BOOL>
  DEF f84 := 0 <INT>
  DEF f85 := 31 <INT>
  DEF f86 := (PARAM f87) IRSHIFT f85 <INT>
  DEF f88 := 1 <INT>
  DEF f89 := f86 IAND f88 <INT>
  f84 := f89 <INT>
  DEF f90 := 0 <INT>
  DEF f91 := f84 IEQ f90 <BOOL>
  DEF f92 := TRUE <BOOL>
  IF f91 BEQ f92
  THEN IFSTAT_2_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_2_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_2_SEQ_0_LEVEL_0_0
  DEF f93 := FALSE <BOOL>
  f83 := f93 <BOOL>
  GOTO IFEND_2_LEVEL_0_0
  LABEL IFNEXT_2_SEQ_0_LEVEL_0_0
  DEF f94 := TRUE <BOOL>
  f83 := f94 <BOOL>
  GOTO IFEND_2_LEVEL_0_0
  LABEL IFNEXT_2_SEQ_1_LEVEL_0_0
  LABEL IFEND_2_LEVEL_0_0
  DEF RETURN f95 := f83 <BOOL>
 RETURN FROM IntIsNegative
 PROC LABEL IntIsZero
  DEF f97 := FALSE <BOOL>
  DEF f98 := 0 <INT>
  DEF f99 := (PARAM g10) IEQ f98 <BOOL>
  DEF g11 := TRUE <BOOL>
  IF f99 BEQ g11
  THEN IFSTAT_1_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_1_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_0
  DEF g12 := TRUE <BOOL>
  f97 := g12 <BOOL>
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_0
  DEF g13 := FALSE <BOOL>
  f97 := g13 <BOOL>
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_1_LEVEL_0_0
  LABEL IFEND_1_LEVEL_0_0
  DEF RETURN g14 := f97 <BOOL>
 RETURN FROM IntIsZero
 PROC LABEL IntBinaryAsReal
  DEF g58 := 0.0 <REAL>
  DEF g59 := 0 <INT>
  IPARAM g59 <INT> %dr
  IPARAM (PARAM g61) <INT> %a
  IASM "LDR %dr, %ua"
  IPARAM g59 <INT> %r
  IPARAM g58 <REAL> %da
  IASM "STR %ur, %da"
  DEF RETURN g60 := g58 <REAL>
 RETURN FROM IntBinaryAsReal
 PROC LABEL RDivide
  DEF T3 := 0.0 <REAL>
  DEF T4 := 0 <INT>
  DEF T5 := 0 <INT>
  DEF T6 := 0 <INT>
  DEF T7 := 0 <INT>
  DEF T8 := 0 <INT>
  DEF T9 := 0 <INT>
  DEF U0 := 0 <INT>
  DEF U1 := 0 <INT>
  DEF U2 := 0 <INT>
  DEF U3 := 0 <INT>
  DEF U4 := 0 <INT>
  DEF U5 := 0 <INT>
  DEF U6 := 0 <INT>
  DEF U7 := 0 <INT>
  DEF U8 := 0 <INT>
  DEF U9 := 0 <INT>
  DEF V0 := 0 <INT>
  DEF V1 := 0 <INT>
  DEF V2 := 0 <INT>
  DEF V3 := 0 <INT>
  DEF V4 := 0 <INT>
  DEF V5 := 0 <INT>
  DEF V6 := 0 <INT>
  DEF V7 := 0 <INT>
  DEF V8 := 0 <INT>
  DEF V9 := 0 <INT>
  DEF W0 := 0 <INT>
  DEF W1 := 0 <INT>
  DEF W2 := 0 <INT>
  DEF W3 := 0 <INT>
  DEF W4 := 0 <INT>
  DEF W5 := 0 <INT>
  DEF W6 := 0 <INT>
  DEF W7 := 0 <INT>
  DEF W8 := 0 <INT>
  CALL RealSign([(PARAM h80) -> g79]<REAL>)
  DEF W9 := (RETURN g78) <INT>
  T5 := W9 <INT>
  CALL RealSign([(PARAM h81) -> g79]<REAL>)
  DEF X0 := (RETURN g78) <INT>
  T6 := X0 <INT>
  CALL RealExponent([(PARAM h80) -> g92]<REAL>)
  DEF X1 := (RETURN g91) <INT>
  T7 := X1 <INT>
  CALL RealExponent([(PARAM h81) -> g92]<REAL>)
  DEF X2 := (RETURN g91) <INT>
  T8 := X2 <INT>
  CALL RealMantissa([(PARAM h80) -> h28]<REAL>)
  DEF X3 := (RETURN h27) <INT>
  T9 := X3 <INT>
  CALL RealMantissa([(PARAM h81) -> h28]<REAL>)
  DEF X4 := (RETURN h27) <INT>
  U0 := X4 <INT>
  CALL IntIsZero([T9 -> g10]<INT>)
  DEF X5 := (RETURN g14) <BOOL>
  CALL IntIsZero([U0 -> g10]<INT>)
  DEF X6 := (RETURN g14) <BOOL>
  DEF X7 := X5 LAND X6 <BOOL>
  DEF X8 := TRUE <BOOL>
  IF X7 BEQ X8
  THEN IFSTAT_30_SEQ_0_LEVEL_0
  ELSE IFNEXT_30_SEQ_0_LEVEL_0
  LABEL IFSTAT_30_SEQ_0_LEVEL_0
  DEF X9 := 1065353216 <INT>
  T4 := X9 <INT>
  GOTO IFEND_30_LEVEL_0
  LABEL IFNEXT_30_SEQ_0_LEVEL_0
  CALL IntIsZero([T9 -> g10]<INT>)
  DEF Y0 := (RETURN g14) <BOOL>
  DEF Y1 := BNOT Y0 <BOOL>
  CALL IntIsZero([U0 -> g10]<INT>)
  DEF Y2 := (RETURN g14) <BOOL>
  DEF Y3 := Y1 LAND Y2 <BOOL>
  DEF Y4 := TRUE <BOOL>
  IF Y3 BEQ Y4
  THEN IFSTAT_30_SEQ_1_LEVEL_0
  ELSE IFNEXT_30_SEQ_1_LEVEL_0
  LABEL IFSTAT_30_SEQ_1_LEVEL_0
  DEF Y5 := 2139095040 <INT>
  T4 := Y5 <INT>
  GOTO IFEND_30_LEVEL_0
  LABEL IFNEXT_30_SEQ_1_LEVEL_0
  CALL IntIsZero([T9 -> g10]<INT>)
  DEF Y6 := (RETURN g14) <BOOL>
  CALL IntIsZero([U0 -> g10]<INT>)
  DEF Y7 := (RETURN g14) <BOOL>
  DEF Y8 := BNOT Y7 <BOOL>
  DEF Y9 := Y6 LAND Y8 <BOOL>
  DEF Z0 := TRUE <BOOL>
  IF Y9 BEQ Z0
  THEN IFSTAT_30_SEQ_2_LEVEL_0
  ELSE IFNEXT_30_SEQ_2_LEVEL_0
  LABEL IFSTAT_30_SEQ_2_LEVEL_0
  DEF Z1 := 0 <INT>
  T4 := Z1 <INT>
  GOTO IFEND_30_LEVEL_0
  LABEL IFNEXT_30_SEQ_2_LEVEL_0
  DEF Z2 := 30 <INT>
  DEF Z3 := 23 <INT>
  DEF Z4 := Z2 ISUB Z3 <INT>
  V0 := Z4 <INT>
  DEF Z5 := T9 ILSHIFT V0 <INT>
  T9 := Z5 <INT>
  DEF Z6 := 0 <INT>
  U4 := Z6 <INT>
  U6 := U0 <INT>
  DEF Z7 := 1 <INT>
  DEF Z8 := U6 IAND Z7 <INT>
  DEF Z9 := 0 <INT>
  DEF a10 := Z8 IEQ Z9 <BOOL>
  DEF a11 := TRUE <BOOL>
  IF a10 BEQ a11
  THEN WHILESTAT_18_SEQ_0_LEVEL_0
  ELSE WHILENEXT_18_SEQ_0_LEVEL_0
  LABEL WHILECOND_18_SEQ_0_LEVEL_0
  IF a10 BEQ a11
  THEN WHILESTAT_18_SEQ_0_LEVEL_0
  ELSE WHILEEND_18_LEVEL_0
  LABEL WHILESTAT_18_SEQ_0_LEVEL_0
  DEF a12 := 1 <INT>
  DEF a13 := U6 IRSHIFT a12 <INT>
  U6 := a13 <INT>
  DEF a14 := 1 <INT>
  DEF a15 := U4 IADD a14 <INT>
  U4 := a15 <INT>
  DEF a16 := 1 <INT>
  DEF a17 := U6 IAND a16 <INT>
  DEF a18 := 0 <INT>
  DEF a19 := a17 IEQ a18 <BOOL>
  a10 := a19 <BOOL>
  GOTO WHILECOND_18_SEQ_0_LEVEL_0
  LABEL WHILENEXT_18_SEQ_0_LEVEL_0
  LABEL WHILEEND_18_LEVEL_0
  U7 := U4 <INT>
  V0 := U7 <INT>
  DEF a20 := U0 IRSHIFT V0 <INT>
  U0 := a20 <INT>
  DEF a21 := 0 <INT>
  U4 := a21 <INT>
  U6 := U0 <INT>
  CALL IntIsZero([U6 -> g10]<INT>)
  DEF a22 := (RETURN g14) <BOOL>
  DEF a23 := BNOT a22 <BOOL>
  DEF a24 := TRUE <BOOL>
  IF a23 BEQ a24
  THEN WHILESTAT_20_SEQ_0_LEVEL_0
  ELSE WHILENEXT_20_SEQ_0_LEVEL_0
  LABEL WHILECOND_20_SEQ_0_LEVEL_0
  IF a23 BEQ a24
  THEN WHILESTAT_20_SEQ_0_LEVEL_0
  ELSE WHILEEND_20_LEVEL_0
  LABEL WHILESTAT_20_SEQ_0_LEVEL_0
  DEF a25 := 1 <INT>
  DEF a26 := U6 IAND a25 <INT>
  U5 := a26 <INT>
  DEF a27 := 1 <INT>
  DEF a28 := U5 IEQ a27 <BOOL>
  DEF a29 := TRUE <BOOL>
  IF a28 BEQ a29
  THEN IFSTAT_31_SEQ_0_LEVEL_1
  ELSE IFNEXT_31_SEQ_0_LEVEL_1
  LABEL IFSTAT_31_SEQ_0_LEVEL_1
  U8 := U4 <INT>
  GOTO IFEND_31_LEVEL_1
  LABEL IFNEXT_31_SEQ_0_LEVEL_1
  LABEL IFEND_31_LEVEL_1
  DEF a30 := 1 <INT>
  DEF a31 := U4 IADD a30 <INT>
  U4 := a31 <INT>
  DEF a32 := 1 <INT>
  DEF a33 := U6 IRSHIFT a32 <INT>
  U6 := a33 <INT>
  CALL IntIsZero([U6 -> g10]<INT>)
  DEF a34 := (RETURN g14) <BOOL>
  DEF a35 := BNOT a34 <BOOL>
  a23 := a35 <BOOL>
  GOTO WHILECOND_20_SEQ_0_LEVEL_0
  LABEL WHILENEXT_20_SEQ_0_LEVEL_0
  LABEL WHILEEND_20_LEVEL_0
  U9 := U8 <INT>
  DEF a36 := T7 ISUB U9 <INT>
  T7 := a36 <INT>
  DEF a37 := T8 ISUB U9 <INT>
  T8 := a37 <INT>
  DEF a38 := 30 <INT>
  DEF a39 := a38 ISUB U9 <INT>
  V6 := a39 <INT>
  V7 := V6 <INT>
  DEF a40 := T5 INE T6 <BOOL>
  DEF a41 := TRUE <BOOL>
  IF a40 BEQ a41
  THEN IFSTAT_32_SEQ_0_LEVEL_1
  ELSE IFNEXT_32_SEQ_0_LEVEL_1
  LABEL IFSTAT_32_SEQ_0_LEVEL_1
  DEF a42 := 1 <INT>
  U1 := a42 <INT>
  GOTO IFEND_32_LEVEL_1
  LABEL IFNEXT_32_SEQ_0_LEVEL_1
  DEF a43 := 0 <INT>
  U1 := a43 <INT>
  GOTO IFEND_32_LEVEL_1
  LABEL IFNEXT_32_SEQ_1_LEVEL_1
  LABEL IFEND_32_LEVEL_1
  DEF a44 := T7 ISUB T8 <INT>
  U3 := a44 <INT>
  CALL Div([T9 -> h38]<INT>, [U0 -> h67]<INT>)
  DEF a48 := (RETURN h77) <INT>
  U2 := a48 <INT>
  DEF a49 := 23 <INT>
  DEF a50 := V7 GT a49 <BOOL>
  DEF a51 := TRUE <BOOL>
  IF a50 BEQ a51
  THEN IFSTAT_33_SEQ_0_LEVEL_1
  ELSE IFNEXT_33_SEQ_0_LEVEL_1
  LABEL IFSTAT_33_SEQ_0_LEVEL_1
  DEF a52 := 23 <INT>
  DEF a53 := V7 ISUB a52 <INT>
  V1 := a53 <INT>
  DEF a54 := 1 <INT>
  DEF a55 := a54 ILSHIFT V1 <INT>
  DEF a56 := 1 <INT>
  DEF a57 := a55 ISUB a56 <INT>
  DEF a58 := U2 IAND a57 <INT>
  W6 := a58 <INT>
  DEF a59 := U2 IRSHIFT V1 <INT>
  U2 := a59 <INT>
  GOTO IFEND_33_LEVEL_1
  LABEL IFNEXT_33_SEQ_0_LEVEL_1
  DEF a60 := 23 <INT>
  DEF a61 := V7 LT a60 <BOOL>
  DEF a62 := TRUE <BOOL>
  IF a61 BEQ a62
  THEN IFSTAT_33_SEQ_1_LEVEL_1
  ELSE IFNEXT_33_SEQ_1_LEVEL_1
  LABEL IFSTAT_33_SEQ_1_LEVEL_1
  DEF a63 := 23 <INT>
  DEF a64 := a63 ISUB V7 <INT>
  V1 := a64 <INT>
  DEF a65 := U2 ILSHIFT V1 <INT>
  U2 := a65 <INT>
  DEF a66 := 0 <INT>
  W6 := a66 <INT>
  GOTO IFEND_33_LEVEL_1
  LABEL IFNEXT_33_SEQ_1_LEVEL_1
  LABEL IFEND_33_LEVEL_1
  DEF a67 := 0 <INT>
  V4 := a67 <INT>
  V5 := U2 <INT>
  DEF a68 := 0 <INT>
  V2 := a68 <INT>
  CALL IntIsZero([V5 -> g10]<INT>)
  DEF a69 := (RETURN g14) <BOOL>
  DEF a70 := BNOT a69 <BOOL>
  DEF a71 := TRUE <BOOL>
  IF a70 BEQ a71
  THEN WHILESTAT_22_SEQ_0_LEVEL_0
  ELSE WHILENEXT_22_SEQ_0_LEVEL_0
  LABEL WHILECOND_22_SEQ_0_LEVEL_0
  IF a70 BEQ a71
  THEN WHILESTAT_22_SEQ_0_LEVEL_0
  ELSE WHILEEND_22_LEVEL_0
  LABEL WHILESTAT_22_SEQ_0_LEVEL_0
  DEF a72 := 1 <INT>
  DEF a73 := V5 IAND a72 <INT>
  V3 := a73 <INT>
  DEF a74 := 1 <INT>
  DEF a75 := V3 IEQ a74 <BOOL>
  DEF a76 := TRUE <BOOL>
  IF a75 BEQ a76
  THEN IFSTAT_34_SEQ_0_LEVEL_1
  ELSE IFNEXT_34_SEQ_0_LEVEL_1
  LABEL IFSTAT_34_SEQ_0_LEVEL_1
  V2 := V4 <INT>
  GOTO IFEND_34_LEVEL_1
  LABEL IFNEXT_34_SEQ_0_LEVEL_1
  LABEL IFEND_34_LEVEL_1
  DEF a77 := 1 <INT>
  DEF a78 := V4 IADD a77 <INT>
  V4 := a78 <INT>
  DEF a79 := 1 <INT>
  DEF a80 := V5 IRSHIFT a79 <INT>
  V5 := a80 <INT>
  CALL IntIsZero([V5 -> g10]<INT>)
  DEF a81 := (RETURN g14) <BOOL>
  DEF a82 := BNOT a81 <BOOL>
  a70 := a82 <BOOL>
  GOTO WHILECOND_22_SEQ_0_LEVEL_0
  LABEL WHILENEXT_22_SEQ_0_LEVEL_0
  LABEL WHILEEND_22_LEVEL_0
  DEF a83 := 23 <INT>
  DEF a84 := V2 LT a83 <BOOL>
  DEF a85 := TRUE <BOOL>
  IF a84 BEQ a85
  THEN IFSTAT_35_SEQ_0_LEVEL_1
  ELSE IFNEXT_35_SEQ_0_LEVEL_1
  LABEL IFSTAT_35_SEQ_0_LEVEL_1
  DEF a86 := 23 <INT>
  DEF a87 := a86 ISUB V2 <INT>
  V0 := a87 <INT>
  DEF a88 := U2 ILSHIFT V0 <INT>
  U2 := a88 <INT>
  DEF a89 := V1 ISUB V0 <INT>
  DEF a90 := W6 IRSHIFT a89 <INT>
  DEF a91 := U2 IOR a90 <INT>
  U2 := a91 <INT>
  DEF a92 := U3 ISUB V0 <INT>
  U3 := a92 <INT>
  GOTO IFEND_35_LEVEL_1
  LABEL IFNEXT_35_SEQ_0_LEVEL_1
  LABEL IFEND_35_LEVEL_1
  DEF a93 := 1 <INT>
  DEF a94 := U2 IADD a93 <INT>
  W1 := a94 <INT>
  DEF a95 := 0 <INT>
  W8 := a95 <INT>
  W0 := U2 <INT>
  DEF a96 := 0 <INT>
  W7 := a96 <INT>
  DEF a97 := 1 <INT>
  DEF a98 := V1 ISUB a97 <INT>
  DEF a99 := W6 IRSHIFT a98 <INT>
  V2 := a99 <INT>
  DEF b10 := 1 <INT>
  DEF b11 := V2 IEQ b10 <BOOL>
  DEF b12 := TRUE <BOOL>
  IF b11 BEQ b12
  THEN IFSTAT_36_SEQ_0_LEVEL_1
  ELSE IFNEXT_36_SEQ_0_LEVEL_1
  LABEL IFSTAT_36_SEQ_0_LEVEL_1
  U2 := W1 <INT>
  W6 := W8 <INT>
  GOTO IFEND_36_LEVEL_1
  LABEL IFNEXT_36_SEQ_0_LEVEL_1
  DEF b13 := W2 GT W3 <BOOL>
  DEF b14 := TRUE <BOOL>
  IF b13 BEQ b14
  THEN IFSTAT_36_SEQ_1_LEVEL_1
  ELSE IFNEXT_36_SEQ_1_LEVEL_1
  LABEL IFSTAT_36_SEQ_1_LEVEL_1
  U2 := W0 <INT>
  W6 := W7 <INT>
  GOTO IFEND_36_LEVEL_1
  LABEL IFNEXT_36_SEQ_1_LEVEL_1
  DEF b15 := 1 <INT>
  DEF b16 := W0 IAND b15 <INT>
  W4 := b16 <INT>
  DEF b17 := 1 <INT>
  DEF b18 := W1 IAND b17 <INT>
  W5 := b18 <INT>
  DEF b19 := 0 <INT>
  DEF b20 := W5 IEQ b19 <BOOL>
  DEF b21 := TRUE <BOOL>
  IF b20 BEQ b21
  THEN IFSTAT_37_SEQ_0_LEVEL_2
  ELSE IFNEXT_37_SEQ_0_LEVEL_2
  LABEL IFSTAT_37_SEQ_0_LEVEL_2
  U2 := W1 <INT>
  W6 := W8 <INT>
  GOTO IFEND_37_LEVEL_2
  LABEL IFNEXT_37_SEQ_0_LEVEL_2
  U2 := W0 <INT>
  W6 := W7 <INT>
  GOTO IFEND_37_LEVEL_2
  LABEL IFNEXT_37_SEQ_1_LEVEL_2
  LABEL IFEND_37_LEVEL_2
  GOTO IFEND_36_LEVEL_1
  LABEL IFNEXT_36_SEQ_2_LEVEL_1
  LABEL IFEND_36_LEVEL_1
  DEF b22 := U3 IADD (GLOBAL h78) <INT>
  U3 := b22 <INT>
  DEF b23 := 255 <INT>
  DEF b24 := U3 IAND b23 <INT>
  DEF b25 := 23 <INT>
  DEF b26 := b24 ILSHIFT b25 <INT>
  T4 := b26 <INT>
  DEF b27 := 31 <INT>
  DEF b28 := U1 ILSHIFT b27 <INT>
  DEF b29 := T4 IOR b28 <INT>
  T4 := b29 <INT>
  DEF b30 := 8388607 <INT>
  DEF b31 := U2 IAND b30 <INT>
  DEF b32 := T4 IOR b31 <INT>
  T4 := b32 <INT>
  GOTO IFEND_30_LEVEL_0
  LABEL IFNEXT_30_SEQ_3_LEVEL_0
  LABEL IFEND_30_LEVEL_0
  CALL IntBinaryAsReal([T4 -> g61]<INT>)
  DEF b33 := (RETURN g60) <REAL>
  T3 := b33 <REAL>
  DEF RETURN h79 := T3 <REAL>
 RETURN FROM RDivide
 PROC LABEL RealSign
  DEF g67 := 0 <INT>
  DEF g68 := 0 <INT>
  CALL RealBinaryAsInt([(PARAM g79) -> g71]<REAL>)
  DEF g73 := (RETURN g72) <INT>
  g68 := g73 <INT>
  DEF g74 := 31 <INT>
  DEF g75 := g68 IRSHIFT g74 <INT>
  DEF g76 := 1 <INT>
  DEF g77 := g75 IAND g76 <INT>
  g67 := g77 <INT>
  DEF RETURN g78 := g67 <INT>
 RETURN FROM RealSign
 PROC LABEL RealBinaryAsInt
  DEF g69 := 0 <INT>
  DEF g70 := 0.0 <REAL>
  IPARAM g70 <REAL> %dr
  IPARAM (PARAM g71) <REAL> %a
  IASM "LDR %dr, %ua"
  IPARAM g70 <REAL> %r
  IPARAM g69 <INT> %da
  IASM "STR %ur, %da"
  DEF RETURN g72 := g69 <INT>
 RETURN FROM RealBinaryAsInt
 PROC LABEL RealExponent
  DEF g80 := 0 <INT>
  DEF g81 := 0 <INT>
  DEF g82 := 0 <INT>
  CALL RealBinaryAsInt([(PARAM g92) -> g71]<REAL>)
  DEF g83 := (RETURN g72) <INT>
  g81 := g83 <INT>
  DEF g84 := 23 <INT>
  DEF g85 := g81 IRSHIFT g84 <INT>
  DEF g86 := 255 <INT>
  DEF g87 := g85 IAND g86 <INT>
  g82 := g87 <INT>
  DEF g88 := g82 ISUB (GLOBAL h78) <INT>
  g80 := g88 <INT>
  DEF RETURN g91 := g80 <INT>
 RETURN FROM RealExponent
 PROC LABEL RealMantissa
  DEF g93 := 0 <INT>
  DEF g94 := 0 <INT>
  DEF g95 := 0 <INT>
  DEF g96 := 0 <INT>
  CALL RealBinaryAsInt([(PARAM h28) -> g71]<REAL>)
  DEF g97 := (RETURN g72) <INT>
  g94 := g97 <INT>
  DEF g98 := 8388607 <INT>
  DEF g99 := g94 IAND g98 <INT>
  g95 := g99 <INT>
  CALL RealIsZero([(PARAM h28) -> h22]<REAL>)
  DEF h23 := (RETURN h21) <BOOL>
  DEF h24 := TRUE <BOOL>
  IF h23 BEQ h24
  THEN IFSTAT_6_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_6_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_6_SEQ_0_LEVEL_0_0
  g93 := g95 <INT>
  GOTO IFEND_6_LEVEL_0_0
  LABEL IFNEXT_6_SEQ_0_LEVEL_0_0
  DEF h25 := 8388608 <INT>
  DEF h26 := g95 IOR h25 <INT>
  g93 := h26 <INT>
  GOTO IFEND_6_LEVEL_0_0
  LABEL IFNEXT_6_SEQ_1_LEVEL_0
  LABEL IFEND_6_LEVEL_0_0
  DEF RETURN h27 := g93 <INT>
 RETURN FROM RealMantissa
 PROC LABEL RealIsZero
  DEF h10 := FALSE <BOOL>
  DEF h11 := 0 <INT>
  DEF h12 := 0 <INT>
  CALL RealBinaryAsInt([(PARAM h22) -> g71]<REAL>)
  DEF h13 := (RETURN g72) <INT>
  h12 := h13 <INT>
  DEF h14 := 2147483647 <INT>
  DEF h15 := h12 IAND h14 <INT>
  h11 := h15 <INT>
  DEF h16 := 0 <INT>
  DEF h17 := h11 IEQ h16 <BOOL>
  DEF h18 := TRUE <BOOL>
  IF h17 BEQ h18
  THEN IFSTAT_0_SEQ_0_LEVEL_0_2
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_2
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_2
  DEF h19 := TRUE <BOOL>
  h10 := h19 <BOOL>
  GOTO IFEND_0_LEVEL_0_2
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_2
  DEF h20 := FALSE <BOOL>
  h10 := h20 <BOOL>
  GOTO IFEND_0_LEVEL_0_2
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_2
  LABEL IFEND_0_LEVEL_0_2
  DEF RETURN h21 := h10 <BOOL>
 RETURN FROM RealIsZero
 PROC LABEL Div
  DEF h29 := 0 <INT>
  DEF h30 := 0 <INT>
  DEF h31 := 0 <INT>
  DEF h32 := 0 <INT>
  DEF h33 := 0 <INT>
  DEF h34 := 0 <INT>
  DEF h35 := 0 <INT>
  DEF h36 := 0 <INT>
  DEF h37 := 0 <INT>
  h31 := (PARAM h38) <INT>
  DEF h39 := 0 <INT>
  h34 := h39 <INT>
  DEF h40 := 0 <INT>
  h32 := h40 <INT>
  CALL IntIsZero([h31 -> g10]<INT>)
  DEF h41 := (RETURN g14) <BOOL>
  DEF h42 := BNOT h41 <BOOL>
  DEF h43 := TRUE <BOOL>
  IF h42 BEQ h43
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_1
  ELSE WHILENEXT_0_SEQ_0_LEVEL_0_1
  LABEL WHILECOND_0_SEQ_0_LEVEL_0_1
  IF h42 BEQ h43
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_1
  ELSE WHILEEND_0_LEVEL_0_1
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0_1
  DEF h44 := 1 <INT>
  DEF h45 := h31 IAND h44 <INT>
  h33 := h45 <INT>
  DEF h46 := 1 <INT>
  DEF h47 := h33 IEQ h46 <BOOL>
  DEF h48 := TRUE <BOOL>
  IF h47 BEQ h48
  THEN IFSTAT_0_SEQ_0_LEVEL_0_3
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_3
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_3
  h32 := h34 <INT>
  GOTO IFEND_0_LEVEL_0_3
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_3
  LABEL IFEND_0_LEVEL_0_3
  DEF h49 := 1 <INT>
  DEF h50 := h34 IADD h49 <INT>
  h34 := h50 <INT>
  DEF h51 := 1 <INT>
  DEF h52 := h31 IRSHIFT h51 <INT>
  h31 := h52 <INT>
  CALL IntIsZero([h31 -> g10]<INT>)
  DEF h53 := (RETURN g14) <BOOL>
  DEF h54 := BNOT h53 <BOOL>
  h42 := h54 <BOOL>
  GOTO WHILECOND_0_SEQ_0_LEVEL_0_1
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0_1
  LABEL WHILEEND_0_LEVEL_0_1
  h35 := h32 <INT>
  h31 := (PARAM h38) <INT>
  DEF h55 := 0 <INT>
  h37 := h55 <INT>
  DEF h56 := 0 <INT>
  h30 := h56 <INT>
  DEF h57 := 0 <INT>
  DEF h58 := h35 GE h57 <BOOL>
  DEF h59 := TRUE <BOOL>
  IF h58 BEQ h59
  THEN WHILESTAT_2_SEQ_0_LEVEL_0_0
  ELSE WHILENEXT_2_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_2_SEQ_0_LEVEL_0_0
  IF h58 BEQ h59
  THEN WHILESTAT_2_SEQ_0_LEVEL_0_0
  ELSE WHILEEND_2_LEVEL_0_0
  LABEL WHILESTAT_2_SEQ_0_LEVEL_0_0
  DEF h60 := h31 IRSHIFT h35 <INT>
  DEF h61 := 1 <INT>
  DEF h62 := h60 IAND h61 <INT>
  h36 := h62 <INT>
  DEF h63 := 1 <INT>
  DEF h64 := h37 ILSHIFT h63 <INT>
  DEF h65 := h64 IOR h36 <INT>
  h37 := h65 <INT>
  DEF h66 := h37 GE (PARAM h67) <BOOL>
  DEF h68 := TRUE <BOOL>
  IF h66 BEQ h68
  THEN IFSTAT_1_SEQ_0_LEVEL_0_1
  ELSE IFNEXT_1_SEQ_0_LEVEL_0_1
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_1
  DEF h69 := 1 <INT>
  DEF h70 := h69 ILSHIFT h35 <INT>
  DEF h71 := h30 IOR h70 <INT>
  h30 := h71 <INT>
  DEF h72 := h37 ISUB (PARAM h67) <INT>
  h37 := h72 <INT>
  GOTO IFEND_1_LEVEL_0_1
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_1
  LABEL IFEND_1_LEVEL_0_1
  DEF h73 := 1 <INT>
  DEF h74 := h35 ISUB h73 <INT>
  h35 := h74 <INT>
  DEF h75 := 0 <INT>
  DEF h76 := h35 GE h75 <BOOL>
  h58 := h76 <BOOL>
  GOTO WHILECOND_2_SEQ_0_LEVEL_0_0
  LABEL WHILENEXT_2_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_2_LEVEL_0_0
  DEF RETURN h77 := h30 <INT>
 RETURN FROM Div
 PROC LABEL WriteReal
  DEF h87 := 0 <INT>
  IPARAM h87 <INT> %dr
  IASM "MOV %dr, R0"
  IPARAM (PARAM h88) <REAL> %a
  IASM "LDR R0, %ua"
  IASM "SWI 2"
  IPARAM h87 <INT> %r
  IASM "MOV R0, %ur"
 RETURN FROM WriteReal
