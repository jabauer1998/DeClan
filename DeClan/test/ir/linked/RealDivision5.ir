SYMBOL SECTION
 ENTRY f36 INTERNAL low Multiply <INT>
 ENTRY f37 INTERNAL high Multiply <INT>
 ENTRY f38 INTERNAL PARAM a Multiply 0 <INT>
 ENTRY f39 INTERNAL PARAM b Multiply 1 <INT>
 ENTRY f40 INTERNAL RETURN Multiply <INT>
 ENTRY f42 CONST INTERNAL GLOBAL a  <INT>
 ENTRY f44 INTERNAL total Mod <INT>
 ENTRY f45 INTERNAL result Mod <INT>
 ENTRY f46 INTERNAL PARAM dividend Mod 0 <INT>
 ENTRY f48 INTERNAL PARAM divisor Mod 1 <INT>
 ENTRY f56 INTERNAL RETURN Mod <INT>
 ENTRY f58 CONST INTERNAL GLOBAL b  <INT>
 ENTRY f59 INTERNAL GLOBAL result  <REAL>
 ENTRY f60 INTERNAL divResult Divide <REAL>
 ENTRY f61 INTERNAL realDividend Divide <REAL>
 ENTRY f62 INTERNAL realDivisor Divide <REAL>
 ENTRY f63 INTERNAL result IntToReal <REAL>
 ENTRY f64 INTERNAL absN IntToReal <INT>
 ENTRY f65 INTERNAL isNeg IntToReal <BOOL>
 ENTRY f66 INTERNAL intResult IntToReal <INT>
 ENTRY f67 INTERNAL furthestOne IntToReal <INT>
 ENTRY f68 INTERNAL count IntToReal <INT>
 ENTRY f69 INTERNAL tempN IntToReal <INT>
 ENTRY f70 INTERNAL lastBit IntToReal <INT>
 ENTRY f71 INTERNAL fullExponent IntToReal <INT>
 ENTRY f72 INTERNAL exponent IntToReal <INT>
 ENTRY f73 INTERNAL mantissa IntToReal <INT>
 ENTRY f74 INTERNAL mantissaMask IntToReal <INT>
 ENTRY f75 INTERNAL toShiftOver IntToReal <INT>
 ENTRY f76 INTERNAL result Abs <INT>
 ENTRY f79 INTERNAL PARAM n Abs 0 <INT>
 ENTRY f81 INTERNAL result INeg <INT>
 ENTRY f83 INTERNAL PARAM n INeg 0 <INT>
 ENTRY f86 INTERNAL RETURN INeg <INT>
 ENTRY f88 INTERNAL RETURN Abs <INT>
 ENTRY g72 INTERNAL PARAM n IntToReal 0 <INT>
 ENTRY f91 INTERNAL result IntIsNegative <BOOL>
 ENTRY f92 INTERNAL thirtyFirstBit IntIsNegative <INT>
 ENTRY f95 INTERNAL PARAM n IntIsNegative 0 <INT>
 ENTRY g13 INTERNAL RETURN IntIsNegative <BOOL>
 ENTRY g15 INTERNAL result IntIsZero <BOOL>
 ENTRY g18 INTERNAL PARAM n IntIsZero 0 <INT>
 ENTRY g22 INTERNAL RETURN IntIsZero <BOOL>
 ENTRY i16 CONST INTERNAL GLOBAL realBias  <INT>
 ENTRY g66 INTERNAL result IntBinaryAsReal <REAL>
 ENTRY g67 INTERNAL temp IntBinaryAsReal <INT>
 ENTRY g68 INTERNAL RETURN IntBinaryAsReal <REAL>
 ENTRY g71 INTERNAL RETURN IntToReal <REAL>
 ENTRY i22 INTERNAL PARAM dividend Divide 0 <INT>
 ENTRY i23 INTERNAL PARAM divisor Divide 1 <INT>
 ENTRY T3 INTERNAL result RDivide <REAL>
 ENTRY T4 INTERNAL intResult RDivide <INT>
 ENTRY T5 INTERNAL n1Sign RDivide <INT>
 ENTRY T6 INTERNAL n2Sign RDivide <INT>
 ENTRY T7 INTERNAL n1Exp RDivide <INT>
 ENTRY T8 INTERNAL n2Exp RDivide <INT>
 ENTRY T9 INTERNAL n1Base RDivide <INT>
 ENTRY U0 INTERNAL n2Base RDivide <INT>
 ENTRY U1 INTERNAL resultSign RDivide <INT>
 ENTRY U2 INTERNAL resultBase RDivide <INT>
 ENTRY U3 INTERNAL resultExp RDivide <INT>
 ENTRY U4 INTERNAL n2Count RDivide <INT>
 ENTRY U5 INTERNAL n2LastDigit RDivide <INT>
 ENTRY U6 INTERNAL n2TempBase RDivide <INT>
 ENTRY U7 INTERNAL n2FirstOne RDivide <INT>
 ENTRY U8 INTERNAL n2LastOne RDivide <INT>
 ENTRY U9 INTERNAL toShiftExp RDivide <INT>
 ENTRY V0 INTERNAL toShiftBase RDivide <INT>
 ENTRY V1 INTERNAL toShiftBack RDivide <INT>
 ENTRY V2 INTERNAL resultLastOne RDivide <INT>
 ENTRY V3 INTERNAL resultLastDigit RDivide <INT>
 ENTRY V4 INTERNAL count RDivide <INT>
 ENTRY V5 INTERNAL resultTempBase RDivide <INT>
 ENTRY V6 INTERNAL n1DecimalPlace RDivide <INT>
 ENTRY V7 INTERNAL resultDecimalPlace RDivide <INT>
 ENTRY V8 INTERNAL roundIndex RDivide <INT>
 ENTRY V9 INTERNAL afterRound RDivide <INT>
 ENTRY W0 INTERNAL lowBase RDivide <INT>
 ENTRY W1 INTERNAL hiBase RDivide <INT>
 ENTRY W2 INTERNAL lowDiff RDivide <INT>
 ENTRY W3 INTERNAL hiDiff RDivide <INT>
 ENTRY W4 INTERNAL lowBit RDivide <INT>
 ENTRY W5 INTERNAL hiBit RDivide <INT>
 ENTRY W6 INTERNAL resultBitStorage RDivide <INT>
 ENTRY W7 INTERNAL lowBitStorage RDivide <INT>
 ENTRY W8 INTERNAL hiBitStorage RDivide <INT>
 ENTRY g75 INTERNAL addressHolder WriteString <INT>
 ENTRY g76 INTERNAL offsetHolder WriteString <INT>
 ENTRY g77 INTERNAL valueHolder WriteString <INT>
 ENTRY g78 INTERNAL tempHolder WriteString <INT>
 ENTRY g79 INTERNAL result StringAsAddress <INT>
 ENTRY g80 INTERNAL temp StringAsAddress <INT>
 ENTRY g81 INTERNAL PARAM s StringAsAddress 0 <STRING>
 ENTRY g82 INTERNAL RETURN StringAsAddress <INT>
 ENTRY g92 INTERNAL PARAM s WriteString 0 <STRING>
 ENTRY g93 INTERNAL result RealSign <INT>
 ENTRY g94 INTERNAL realAsInteger RealSign <INT>
 ENTRY g95 INTERNAL result RealBinaryAsInt <INT>
 ENTRY g96 INTERNAL temp RealBinaryAsInt <REAL>
 ENTRY g97 INTERNAL PARAM r RealBinaryAsInt 0 <REAL>
 ENTRY g98 INTERNAL RETURN RealBinaryAsInt <INT>
 ENTRY h15 INTERNAL PARAM r RealSign 0 <REAL>
 ENTRY h14 INTERNAL RETURN RealSign <INT>
 ENTRY i18 INTERNAL PARAM n1 RDivide 0 <REAL>
 ENTRY h16 INTERNAL tempReg WriteInt <INT>
 ENTRY h17 INTERNAL PARAM i WriteInt 0 <INT>
 ENTRY i19 INTERNAL PARAM n2 RDivide 1 <REAL>
 ENTRY h18 INTERNAL result RealExponent <INT>
 ENTRY h19 INTERNAL realAsInteger RealExponent <INT>
 ENTRY h20 INTERNAL exponent RealExponent <INT>
 ENTRY h30 INTERNAL PARAM r RealExponent 0 <REAL>
 ENTRY h29 INTERNAL RETURN RealExponent <INT>
 ENTRY h31 INTERNAL result RealMantissa <INT>
 ENTRY h32 INTERNAL realAsInt RealMantissa <INT>
 ENTRY h33 INTERNAL significand RealMantissa <INT>
 ENTRY h34 INTERNAL exp RealMantissa <INT>
 ENTRY h56 INTERNAL PARAM r RealMantissa 0 <REAL>
 ENTRY h38 INTERNAL result RealIsZero <BOOL>
 ENTRY h39 INTERNAL val RealIsZero <INT>
 ENTRY h40 INTERNAL exp RealIsZero <INT>
 ENTRY h50 INTERNAL PARAM r RealIsZero 0 <REAL>
 ENTRY h49 INTERNAL RETURN RealIsZero <BOOL>
 ENTRY h55 INTERNAL RETURN RealMantissa <INT>
 ENTRY h57 INTERNAL total Div <INT>
 ENTRY h58 INTERNAL result Div <INT>
 ENTRY h59 INTERNAL tempDividend Div <INT>
 ENTRY h60 INTERNAL dividendLastOne Div <INT>
 ENTRY h61 INTERNAL dividendLastDigit Div <INT>
 ENTRY h62 INTERNAL dividendCount Div <INT>
 ENTRY h63 INTERNAL dividendIndex Div <INT>
 ENTRY h64 INTERNAL bitAtIndex Div <INT>
 ENTRY h65 INTERNAL remainder Div <INT>
 ENTRY h66 INTERNAL PARAM dividend Div 0 <INT>
 ENTRY h95 INTERNAL PARAM divisor Div 1 <INT>
 ENTRY i15 INTERNAL RETURN Div <INT>
 ENTRY i17 INTERNAL RETURN RDivide <REAL>
 ENTRY i21 INTERNAL RETURN Divide <REAL>
 ENTRY i25 INTERNAL tempReg WriteReal <INT>
 ENTRY i26 INTERNAL PARAM r WriteReal 0 <REAL>
DATA SECTION
 DEF f32 := 6 <INT>
 DEF f33 := 6 <INT>
 DEF f34 := 1 <INT>
 DEF f35 := f33 IADD f34 <INT>
 CALL Multiply([f32 -> f38]<INT>, [f35 -> f39]<INT>)
 DEF f41 := (RETURN f40) <INT>
 DEF GLOBAL f42 := f41 <INT>
 DEF f43 := 10 <INT>
 CALL Mod([(GLOBAL f42) -> f46]<INT>, [f43 -> f48]<INT>)
 DEF f57 := (RETURN f56) <INT>
 DEF GLOBAL f58 := f57 <INT>
 DEF g53 := 127 <INT>
 DEF GLOBAL i16 := g53 <INT>
BSS SECTION
 DEF GLOBAL f59 := 0.0 <REAL>
CODE SECTION
 CALL Divide([(GLOBAL f42) -> i22]<INT>, [(GLOBAL f58) -> i23]<INT>)
 DEF i24 := (RETURN i21) <REAL>
 GLOBAL f59 := i24 <REAL>
 CALL WriteReal([(GLOBAL f59) -> i26]<REAL>)
END
PROC SECTION
 PROC LABEL Multiply
  DEF f36 := 0 <INT>
  DEF f37 := 0 <INT>
  IPARAM f36
  IPARAM f37
  IPARAM (PARAM f38)
  IPARAM (PARAM f39)
  IASM "MULL %r, %r, %r, %r"
  DEF RETURN f40 := f36 <INT>
 RETURN FROM Multiply
 PROC LABEL Mod
  DEF f44 := 0 <INT>
  DEF f45 := 0 <INT>
  f44 := (PARAM f46) <INT>
  DEF f47 := f44 ISUB (PARAM f48) <INT>
  DEF f49 := 0 <INT>
  DEF f50 := f47 GE f49 <BOOL>
  DEF f51 := TRUE <BOOL>
  IF f50 BEQ f51
  THEN WHILESTAT_4_SEQ_0_LEVEL_0_0
  ELSE WHILENEXT_4_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_4_SEQ_0_LEVEL_0_0
  IF f50 BEQ f51
  THEN WHILESTAT_4_SEQ_0_LEVEL_0_0
  ELSE WHILEEND_4_LEVEL_0_0
  LABEL WHILESTAT_4_SEQ_0_LEVEL_0_0
  DEF f52 := f44 ISUB (PARAM f48) <INT>
  f44 := f52 <INT>
  DEF f53 := f44 ISUB (PARAM f48) <INT>
  DEF f54 := 0 <INT>
  DEF f55 := f53 GE f54 <BOOL>
  f50 := f55 <BOOL>
  GOTO WHILECOND_4_SEQ_0_LEVEL_0_0
  LABEL WHILENEXT_4_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_4_LEVEL_0_0
  DEF RETURN f56 := f44 <INT>
 RETURN FROM Mod
 PROC LABEL Divide
  DEF f60 := 0.0 <REAL>
  DEF f61 := 0.0 <REAL>
  DEF f62 := 0.0 <REAL>
  CALL IntToReal([(PARAM i22) -> g72]<INT>)
  DEF g73 := (RETURN g71) <REAL>
  f61 := g73 <REAL>
  CALL IntToReal([(PARAM i23) -> g72]<INT>)
  DEF g74 := (RETURN g71) <REAL>
  f62 := g74 <REAL>
  CALL RDivide([f61 -> i18]<REAL>, [f62 -> i19]<REAL>)
  DEF i20 := (RETURN i17) <REAL>
  f60 := i20 <REAL>
  DEF RETURN i21 := f60 <REAL>
 RETURN FROM Divide
 PROC LABEL IntToReal
  DEF f63 := 0.0 <REAL>
  DEF f64 := 0 <INT>
  DEF f65 := FALSE <BOOL>
  DEF f66 := 0 <INT>
  DEF f67 := 0 <INT>
  DEF f68 := 0 <INT>
  DEF f69 := 0 <INT>
  DEF f70 := 0 <INT>
  DEF f71 := 0 <INT>
  DEF f72 := 0 <INT>
  DEF f73 := 0 <INT>
  DEF f74 := 0 <INT>
  DEF f75 := 0 <INT>
  CALL Abs([(PARAM g72) -> f79]<INT>)
  DEF f89 := (RETURN f88) <INT>
  f64 := f89 <INT>
  f69 := f64 <INT>
  DEF f90 := 0 <INT>
  f68 := f90 <INT>
  CALL IntIsNegative([(PARAM g72) -> f95]<INT>)
  DEF g14 := (RETURN g13) <BOOL>
  f65 := g14 <BOOL>
  CALL IntIsZero([f69 -> g18]<INT>)
  DEF g23 := (RETURN g22) <BOOL>
  DEF g24 := TRUE <BOOL>
  IF g23 BEQ g24
  THEN IFSTAT_0_SEQ_0_LEVEL_0_1
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_1
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_1
  DEF g25 := 0 <INT>
  f66 := g25 <INT>
  GOTO IFEND_0_LEVEL_0_1
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_1
  CALL IntIsZero([f69 -> g18]<INT>)
  DEF g26 := (RETURN g22) <BOOL>
  DEF g27 := BNOT g26 <BOOL>
  DEF g28 := TRUE <BOOL>
  IF g27 BEQ g28
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_0
  ELSE WHILENEXT_0_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_0_SEQ_0_LEVEL_0_0
  IF g27 BEQ g28
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_0
  ELSE WHILEEND_0_LEVEL_0_0
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0_0
  DEF g29 := 1 <INT>
  DEF g30 := f69 IAND g29 <INT>
  f70 := g30 <INT>
  DEF g31 := 1 <INT>
  DEF g32 := f70 IEQ g31 <BOOL>
  DEF g33 := TRUE <BOOL>
  IF g32 BEQ g33
  THEN IFSTAT_1_SEQ_0_LEVEL_1
  ELSE IFNEXT_1_SEQ_0_LEVEL_1
  LABEL IFSTAT_1_SEQ_0_LEVEL_1
  f67 := f68 <INT>
  GOTO IFEND_1_LEVEL_1
  LABEL IFNEXT_1_SEQ_0_LEVEL_1
  LABEL IFEND_1_LEVEL_1
  DEF g34 := 1 <INT>
  DEF g35 := f68 IADD g34 <INT>
  f68 := g35 <INT>
  DEF g36 := 1 <INT>
  DEF g37 := f69 IRSHIFT g36 <INT>
  f69 := g37 <INT>
  CALL IntIsZero([f69 -> g18]<INT>)
  DEF g38 := (RETURN g22) <BOOL>
  DEF g39 := BNOT g38 <BOOL>
  g27 := g39 <BOOL>
  GOTO WHILECOND_0_SEQ_0_LEVEL_0_0
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_0_LEVEL_0_0
  DEF g40 := 23 <INT>
  DEF g41 := f67 GT g40 <BOOL>
  DEF g42 := TRUE <BOOL>
  IF g41 BEQ g42
  THEN IFSTAT_2_SEQ_0_LEVEL_1_0
  ELSE IFNEXT_2_SEQ_0_LEVEL_1_0
  LABEL IFSTAT_2_SEQ_0_LEVEL_1_0
  DEF g43 := 23 <INT>
  DEF g44 := f67 ISUB g43 <INT>
  DEF g45 := f64 IRSHIFT g44 <INT>
  f64 := g45 <INT>
  GOTO IFEND_2_LEVEL_1_0
  LABEL IFNEXT_2_SEQ_0_LEVEL_1_0
  DEF g46 := 23 <INT>
  DEF g47 := f67 LT g46 <BOOL>
  DEF g48 := TRUE <BOOL>
  IF g47 BEQ g48
  THEN IFSTAT_2_SEQ_1_LEVEL_1_0
  ELSE IFNEXT_2_SEQ_1_LEVEL_1_0
  LABEL IFSTAT_2_SEQ_1_LEVEL_1_0
  DEF g49 := 23 <INT>
  DEF g50 := g49 ISUB f67 <INT>
  DEF g51 := f64 ILSHIFT g50 <INT>
  f64 := g51 <INT>
  GOTO IFEND_2_LEVEL_1_0
  LABEL IFNEXT_2_SEQ_1_LEVEL_1_0
  LABEL IFEND_2_LEVEL_1_0
  DEF g52 := f67 IADD (GLOBAL i16) <INT>
  f72 := g52 <INT>
  DEF g56 := 8388607 <INT>
  f74 := g56 <INT>
  DEF g57 := f64 IAND f74 <INT>
  f73 := g57 <INT>
  f66 := f73 <INT>
  DEF g58 := 23 <INT>
  DEF g59 := f72 ILSHIFT g58 <INT>
  DEF g60 := f66 IOR g59 <INT>
  f66 := g60 <INT>
  DEF g61 := TRUE <BOOL>
  IF f65 BEQ g61
  THEN IFSTAT_3_SEQ_0_LEVEL_1
  ELSE IFNEXT_3_SEQ_0_LEVEL_1
  LABEL IFSTAT_3_SEQ_0_LEVEL_1
  DEF g62 := 1 <INT>
  DEF g63 := 31 <INT>
  DEF g64 := g62 ILSHIFT g63 <INT>
  DEF g65 := f66 IOR g64 <INT>
  f66 := g65 <INT>
  GOTO IFEND_3_LEVEL_1
  LABEL IFNEXT_3_SEQ_0_LEVEL_1
  LABEL IFEND_3_LEVEL_1
  GOTO IFEND_0_LEVEL_0_1
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_1
  LABEL IFEND_0_LEVEL_0_1
  CALL IntBinaryAsReal([f66 -> g69]<INT>)
  DEF g70 := (RETURN g68) <REAL>
  f63 := g70 <REAL>
  DEF RETURN g71 := f63 <REAL>
 RETURN FROM IntToReal
 PROC LABEL Abs
  DEF f76 := 0 <INT>
  DEF f77 := 0 <INT>
  DEF f78 := (PARAM f79) GE f77 <BOOL>
  DEF f80 := TRUE <BOOL>
  IF f78 BEQ f80
  THEN IFSTAT_0_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_0
  f76 := (PARAM f79) <INT>
  GOTO IFEND_0_LEVEL_0_0
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_0
  CALL INeg([(PARAM f79) -> f83]<INT>)
  DEF f87 := (RETURN f86) <INT>
  f76 := f87 <INT>
  GOTO IFEND_0_LEVEL_0_0
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_0
  LABEL IFEND_0_LEVEL_0_0
  DEF RETURN f88 := f76 <INT>
 RETURN FROM Abs
 PROC LABEL INeg
  DEF f81 := 0 <INT>
  DEF f82 := INOT (PARAM f83) <INT>
  DEF f84 := 1 <INT>
  DEF f85 := f82 IADD f84 <INT>
  f81 := f85 <INT>
  DEF RETURN f86 := f81 <INT>
 RETURN FROM INeg
 PROC LABEL IntIsNegative
  DEF f91 := FALSE <BOOL>
  DEF f92 := 0 <INT>
  DEF f93 := 31 <INT>
  DEF f94 := (PARAM f95) IRSHIFT f93 <INT>
  DEF f96 := 1 <INT>
  DEF f97 := f94 IAND f96 <INT>
  f92 := f97 <INT>
  DEF f98 := 0 <INT>
  DEF f99 := f92 IEQ f98 <BOOL>
  DEF g10 := TRUE <BOOL>
  IF f99 BEQ g10
  THEN IFSTAT_2_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_2_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_2_SEQ_0_LEVEL_0_0
  DEF g11 := FALSE <BOOL>
  f91 := g11 <BOOL>
  GOTO IFEND_2_LEVEL_0_0
  LABEL IFNEXT_2_SEQ_0_LEVEL_0_0
  DEF g12 := TRUE <BOOL>
  f91 := g12 <BOOL>
  GOTO IFEND_2_LEVEL_0_0
  LABEL IFNEXT_2_SEQ_1_LEVEL_0_0
  LABEL IFEND_2_LEVEL_0_0
  DEF RETURN g13 := f91 <BOOL>
 RETURN FROM IntIsNegative
 PROC LABEL IntIsZero
  DEF g15 := FALSE <BOOL>
  DEF g16 := 0 <INT>
  DEF g17 := (PARAM g18) IEQ g16 <BOOL>
  DEF g19 := TRUE <BOOL>
  IF g17 BEQ g19
  THEN IFSTAT_1_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_1_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_0
  DEF g20 := TRUE <BOOL>
  g15 := g20 <BOOL>
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_0
  DEF g21 := FALSE <BOOL>
  g15 := g21 <BOOL>
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_1_LEVEL_0_0
  LABEL IFEND_1_LEVEL_0_0
  DEF RETURN g22 := g15 <BOOL>
 RETURN FROM IntIsZero
 PROC LABEL IntBinaryAsReal
  DEF g66 := 0.0 <REAL>
  DEF g67 := 0 <INT>
  IPARAM g67
  IPARAM (PARAM g69)
  IASM "LDR %r, %a"
  IPARAM g67
  IPARAM g66
  IASM "STR %r, %a"
  DEF RETURN g68 := g66 <REAL>
 RETURN FROM IntBinaryAsReal
 PROC LABEL RDivide
  DEF T3 := 0.0 <REAL>
  DEF T4 := 0 <INT>
  DEF T5 := 0 <INT>
  DEF T6 := 0 <INT>
  DEF T7 := 0 <INT>
  DEF T8 := 0 <INT>
  DEF T9 := 0 <INT>
  DEF U0 := 0 <INT>
  DEF U1 := 0 <INT>
  DEF U2 := 0 <INT>
  DEF U3 := 0 <INT>
  DEF U4 := 0 <INT>
  DEF U5 := 0 <INT>
  DEF U6 := 0 <INT>
  DEF U7 := 0 <INT>
  DEF U8 := 0 <INT>
  DEF U9 := 0 <INT>
  DEF V0 := 0 <INT>
  DEF V1 := 0 <INT>
  DEF V2 := 0 <INT>
  DEF V3 := 0 <INT>
  DEF V4 := 0 <INT>
  DEF V5 := 0 <INT>
  DEF V6 := 0 <INT>
  DEF V7 := 0 <INT>
  DEF V8 := 0 <INT>
  DEF V9 := 0 <INT>
  DEF W0 := 0 <INT>
  DEF W1 := 0 <INT>
  DEF W2 := 0 <INT>
  DEF W3 := 0 <INT>
  DEF W4 := 0 <INT>
  DEF W5 := 0 <INT>
  DEF W6 := 0 <INT>
  DEF W7 := 0 <INT>
  DEF W8 := 0 <INT>
  DEF W9 := "n1SignIs: " <STRING>
  CALL WriteString([W9 -> g92]<STRING>)
  CALL RealSign([(PARAM i18) -> h15]<REAL>)
  DEF X1 := (RETURN h14) <INT>
  T5 := X1 <INT>
  CALL WriteInt([T5 -> h17]<INT>)
  CALL WriteLn()
  DEF X3 := "n2SignIs: " <STRING>
  CALL WriteString([X3 -> g92]<STRING>)
  CALL RealSign([(PARAM i19) -> h15]<REAL>)
  DEF X4 := (RETURN h14) <INT>
  T6 := X4 <INT>
  CALL WriteInt([T6 -> h17]<INT>)
  CALL WriteLn()
  DEF X5 := "n1ExponentIs: " <STRING>
  CALL WriteString([X5 -> g92]<STRING>)
  CALL RealExponent([(PARAM i18) -> h30]<REAL>)
  DEF X6 := (RETURN h29) <INT>
  T7 := X6 <INT>
  CALL WriteInt([T7 -> h17]<INT>)
  CALL WriteLn()
  DEF X7 := "n2ExpIs: " <STRING>
  CALL WriteString([X7 -> g92]<STRING>)
  CALL RealExponent([(PARAM i19) -> h30]<REAL>)
  DEF X8 := (RETURN h29) <INT>
  T8 := X8 <INT>
  CALL WriteInt([T8 -> h17]<INT>)
  CALL WriteLn()
  DEF X9 := "n1Base is: " <STRING>
  CALL WriteString([X9 -> g92]<STRING>)
  CALL RealMantissa([(PARAM i18) -> h56]<REAL>)
  DEF Y0 := (RETURN h55) <INT>
  T9 := Y0 <INT>
  CALL WriteInt([T9 -> h17]<INT>)
  CALL WriteLn()
  DEF Y1 := "n2BaseIs: " <STRING>
  CALL WriteString([Y1 -> g92]<STRING>)
  CALL RealMantissa([(PARAM i19) -> h56]<REAL>)
  DEF Y2 := (RETURN h55) <INT>
  U0 := Y2 <INT>
  CALL WriteInt([U0 -> h17]<INT>)
  CALL WriteLn()
  CALL IntIsZero([T9 -> g18]<INT>)
  DEF Y3 := (RETURN g22) <BOOL>
  CALL IntIsZero([U0 -> g18]<INT>)
  DEF Y4 := (RETURN g22) <BOOL>
  DEF Y5 := Y3 LAND Y4 <BOOL>
  DEF Y6 := TRUE <BOOL>
  IF Y5 BEQ Y6
  THEN IFSTAT_30_SEQ_0_LEVEL_0
  ELSE IFNEXT_30_SEQ_0_LEVEL_0
  LABEL IFSTAT_30_SEQ_0_LEVEL_0
  DEF Y7 := 1065353216 <INT>
  T4 := Y7 <INT>
  GOTO IFEND_30_LEVEL_0
  LABEL IFNEXT_30_SEQ_0_LEVEL_0
  CALL IntIsZero([T9 -> g18]<INT>)
  DEF Y8 := (RETURN g22) <BOOL>
  DEF Y9 := BNOT Y8 <BOOL>
  CALL IntIsZero([U0 -> g18]<INT>)
  DEF Z0 := (RETURN g22) <BOOL>
  DEF Z1 := Y9 LAND Z0 <BOOL>
  DEF Z2 := TRUE <BOOL>
  IF Z1 BEQ Z2
  THEN IFSTAT_30_SEQ_1_LEVEL_0
  ELSE IFNEXT_30_SEQ_1_LEVEL_0
  LABEL IFSTAT_30_SEQ_1_LEVEL_0
  DEF Z3 := 2139095040 <INT>
  T4 := Z3 <INT>
  GOTO IFEND_30_LEVEL_0
  LABEL IFNEXT_30_SEQ_1_LEVEL_0
  CALL IntIsZero([T9 -> g18]<INT>)
  DEF Z4 := (RETURN g22) <BOOL>
  CALL IntIsZero([U0 -> g18]<INT>)
  DEF Z5 := (RETURN g22) <BOOL>
  DEF Z6 := BNOT Z5 <BOOL>
  DEF Z7 := Z4 LAND Z6 <BOOL>
  DEF Z8 := TRUE <BOOL>
  IF Z7 BEQ Z8
  THEN IFSTAT_30_SEQ_2_LEVEL_0
  ELSE IFNEXT_30_SEQ_2_LEVEL_0
  LABEL IFSTAT_30_SEQ_2_LEVEL_0
  DEF Z9 := 0 <INT>
  T4 := Z9 <INT>
  GOTO IFEND_30_LEVEL_0
  LABEL IFNEXT_30_SEQ_2_LEVEL_0
  DEF a10 := 30 <INT>
  DEF a11 := 23 <INT>
  DEF a12 := a10 ISUB a11 <INT>
  V0 := a12 <INT>
  DEF a13 := T9 ILSHIFT V0 <INT>
  T9 := a13 <INT>
  DEF a14 := 0 <INT>
  U4 := a14 <INT>
  U6 := U0 <INT>
  DEF a15 := 1 <INT>
  DEF a16 := U6 IAND a15 <INT>
  DEF a17 := 0 <INT>
  DEF a18 := a16 IEQ a17 <BOOL>
  DEF a19 := TRUE <BOOL>
  IF a18 BEQ a19
  THEN WHILESTAT_18_SEQ_0_LEVEL_0
  ELSE WHILENEXT_18_SEQ_0_LEVEL_0
  LABEL WHILECOND_18_SEQ_0_LEVEL_0
  IF a18 BEQ a19
  THEN WHILESTAT_18_SEQ_0_LEVEL_0
  ELSE WHILEEND_18_LEVEL_0
  LABEL WHILESTAT_18_SEQ_0_LEVEL_0
  DEF a20 := 1 <INT>
  DEF a21 := U6 IRSHIFT a20 <INT>
  U6 := a21 <INT>
  DEF a22 := 1 <INT>
  DEF a23 := U4 IADD a22 <INT>
  U4 := a23 <INT>
  DEF a24 := 1 <INT>
  DEF a25 := U6 IAND a24 <INT>
  DEF a26 := 0 <INT>
  DEF a27 := a25 IEQ a26 <BOOL>
  a18 := a27 <BOOL>
  GOTO WHILECOND_18_SEQ_0_LEVEL_0
  LABEL WHILENEXT_18_SEQ_0_LEVEL_0
  LABEL WHILEEND_18_LEVEL_0
  U7 := U4 <INT>
  V0 := U7 <INT>
  DEF a28 := U0 IRSHIFT V0 <INT>
  U0 := a28 <INT>
  DEF a29 := 0 <INT>
  U4 := a29 <INT>
  U6 := U0 <INT>
  CALL IntIsZero([U6 -> g18]<INT>)
  DEF a30 := (RETURN g22) <BOOL>
  DEF a31 := BNOT a30 <BOOL>
  DEF a32 := TRUE <BOOL>
  IF a31 BEQ a32
  THEN WHILESTAT_20_SEQ_0_LEVEL_0
  ELSE WHILENEXT_20_SEQ_0_LEVEL_0
  LABEL WHILECOND_20_SEQ_0_LEVEL_0
  IF a31 BEQ a32
  THEN WHILESTAT_20_SEQ_0_LEVEL_0
  ELSE WHILEEND_20_LEVEL_0
  LABEL WHILESTAT_20_SEQ_0_LEVEL_0
  DEF a33 := 1 <INT>
  DEF a34 := U6 IAND a33 <INT>
  U5 := a34 <INT>
  DEF a35 := 1 <INT>
  DEF a36 := U5 IEQ a35 <BOOL>
  DEF a37 := TRUE <BOOL>
  IF a36 BEQ a37
  THEN IFSTAT_31_SEQ_0_LEVEL_1
  ELSE IFNEXT_31_SEQ_0_LEVEL_1
  LABEL IFSTAT_31_SEQ_0_LEVEL_1
  U8 := U4 <INT>
  GOTO IFEND_31_LEVEL_1
  LABEL IFNEXT_31_SEQ_0_LEVEL_1
  LABEL IFEND_31_LEVEL_1
  DEF a38 := 1 <INT>
  DEF a39 := U4 IADD a38 <INT>
  U4 := a39 <INT>
  DEF a40 := 1 <INT>
  DEF a41 := U6 IRSHIFT a40 <INT>
  U6 := a41 <INT>
  CALL IntIsZero([U6 -> g18]<INT>)
  DEF a42 := (RETURN g22) <BOOL>
  DEF a43 := BNOT a42 <BOOL>
  a31 := a43 <BOOL>
  GOTO WHILECOND_20_SEQ_0_LEVEL_0
  LABEL WHILENEXT_20_SEQ_0_LEVEL_0
  LABEL WHILEEND_20_LEVEL_0
  U9 := U8 <INT>
  DEF a44 := T7 ISUB U9 <INT>
  T7 := a44 <INT>
  DEF a45 := T8 ISUB U9 <INT>
  T8 := a45 <INT>
  DEF a46 := 30 <INT>
  DEF a47 := a46 ISUB U9 <INT>
  V6 := a47 <INT>
  V7 := V6 <INT>
  DEF a48 := T5 INE T6 <BOOL>
  DEF a49 := TRUE <BOOL>
  IF a48 BEQ a49
  THEN IFSTAT_32_SEQ_0_LEVEL_1
  ELSE IFNEXT_32_SEQ_0_LEVEL_1
  LABEL IFSTAT_32_SEQ_0_LEVEL_1
  DEF a50 := 1 <INT>
  U1 := a50 <INT>
  GOTO IFEND_32_LEVEL_1
  LABEL IFNEXT_32_SEQ_0_LEVEL_1
  DEF a51 := 0 <INT>
  U1 := a51 <INT>
  GOTO IFEND_32_LEVEL_1
  LABEL IFNEXT_32_SEQ_1_LEVEL_1
  LABEL IFEND_32_LEVEL_1
  DEF a52 := T7 ISUB T8 <INT>
  U3 := a52 <INT>
  CALL Div([T9 -> h66]<INT>, [U0 -> h95]<INT>)
  DEF a56 := (RETURN i15) <INT>
  U2 := a56 <INT>
  DEF a57 := 23 <INT>
  DEF a58 := V7 GT a57 <BOOL>
  DEF a59 := TRUE <BOOL>
  IF a58 BEQ a59
  THEN IFSTAT_33_SEQ_0_LEVEL_1
  ELSE IFNEXT_33_SEQ_0_LEVEL_1
  LABEL IFSTAT_33_SEQ_0_LEVEL_1
  DEF a60 := 23 <INT>
  DEF a61 := V7 ISUB a60 <INT>
  V1 := a61 <INT>
  DEF a62 := 1 <INT>
  DEF a63 := a62 ILSHIFT V1 <INT>
  DEF a64 := 1 <INT>
  DEF a65 := a63 ISUB a64 <INT>
  DEF a66 := U2 IAND a65 <INT>
  W6 := a66 <INT>
  DEF a67 := U2 IRSHIFT V1 <INT>
  U2 := a67 <INT>
  GOTO IFEND_33_LEVEL_1
  LABEL IFNEXT_33_SEQ_0_LEVEL_1
  DEF a68 := 23 <INT>
  DEF a69 := V7 LT a68 <BOOL>
  DEF a70 := TRUE <BOOL>
  IF a69 BEQ a70
  THEN IFSTAT_33_SEQ_1_LEVEL_1
  ELSE IFNEXT_33_SEQ_1_LEVEL_1
  LABEL IFSTAT_33_SEQ_1_LEVEL_1
  DEF a71 := 23 <INT>
  DEF a72 := a71 ISUB V7 <INT>
  V1 := a72 <INT>
  DEF a73 := U2 ILSHIFT V1 <INT>
  U2 := a73 <INT>
  DEF a74 := 0 <INT>
  W6 := a74 <INT>
  GOTO IFEND_33_LEVEL_1
  LABEL IFNEXT_33_SEQ_1_LEVEL_1
  LABEL IFEND_33_LEVEL_1
  DEF a75 := 0 <INT>
  V4 := a75 <INT>
  V5 := U2 <INT>
  DEF a76 := 0 <INT>
  V2 := a76 <INT>
  CALL IntIsZero([V5 -> g18]<INT>)
  DEF a77 := (RETURN g22) <BOOL>
  DEF a78 := BNOT a77 <BOOL>
  DEF a79 := TRUE <BOOL>
  IF a78 BEQ a79
  THEN WHILESTAT_22_SEQ_0_LEVEL_0
  ELSE WHILENEXT_22_SEQ_0_LEVEL_0
  LABEL WHILECOND_22_SEQ_0_LEVEL_0
  IF a78 BEQ a79
  THEN WHILESTAT_22_SEQ_0_LEVEL_0
  ELSE WHILEEND_22_LEVEL_0
  LABEL WHILESTAT_22_SEQ_0_LEVEL_0
  DEF a80 := 1 <INT>
  DEF a81 := V5 IAND a80 <INT>
  V3 := a81 <INT>
  DEF a82 := 1 <INT>
  DEF a83 := V3 IEQ a82 <BOOL>
  DEF a84 := TRUE <BOOL>
  IF a83 BEQ a84
  THEN IFSTAT_34_SEQ_0_LEVEL_1
  ELSE IFNEXT_34_SEQ_0_LEVEL_1
  LABEL IFSTAT_34_SEQ_0_LEVEL_1
  V2 := V4 <INT>
  GOTO IFEND_34_LEVEL_1
  LABEL IFNEXT_34_SEQ_0_LEVEL_1
  LABEL IFEND_34_LEVEL_1
  DEF a85 := 1 <INT>
  DEF a86 := V4 IADD a85 <INT>
  V4 := a86 <INT>
  DEF a87 := 1 <INT>
  DEF a88 := V5 IRSHIFT a87 <INT>
  V5 := a88 <INT>
  CALL IntIsZero([V5 -> g18]<INT>)
  DEF a89 := (RETURN g22) <BOOL>
  DEF a90 := BNOT a89 <BOOL>
  a78 := a90 <BOOL>
  GOTO WHILECOND_22_SEQ_0_LEVEL_0
  LABEL WHILENEXT_22_SEQ_0_LEVEL_0
  LABEL WHILEEND_22_LEVEL_0
  DEF a91 := 23 <INT>
  DEF a92 := V2 LT a91 <BOOL>
  DEF a93 := TRUE <BOOL>
  IF a92 BEQ a93
  THEN IFSTAT_35_SEQ_0_LEVEL_1
  ELSE IFNEXT_35_SEQ_0_LEVEL_1
  LABEL IFSTAT_35_SEQ_0_LEVEL_1
  DEF a94 := 23 <INT>
  DEF a95 := a94 ISUB V2 <INT>
  V0 := a95 <INT>
  DEF a96 := U2 ILSHIFT V0 <INT>
  U2 := a96 <INT>
  DEF a97 := V1 ISUB V0 <INT>
  DEF a98 := W6 IRSHIFT a97 <INT>
  DEF a99 := U2 IOR a98 <INT>
  U2 := a99 <INT>
  DEF b10 := U3 ISUB V0 <INT>
  U3 := b10 <INT>
  GOTO IFEND_35_LEVEL_1
  LABEL IFNEXT_35_SEQ_0_LEVEL_1
  LABEL IFEND_35_LEVEL_1
  DEF b11 := 1 <INT>
  DEF b12 := U2 IADD b11 <INT>
  W1 := b12 <INT>
  DEF b13 := 0 <INT>
  W8 := b13 <INT>
  W0 := U2 <INT>
  DEF b14 := 0 <INT>
  W7 := b14 <INT>
  DEF b15 := 1 <INT>
  DEF b16 := V1 ISUB b15 <INT>
  DEF b17 := W6 IRSHIFT b16 <INT>
  V2 := b17 <INT>
  DEF b18 := 1 <INT>
  DEF b19 := V2 IEQ b18 <BOOL>
  DEF b20 := TRUE <BOOL>
  IF b19 BEQ b20
  THEN IFSTAT_36_SEQ_0_LEVEL_1
  ELSE IFNEXT_36_SEQ_0_LEVEL_1
  LABEL IFSTAT_36_SEQ_0_LEVEL_1
  U2 := W1 <INT>
  W6 := W8 <INT>
  GOTO IFEND_36_LEVEL_1
  LABEL IFNEXT_36_SEQ_0_LEVEL_1
  DEF b21 := W2 GT W3 <BOOL>
  DEF b22 := TRUE <BOOL>
  IF b21 BEQ b22
  THEN IFSTAT_36_SEQ_1_LEVEL_1
  ELSE IFNEXT_36_SEQ_1_LEVEL_1
  LABEL IFSTAT_36_SEQ_1_LEVEL_1
  U2 := W0 <INT>
  W6 := W7 <INT>
  GOTO IFEND_36_LEVEL_1
  LABEL IFNEXT_36_SEQ_1_LEVEL_1
  DEF b23 := 1 <INT>
  DEF b24 := W0 IAND b23 <INT>
  W4 := b24 <INT>
  DEF b25 := 1 <INT>
  DEF b26 := W1 IAND b25 <INT>
  W5 := b26 <INT>
  DEF b27 := 0 <INT>
  DEF b28 := W5 IEQ b27 <BOOL>
  DEF b29 := TRUE <BOOL>
  IF b28 BEQ b29
  THEN IFSTAT_37_SEQ_0_LEVEL_2
  ELSE IFNEXT_37_SEQ_0_LEVEL_2
  LABEL IFSTAT_37_SEQ_0_LEVEL_2
  U2 := W1 <INT>
  W6 := W8 <INT>
  GOTO IFEND_37_LEVEL_2
  LABEL IFNEXT_37_SEQ_0_LEVEL_2
  U2 := W0 <INT>
  W6 := W7 <INT>
  GOTO IFEND_37_LEVEL_2
  LABEL IFNEXT_37_SEQ_1_LEVEL_2
  LABEL IFEND_37_LEVEL_2
  GOTO IFEND_36_LEVEL_1
  LABEL IFNEXT_36_SEQ_2_LEVEL_1
  LABEL IFEND_36_LEVEL_1
  DEF b30 := U3 IADD (GLOBAL i16) <INT>
  U3 := b30 <INT>
  DEF b31 := 255 <INT>
  DEF b32 := U3 IAND b31 <INT>
  DEF b33 := 23 <INT>
  DEF b34 := b32 ILSHIFT b33 <INT>
  T4 := b34 <INT>
  DEF b35 := 31 <INT>
  DEF b36 := U1 ILSHIFT b35 <INT>
  DEF b37 := T4 IOR b36 <INT>
  T4 := b37 <INT>
  DEF b38 := 8388607 <INT>
  DEF b39 := U2 IAND b38 <INT>
  DEF b40 := T4 IOR b39 <INT>
  T4 := b40 <INT>
  GOTO IFEND_30_LEVEL_0
  LABEL IFNEXT_30_SEQ_3_LEVEL_0
  LABEL IFEND_30_LEVEL_0
  CALL IntBinaryAsReal([T4 -> g69]<INT>)
  DEF b41 := (RETURN g68) <REAL>
  T3 := b41 <REAL>
  DEF RETURN i17 := T3 <REAL>
 RETURN FROM RDivide
 PROC LABEL WriteString
  DEF g75 := 0 <INT>
  DEF g76 := 0 <INT>
  DEF g77 := 0 <INT>
  DEF g78 := 0 <INT>
  CALL StringAsAddress([(PARAM g92) -> g81]<STRING>)
  DEF g83 := (RETURN g82) <INT>
  g75 := g83 <INT>
  DEF g84 := 0 <INT>
  g76 := g84 <INT>
  IPARAM g77
  IPARAM g75
  IPARAM g76
  IASM "LDRB %r, [%r, +%r]"
  IPARAM g77
  IPARAM g77
  IASM "STR %r, %a"
  CALL IntIsZero([g77 -> g18]<INT>)
  DEF g85 := (RETURN g22) <BOOL>
  DEF g86 := BNOT g85 <BOOL>
  DEF g87 := TRUE <BOOL>
  IF g86 BEQ g87
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_1
  ELSE WHILENEXT_0_SEQ_0_LEVEL_0_1
  LABEL WHILECOND_0_SEQ_0_LEVEL_0_1
  IF g86 BEQ g87
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_1
  ELSE WHILEEND_0_LEVEL_0_1
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0_1
  IPARAM g78
  IASM "MOV %r, R0"
  IPARAM g77
  IASM "MOV R0, %r"
  IASM "SWI 6"
  DEF g88 := 1 <INT>
  DEF g89 := g76 IADD g88 <INT>
  g76 := g89 <INT>
  IPARAM g77
  IPARAM g75
  IPARAM g76
  IASM "LDRB %r, [%r, +%r]"
  IPARAM g77
  IPARAM g77
  IASM "STR %r, %a"
  IPARAM g78
  IASM "MOV R0, %r"
  CALL IntIsZero([g77 -> g18]<INT>)
  DEF g90 := (RETURN g22) <BOOL>
  DEF g91 := BNOT g90 <BOOL>
  g86 := g91 <BOOL>
  GOTO WHILECOND_0_SEQ_0_LEVEL_0_1
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0_1
  LABEL WHILEEND_0_LEVEL_0_1
 RETURN FROM WriteString
 PROC LABEL StringAsAddress
  DEF g79 := 0 <INT>
  DEF g80 := 0 <INT>
  IPARAM g80
  IPARAM (PARAM g81)
  IASM "LDR %r, %a"
  IPARAM g80
  IPARAM g79
  IASM "STR %r, %a"
  DEF RETURN g82 := g79 <INT>
 RETURN FROM StringAsAddress
 PROC LABEL RealSign
  DEF g93 := 0 <INT>
  DEF g94 := 0 <INT>
  CALL RealBinaryAsInt([(PARAM h15) -> g97]<REAL>)
  DEF g99 := (RETURN g98) <INT>
  g94 := g99 <INT>
  DEF h10 := 31 <INT>
  DEF h11 := g94 IRSHIFT h10 <INT>
  DEF h12 := 1 <INT>
  DEF h13 := h11 IAND h12 <INT>
  g93 := h13 <INT>
  DEF RETURN h14 := g93 <INT>
 RETURN FROM RealSign
 PROC LABEL RealBinaryAsInt
  DEF g95 := 0 <INT>
  DEF g96 := 0.0 <REAL>
  IPARAM g96
  IPARAM (PARAM g97)
  IASM "LDR %r, %a"
  IPARAM g96
  IPARAM g95
  IASM "STR %r, %a"
  DEF RETURN g98 := g95 <INT>
 RETURN FROM RealBinaryAsInt
 PROC LABEL WriteInt
  DEF h16 := 0 <INT>
  IPARAM h16
  IASM "MOV %r, R0"
  IPARAM (PARAM h17)
  IASM "LDR R0, %a"
  IASM "SWI 1"
  IPARAM h16
  IASM "MOV R0, %r"
 RETURN FROM WriteInt
 PROC LABEL WriteLn
  IASM "SWI 4"
 RETURN FROM WriteLn
 PROC LABEL RealExponent
  DEF h18 := 0 <INT>
  DEF h19 := 0 <INT>
  DEF h20 := 0 <INT>
  CALL RealBinaryAsInt([(PARAM h30) -> g97]<REAL>)
  DEF h21 := (RETURN g98) <INT>
  h19 := h21 <INT>
  DEF h22 := 23 <INT>
  DEF h23 := h19 IRSHIFT h22 <INT>
  DEF h24 := 255 <INT>
  DEF h25 := h23 IAND h24 <INT>
  h20 := h25 <INT>
  DEF h26 := h20 ISUB (GLOBAL i16) <INT>
  h18 := h26 <INT>
  DEF RETURN h29 := h18 <INT>
 RETURN FROM RealExponent
 PROC LABEL RealMantissa
  DEF h31 := 0 <INT>
  DEF h32 := 0 <INT>
  DEF h33 := 0 <INT>
  DEF h34 := 0 <INT>
  CALL RealBinaryAsInt([(PARAM h56) -> g97]<REAL>)
  DEF h35 := (RETURN g98) <INT>
  h32 := h35 <INT>
  DEF h36 := 8388607 <INT>
  DEF h37 := h32 IAND h36 <INT>
  h33 := h37 <INT>
  CALL RealIsZero([(PARAM h56) -> h50]<REAL>)
  DEF h51 := (RETURN h49) <BOOL>
  DEF h52 := TRUE <BOOL>
  IF h51 BEQ h52
  THEN IFSTAT_6_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_6_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_6_SEQ_0_LEVEL_0_0
  h31 := h33 <INT>
  GOTO IFEND_6_LEVEL_0_0
  LABEL IFNEXT_6_SEQ_0_LEVEL_0_0
  DEF h53 := 8388608 <INT>
  DEF h54 := h33 IOR h53 <INT>
  h31 := h54 <INT>
  GOTO IFEND_6_LEVEL_0_0
  LABEL IFNEXT_6_SEQ_1_LEVEL_0
  LABEL IFEND_6_LEVEL_0_0
  DEF RETURN h55 := h31 <INT>
 RETURN FROM RealMantissa
 PROC LABEL RealIsZero
  DEF h38 := FALSE <BOOL>
  DEF h39 := 0 <INT>
  DEF h40 := 0 <INT>
  CALL RealBinaryAsInt([(PARAM h50) -> g97]<REAL>)
  DEF h41 := (RETURN g98) <INT>
  h40 := h41 <INT>
  DEF h42 := 2147483647 <INT>
  DEF h43 := h40 IAND h42 <INT>
  h39 := h43 <INT>
  DEF h44 := 0 <INT>
  DEF h45 := h39 IEQ h44 <BOOL>
  DEF h46 := TRUE <BOOL>
  IF h45 BEQ h46
  THEN IFSTAT_0_SEQ_0_LEVEL_0_2
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_2
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_2
  DEF h47 := TRUE <BOOL>
  h38 := h47 <BOOL>
  GOTO IFEND_0_LEVEL_0_2
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_2
  DEF h48 := FALSE <BOOL>
  h38 := h48 <BOOL>
  GOTO IFEND_0_LEVEL_0_2
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_2
  LABEL IFEND_0_LEVEL_0_2
  DEF RETURN h49 := h38 <BOOL>
 RETURN FROM RealIsZero
 PROC LABEL Div
  DEF h57 := 0 <INT>
  DEF h58 := 0 <INT>
  DEF h59 := 0 <INT>
  DEF h60 := 0 <INT>
  DEF h61 := 0 <INT>
  DEF h62 := 0 <INT>
  DEF h63 := 0 <INT>
  DEF h64 := 0 <INT>
  DEF h65 := 0 <INT>
  h59 := (PARAM h66) <INT>
  DEF h67 := 0 <INT>
  h62 := h67 <INT>
  DEF h68 := 0 <INT>
  h60 := h68 <INT>
  CALL IntIsZero([h59 -> g18]<INT>)
  DEF h69 := (RETURN g22) <BOOL>
  DEF h70 := BNOT h69 <BOOL>
  DEF h71 := TRUE <BOOL>
  IF h70 BEQ h71
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_2
  ELSE WHILENEXT_0_SEQ_0_LEVEL_0_2
  LABEL WHILECOND_0_SEQ_0_LEVEL_0_2
  IF h70 BEQ h71
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_2
  ELSE WHILEEND_0_LEVEL_0_2
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0_2
  DEF h72 := 1 <INT>
  DEF h73 := h59 IAND h72 <INT>
  h61 := h73 <INT>
  DEF h74 := 1 <INT>
  DEF h75 := h61 IEQ h74 <BOOL>
  DEF h76 := TRUE <BOOL>
  IF h75 BEQ h76
  THEN IFSTAT_0_SEQ_0_LEVEL_0_3
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_3
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_3
  h60 := h62 <INT>
  GOTO IFEND_0_LEVEL_0_3
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_3
  LABEL IFEND_0_LEVEL_0_3
  DEF h77 := 1 <INT>
  DEF h78 := h62 IADD h77 <INT>
  h62 := h78 <INT>
  DEF h79 := 1 <INT>
  DEF h80 := h59 IRSHIFT h79 <INT>
  h59 := h80 <INT>
  CALL IntIsZero([h59 -> g18]<INT>)
  DEF h81 := (RETURN g22) <BOOL>
  DEF h82 := BNOT h81 <BOOL>
  h70 := h82 <BOOL>
  GOTO WHILECOND_0_SEQ_0_LEVEL_0_2
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0_2
  LABEL WHILEEND_0_LEVEL_0_2
  h63 := h60 <INT>
  h59 := (PARAM h66) <INT>
  DEF h83 := 0 <INT>
  h65 := h83 <INT>
  DEF h84 := 0 <INT>
  h58 := h84 <INT>
  DEF h85 := 0 <INT>
  DEF h86 := h63 GE h85 <BOOL>
  DEF h87 := TRUE <BOOL>
  IF h86 BEQ h87
  THEN WHILESTAT_2_SEQ_0_LEVEL_0_0
  ELSE WHILENEXT_2_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_2_SEQ_0_LEVEL_0_0
  IF h86 BEQ h87
  THEN WHILESTAT_2_SEQ_0_LEVEL_0_0
  ELSE WHILEEND_2_LEVEL_0_0
  LABEL WHILESTAT_2_SEQ_0_LEVEL_0_0
  DEF h88 := h59 IRSHIFT h63 <INT>
  DEF h89 := 1 <INT>
  DEF h90 := h88 IAND h89 <INT>
  h64 := h90 <INT>
  DEF h91 := 1 <INT>
  DEF h92 := h65 ILSHIFT h91 <INT>
  DEF h93 := h92 IOR h64 <INT>
  h65 := h93 <INT>
  DEF h94 := h65 GE (PARAM h95) <BOOL>
  DEF h96 := TRUE <BOOL>
  IF h94 BEQ h96
  THEN IFSTAT_1_SEQ_0_LEVEL_0_1
  ELSE IFNEXT_1_SEQ_0_LEVEL_0_1
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_1
  DEF h97 := 1 <INT>
  DEF h98 := h97 ILSHIFT h63 <INT>
  DEF h99 := h58 IOR h98 <INT>
  h58 := h99 <INT>
  DEF i10 := h65 ISUB (PARAM h95) <INT>
  h65 := i10 <INT>
  GOTO IFEND_1_LEVEL_0_1
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_1
  LABEL IFEND_1_LEVEL_0_1
  DEF i11 := 1 <INT>
  DEF i12 := h63 ISUB i11 <INT>
  h63 := i12 <INT>
  DEF i13 := 0 <INT>
  DEF i14 := h63 GE i13 <BOOL>
  h86 := i14 <BOOL>
  GOTO WHILECOND_2_SEQ_0_LEVEL_0_0
  LABEL WHILENEXT_2_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_2_LEVEL_0_0
  DEF RETURN i15 := h58 <INT>
 RETURN FROM Div
 PROC LABEL WriteReal
  DEF i25 := 0 <INT>
  IPARAM i25
  IASM "MOV %r, R0"
  IPARAM (PARAM i26)
  IASM "LDR R0, %a"
  IASM "SWI 2"
  IPARAM i25
  IASM "MOV R0, %r"
 RETURN FROM WriteReal
