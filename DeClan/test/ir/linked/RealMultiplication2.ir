SYMBOL SECTION
 ENTRY f33 CONST INTERNAL GLOBAL r1  <REAL>
 ENTRY f35 CONST INTERNAL GLOBAL r2  <REAL>
 ENTRY f36 INTERNAL GLOBAL result  <REAL>
 ENTRY k8 INTERNAL result RMul <REAL>
 ENTRY k9 INTERNAL intResult RMul <INT>
 ENTRY l0 INTERNAL n1Sign RMul <INT>
 ENTRY l1 INTERNAL n2Sign RMul <INT>
 ENTRY l2 INTERNAL n1Exp RMul <INT>
 ENTRY l3 INTERNAL n2Exp RMul <INT>
 ENTRY l4 INTERNAL n1Base RMul <INT>
 ENTRY l5 INTERNAL n2Base RMul <INT>
 ENTRY l6 INTERNAL resultSign RMul <INT>
 ENTRY l7 INTERNAL resultBase RMul <INT>
 ENTRY l8 INTERNAL resultExp RMul <INT>
 ENTRY l9 INTERNAL count RMul <INT>
 ENTRY m0 INTERNAL lastOne RMul <INT>
 ENTRY m1 INTERNAL tempBase RMul <INT>
 ENTRY m2 INTERNAL lastDigit RMul <INT>
 ENTRY m3 INTERNAL baseDif RMul <INT>
 ENTRY m4 INTERNAL n1LastOne RMul <INT>
 ENTRY m5 INTERNAL n1Count RMul <INT>
 ENTRY m6 INTERNAL n2LastOne RMul <INT>
 ENTRY m7 INTERNAL n2Count RMul <INT>
 ENTRY m8 INTERNAL n2BaseTemp RMul <INT>
 ENTRY m9 INTERNAL n1BaseTemp RMul <INT>
 ENTRY n0 INTERNAL n1LastDigit RMul <INT>
 ENTRY n1 INTERNAL n2LastDigit RMul <INT>
 ENTRY n2 INTERNAL lastOneTotal RMul <INT>
 ENTRY n3 INTERNAL hiBase RMul <INT>
 ENTRY n4 INTERNAL lowBase RMul <INT>
 ENTRY n5 INTERNAL tempHi RMul <INT>
 ENTRY n6 INTERNAL tempLow RMul <INT>
 ENTRY n7 INTERNAL lastHi RMul <INT>
 ENTRY n8 INTERNAL roundIndex RMul <INT>
 ENTRY n9 INTERNAL bitAtRoundIndex RMul <INT>
 ENTRY o0 INTERNAL lowAfterRound RMul <INT>
 ENTRY o1 INTERNAL hiAfterRound RMul <INT>
 ENTRY o2 INTERNAL bitAt31st RMul <INT>
 ENTRY o3 INTERNAL saveHi RMul <INT>
 ENTRY o4 INTERNAL saveLow RMul <INT>
 ENTRY o5 INTERNAL saveLowMask RMul <INT>
 ENTRY o6 INTERNAL saveHiMask RMul <INT>
 ENTRY f37 INTERNAL result RealSign <INT>
 ENTRY f38 INTERNAL realAsInteger RealSign <INT>
 ENTRY f39 INTERNAL result RealBinaryAsInt <INT>
 ENTRY f40 INTERNAL temp RealBinaryAsInt <REAL>
 ENTRY f41 INTERNAL PARAM r RealBinaryAsInt 0 <REAL>
 ENTRY f42 INTERNAL RETURN RealBinaryAsInt <INT>
 ENTRY f49 INTERNAL PARAM r RealSign 0 <REAL>
 ENTRY f48 INTERNAL RETURN RealSign <INT>
 ENTRY g15 INTERNAL PARAM n1 RMul 0 <REAL>
 ENTRY g16 INTERNAL PARAM n2 RMul 1 <REAL>
 ENTRY f50 INTERNAL result RealExponent <INT>
 ENTRY f51 INTERNAL realAsInteger RealExponent <INT>
 ENTRY f52 INTERNAL exponent RealExponent <INT>
 ENTRY f63 INTERNAL PARAM r RealExponent 0 <REAL>
 ENTRY f62 INTERNAL RETURN RealExponent <INT>
 ENTRY f64 INTERNAL result RealMantissa <INT>
 ENTRY f65 INTERNAL realAsInt RealMantissa <INT>
 ENTRY f66 INTERNAL significand RealMantissa <INT>
 ENTRY f67 INTERNAL exp RealMantissa <INT>
 ENTRY f89 INTERNAL PARAM r RealMantissa 0 <REAL>
 ENTRY f71 INTERNAL result RealIsZero <BOOL>
 ENTRY f72 INTERNAL val RealIsZero <INT>
 ENTRY f73 INTERNAL exp RealIsZero <INT>
 ENTRY f83 INTERNAL PARAM r RealIsZero 0 <REAL>
 ENTRY f82 INTERNAL RETURN RealIsZero <BOOL>
 ENTRY f88 INTERNAL RETURN RealMantissa <INT>
 ENTRY f90 INTERNAL result IntIsZero <BOOL>
 ENTRY f93 INTERNAL PARAM n IntIsZero 0 <INT>
 ENTRY f97 INTERNAL RETURN IntIsZero <BOOL>
 ENTRY f99 CONST INTERNAL GLOBAL realBias  <INT>
 ENTRY g10 INTERNAL result IntBinaryAsReal <REAL>
 ENTRY g11 INTERNAL temp IntBinaryAsReal <INT>
 ENTRY g12 INTERNAL PARAM n IntBinaryAsReal 0 <INT>
 ENTRY g13 INTERNAL RETURN IntBinaryAsReal <REAL>
 ENTRY g14 INTERNAL RETURN RMul <REAL>
 ENTRY g18 INTERNAL tempReg WriteReal <INT>
 ENTRY g19 INTERNAL PARAM r WriteReal 0 <REAL>
DATA SECTION
 DEF f32 := 30.32 <REAL>
 DEF GLOBAL f33 := f32 <REAL>
 DEF f34 := 2.0 <REAL>
 DEF GLOBAL f35 := f34 <REAL>
 DEF f60 := 127 <INT>
 DEF GLOBAL f99 := f60 <INT>
BSS SECTION
 DEF GLOBAL f36 := 0.0 <REAL>
CODE SECTION
 CALL RMul([(GLOBAL f33) -> g15]<REAL>, [(GLOBAL f35) -> g16]<REAL>) FROM CODE SECTION
 DEF g17 := (RETURN g14) <REAL>
 GLOBAL f36 := g17 <REAL>
 CALL WriteReal([(GLOBAL f36) -> g19]<REAL>) FROM GLOBAL f36 := g17 <REAL>
END
PROC SECTION
 PROC LABEL RMul
  DEF k8 := 0.0 <REAL>
  DEF k9 := 0 <INT>
  DEF l0 := 0 <INT>
  DEF l1 := 0 <INT>
  DEF l2 := 0 <INT>
  DEF l3 := 0 <INT>
  DEF l4 := 0 <INT>
  DEF l5 := 0 <INT>
  DEF l6 := 0 <INT>
  DEF l7 := 0 <INT>
  DEF l8 := 0 <INT>
  DEF l9 := 0 <INT>
  DEF m0 := 0 <INT>
  DEF m1 := 0 <INT>
  DEF m2 := 0 <INT>
  DEF m3 := 0 <INT>
  DEF m4 := 0 <INT>
  DEF m5 := 0 <INT>
  DEF m6 := 0 <INT>
  DEF m7 := 0 <INT>
  DEF m8 := 0 <INT>
  DEF m9 := 0 <INT>
  DEF n0 := 0 <INT>
  DEF n1 := 0 <INT>
  DEF n2 := 0 <INT>
  DEF n3 := 0 <INT>
  DEF n4 := 0 <INT>
  DEF n5 := 0 <INT>
  DEF n6 := 0 <INT>
  DEF n7 := 0 <INT>
  DEF n8 := 0 <INT>
  DEF n9 := 0 <INT>
  DEF o0 := 0 <INT>
  DEF o1 := 0 <INT>
  DEF o2 := 0 <INT>
  DEF o3 := 0 <INT>
  DEF o4 := 0 <INT>
  DEF o5 := 0 <INT>
  DEF o6 := 0 <INT>
  CALL RealSign([(PARAM g15) -> f49]<REAL>) FROM DEF o6 := 0 <INT>
  DEF o7 := (RETURN f48) <INT>
  l0 := o7 <INT>
  CALL RealSign([(PARAM g16) -> f49]<REAL>) FROM l0 := o7 <INT>
  DEF o8 := (RETURN f48) <INT>
  l1 := o8 <INT>
  CALL RealExponent([(PARAM g15) -> f63]<REAL>) FROM l1 := o8 <INT>
  DEF o9 := (RETURN f62) <INT>
  l2 := o9 <INT>
  CALL RealExponent([(PARAM g16) -> f63]<REAL>) FROM l2 := o9 <INT>
  DEF p0 := (RETURN f62) <INT>
  l3 := p0 <INT>
  CALL RealMantissa([(PARAM g15) -> f89]<REAL>) FROM l3 := p0 <INT>
  DEF p1 := (RETURN f88) <INT>
  l4 := p1 <INT>
  CALL RealMantissa([(PARAM g16) -> f89]<REAL>) FROM l4 := p1 <INT>
  DEF p2 := (RETURN f88) <INT>
  l5 := p2 <INT>
  CALL IntIsZero([l4 -> f93]<INT>) FROM l5 := p2 <INT>
  DEF p3 := (RETURN f97) <BOOL>
  DEF p4 := BNOT p3 <BOOL>
  CALL IntIsZero([l5 -> f93]<INT>) FROM DEF p4 := BNOT p3 <BOOL>
  DEF p5 := (RETURN f97) <BOOL>
  DEF p6 := BNOT p5 <BOOL>
  DEF p7 := p4 LAND p6 <BOOL>
  DEF p8 := TRUE <BOOL>
  IF p7 BEQ p8
  THEN IFSTAT_10_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_10_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_10_SEQ_0_LEVEL_0_0
  DEF p9 := 1 <INT>
  DEF q0 := l4 IAND p9 <INT>
  DEF q1 := 1 <INT>
  DEF q2 := q0 INE q1 <BOOL>
  DEF q3 := TRUE <BOOL>
  IF q2 BEQ q3
  THEN WHILESTAT_2_SEQ_0_LEVEL_0_0
  ELSE WHILENEXT_2_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_2_SEQ_0_LEVEL_0_0
  IF q2 BEQ q3
  THEN WHILESTAT_2_SEQ_0_LEVEL_0_0
  ELSE WHILEEND_2_LEVEL_0_0
  LABEL WHILESTAT_2_SEQ_0_LEVEL_0_0
  DEF q4 := 1 <INT>
  DEF q5 := l4 IRSHIFT q4 <INT>
  l4 := q5 <INT>
  DEF q6 := 1 <INT>
  DEF q7 := l4 IAND q6 <INT>
  DEF q8 := 1 <INT>
  DEF q9 := q7 INE q8 <BOOL>
  q2 := q9 <BOOL>
  GOTO WHILECOND_2_SEQ_0_LEVEL_0_0 FROM q2 := q9 <BOOL>
  LABEL WHILENEXT_2_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_2_LEVEL_0_0
  DEF r0 := 0 <INT>
  m5 := r0 <INT>
  m9 := l4 <INT>
  CALL IntIsZero([m9 -> f93]<INT>) FROM m9 := l4 <INT>
  DEF r1 := (RETURN f97) <BOOL>
  DEF r2 := BNOT r1 <BOOL>
  DEF r3 := TRUE <BOOL>
  IF r2 BEQ r3
  THEN WHILESTAT_4_SEQ_0_LEVEL_0_0
  ELSE WHILENEXT_4_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_4_SEQ_0_LEVEL_0_0
  IF r2 BEQ r3
  THEN WHILESTAT_4_SEQ_0_LEVEL_0_0
  ELSE WHILEEND_4_LEVEL_0_0
  LABEL WHILESTAT_4_SEQ_0_LEVEL_0_0
  DEF r4 := 1 <INT>
  DEF r5 := m9 IAND r4 <INT>
  n0 := r5 <INT>
  DEF r6 := 1 <INT>
  DEF r7 := n0 IEQ r6 <BOOL>
  DEF r8 := TRUE <BOOL>
  IF r7 BEQ r8
  THEN IFSTAT_11_SEQ_0_LEVEL_1
  ELSE IFNEXT_11_SEQ_0_LEVEL_1
  LABEL IFSTAT_11_SEQ_0_LEVEL_1
  m4 := m5 <INT>
  GOTO IFEND_11_LEVEL_1 FROM m4 := m5 <INT>
  LABEL IFNEXT_11_SEQ_0_LEVEL_1
  LABEL IFEND_11_LEVEL_1
  DEF r9 := 1 <INT>
  DEF s0 := m5 IADD r9 <INT>
  m5 := s0 <INT>
  DEF s1 := 1 <INT>
  DEF s2 := m9 IRSHIFT s1 <INT>
  m9 := s2 <INT>
  CALL IntIsZero([m9 -> f93]<INT>) FROM m9 := s2 <INT>
  DEF s3 := (RETURN f97) <BOOL>
  DEF s4 := BNOT s3 <BOOL>
  r2 := s4 <BOOL>
  GOTO WHILECOND_4_SEQ_0_LEVEL_0_0 FROM r2 := s4 <BOOL>
  LABEL WHILENEXT_4_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_4_LEVEL_0_0
  DEF s5 := 1 <INT>
  DEF s6 := l5 IAND s5 <INT>
  DEF s7 := 1 <INT>
  DEF s8 := s6 INE s7 <BOOL>
  DEF s9 := TRUE <BOOL>
  IF s8 BEQ s9
  THEN WHILESTAT_6_SEQ_0_LEVEL_0
  ELSE WHILENEXT_6_SEQ_0_LEVEL_0
  LABEL WHILECOND_6_SEQ_0_LEVEL_0
  IF s8 BEQ s9
  THEN WHILESTAT_6_SEQ_0_LEVEL_0
  ELSE WHILEEND_6_LEVEL_0
  LABEL WHILESTAT_6_SEQ_0_LEVEL_0
  DEF t0 := 1 <INT>
  DEF t1 := l5 IRSHIFT t0 <INT>
  l5 := t1 <INT>
  DEF t2 := 1 <INT>
  DEF t3 := l5 IAND t2 <INT>
  DEF t4 := 1 <INT>
  DEF t5 := t3 INE t4 <BOOL>
  s8 := t5 <BOOL>
  GOTO WHILECOND_6_SEQ_0_LEVEL_0 FROM s8 := t5 <BOOL>
  LABEL WHILENEXT_6_SEQ_0_LEVEL_0
  LABEL WHILEEND_6_LEVEL_0
  DEF t6 := 0 <INT>
  m7 := t6 <INT>
  m8 := l5 <INT>
  CALL IntIsZero([m8 -> f93]<INT>) FROM m8 := l5 <INT>
  DEF t7 := (RETURN f97) <BOOL>
  DEF t8 := BNOT t7 <BOOL>
  DEF t9 := TRUE <BOOL>
  IF t8 BEQ t9
  THEN WHILESTAT_8_SEQ_0_LEVEL_0
  ELSE WHILENEXT_8_SEQ_0_LEVEL_0
  LABEL WHILECOND_8_SEQ_0_LEVEL_0
  IF t8 BEQ t9
  THEN WHILESTAT_8_SEQ_0_LEVEL_0
  ELSE WHILEEND_8_LEVEL_0
  LABEL WHILESTAT_8_SEQ_0_LEVEL_0
  DEF u0 := 1 <INT>
  DEF u1 := m8 IAND u0 <INT>
  n1 := u1 <INT>
  DEF u2 := 1 <INT>
  DEF u3 := n1 IEQ u2 <BOOL>
  DEF u4 := TRUE <BOOL>
  IF u3 BEQ u4
  THEN IFSTAT_12_SEQ_0_LEVEL_1
  ELSE IFNEXT_12_SEQ_0_LEVEL_1
  LABEL IFSTAT_12_SEQ_0_LEVEL_1
  m6 := m7 <INT>
  GOTO IFEND_12_LEVEL_1 FROM m6 := m7 <INT>
  LABEL IFNEXT_12_SEQ_0_LEVEL_1
  LABEL IFEND_12_LEVEL_1
  DEF u5 := 1 <INT>
  DEF u6 := m7 IADD u5 <INT>
  m7 := u6 <INT>
  DEF u7 := 1 <INT>
  DEF u8 := m8 IRSHIFT u7 <INT>
  m8 := u8 <INT>
  CALL IntIsZero([m8 -> f93]<INT>) FROM m8 := u8 <INT>
  DEF u9 := (RETURN f97) <BOOL>
  DEF v0 := BNOT u9 <BOOL>
  t8 := v0 <BOOL>
  GOTO WHILECOND_8_SEQ_0_LEVEL_0 FROM t8 := v0 <BOOL>
  LABEL WHILENEXT_8_SEQ_0_LEVEL_0
  LABEL WHILEEND_8_LEVEL_0
  DEF v1 := m4 IADD m6 <INT>
  n2 := v1 <INT>
  DEF v2 := l0 INE l1 <BOOL>
  DEF v3 := TRUE <BOOL>
  IF v2 BEQ v3
  THEN IFSTAT_13_SEQ_0_LEVEL_1
  ELSE IFNEXT_13_SEQ_0_LEVEL_1
  LABEL IFSTAT_13_SEQ_0_LEVEL_1
  DEF v4 := 1 <INT>
  l6 := v4 <INT>
  GOTO IFEND_13_LEVEL_1 FROM l6 := v4 <INT>
  LABEL IFNEXT_13_SEQ_0_LEVEL_1
  DEF v5 := 0 <INT>
  l6 := v5 <INT>
  GOTO IFEND_13_LEVEL_1 FROM l6 := v5 <INT>
  LABEL IFNEXT_13_SEQ_1_LEVEL_1
  LABEL IFEND_13_LEVEL_1
  DEF v6 := l2 IADD l3 <INT>
  l8 := v6 <INT>
  IPARAM n4
  IPARAM n3
  IPARAM l4
  IPARAM l5
  IASM "MULL %r, %r, %r, %r"
  IPARAM n3
  IPARAM n3
  IASM "STR %r, %a"
  IPARAM n4
  IPARAM n4
  IASM "STR %r, %a"
  DEF v7 := 0 <INT>
  l9 := v7 <INT>
  n5 := n3 <INT>
  n6 := n4 <INT>
  CALL IntIsZero([n5 -> f93]<INT>) FROM n6 := n4 <INT>
  DEF v8 := (RETURN f97) <BOOL>
  DEF v9 := BNOT v8 <BOOL>
  DEF w0 := TRUE <BOOL>
  IF v9 BEQ w0
  THEN WHILESTAT_10_SEQ_0_LEVEL_0
  ELSE WHILENEXT_10_SEQ_0_LEVEL_0
  LABEL WHILECOND_10_SEQ_0_LEVEL_0
  IF v9 BEQ w0
  THEN WHILESTAT_10_SEQ_0_LEVEL_0
  ELSE WHILEEND_10_LEVEL_0
  LABEL WHILESTAT_10_SEQ_0_LEVEL_0
  DEF w1 := 1 <INT>
  DEF w2 := n6 IAND w1 <INT>
  m2 := w2 <INT>
  DEF w3 := 1 <INT>
  DEF w4 := m2 IEQ w3 <BOOL>
  DEF w5 := TRUE <BOOL>
  IF w4 BEQ w5
  THEN IFSTAT_14_SEQ_0_LEVEL_1
  ELSE IFNEXT_14_SEQ_0_LEVEL_1
  LABEL IFSTAT_14_SEQ_0_LEVEL_1
  m0 := l9 <INT>
  GOTO IFEND_14_LEVEL_1 FROM m0 := l9 <INT>
  LABEL IFNEXT_14_SEQ_0_LEVEL_1
  LABEL IFEND_14_LEVEL_1
  DEF w6 := 1 <INT>
  DEF w7 := l9 IADD w6 <INT>
  l9 := w7 <INT>
  DEF w8 := 1 <INT>
  DEF w9 := n5 IAND w8 <INT>
  n7 := w9 <INT>
  DEF x0 := 1 <INT>
  DEF x1 := n5 IRSHIFT x0 <INT>
  n5 := x1 <INT>
  DEF x2 := 1 <INT>
  DEF x3 := n6 IRSHIFT x2 <INT>
  n6 := x3 <INT>
  DEF x4 := 30 <INT>
  DEF x5 := n7 ILSHIFT x4 <INT>
  DEF x6 := n6 IOR x5 <INT>
  n6 := x6 <INT>
  CALL IntIsZero([n5 -> f93]<INT>) FROM n6 := x6 <INT>
  DEF x7 := (RETURN f97) <BOOL>
  DEF x8 := BNOT x7 <BOOL>
  v9 := x8 <BOOL>
  GOTO WHILECOND_10_SEQ_0_LEVEL_0 FROM v9 := x8 <BOOL>
  LABEL WHILENEXT_10_SEQ_0_LEVEL_0
  LABEL WHILEEND_10_LEVEL_0
  CALL IntIsZero([n6 -> f93]<INT>) FROM LABEL WHILEEND_10_LEVEL_0
  DEF x9 := (RETURN f97) <BOOL>
  DEF y0 := BNOT x9 <BOOL>
  DEF y1 := TRUE <BOOL>
  IF y0 BEQ y1
  THEN WHILESTAT_12_SEQ_0_LEVEL_0
  ELSE WHILENEXT_12_SEQ_0_LEVEL_0
  LABEL WHILECOND_12_SEQ_0_LEVEL_0
  IF y0 BEQ y1
  THEN WHILESTAT_12_SEQ_0_LEVEL_0
  ELSE WHILEEND_12_LEVEL_0
  LABEL WHILESTAT_12_SEQ_0_LEVEL_0
  DEF y2 := 1 <INT>
  DEF y3 := n6 IAND y2 <INT>
  m2 := y3 <INT>
  DEF y4 := 1 <INT>
  DEF y5 := m2 IEQ y4 <BOOL>
  DEF y6 := TRUE <BOOL>
  IF y5 BEQ y6
  THEN IFSTAT_15_SEQ_0_LEVEL_1
  ELSE IFNEXT_15_SEQ_0_LEVEL_1
  LABEL IFSTAT_15_SEQ_0_LEVEL_1
  m0 := l9 <INT>
  GOTO IFEND_15_LEVEL_1 FROM m0 := l9 <INT>
  LABEL IFNEXT_15_SEQ_0_LEVEL_1
  LABEL IFEND_15_LEVEL_1
  DEF y7 := 1 <INT>
  DEF y8 := l9 IADD y7 <INT>
  l9 := y8 <INT>
  DEF y9 := 1 <INT>
  DEF z0 := n6 IRSHIFT y9 <INT>
  n6 := z0 <INT>
  CALL IntIsZero([n6 -> f93]<INT>) FROM n6 := z0 <INT>
  DEF z1 := (RETURN f97) <BOOL>
  DEF z2 := BNOT z1 <BOOL>
  y0 := z2 <BOOL>
  GOTO WHILECOND_12_SEQ_0_LEVEL_0 FROM y0 := z2 <BOOL>
  LABEL WHILENEXT_12_SEQ_0_LEVEL_0
  LABEL WHILEEND_12_LEVEL_0
  DEF z3 := 23 <INT>
  DEF z4 := m0 ISUB z3 <INT>
  n8 := z4 <INT>
  DEF z5 := 31 <INT>
  DEF z6 := n8 LT z5 <BOOL>
  DEF z7 := 0 <INT>
  DEF z8 := n8 GT z7 <BOOL>
  DEF z9 := z6 LAND z8 <BOOL>
  DEF A0 := TRUE <BOOL>
  IF z9 BEQ A0
  THEN IFSTAT_16_SEQ_0_LEVEL_1
  ELSE IFNEXT_16_SEQ_0_LEVEL_1
  LABEL IFSTAT_16_SEQ_0_LEVEL_1
  DEF A1 := 1 <INT>
  DEF A2 := n8 ISUB A1 <INT>
  DEF A3 := n4 IRSHIFT A2 <INT>
  DEF A4 := 1 <INT>
  DEF A5 := A3 IAND A4 <INT>
  n9 := A5 <INT>
  DEF A6 := 1 <INT>
  DEF A7 := A6 ILSHIFT n8 <INT>
  DEF A8 := 1 <INT>
  DEF A9 := A7 ISUB A8 <INT>
  DEF B0 := INOT A9 <INT>
  o0 := B0 <INT>
  DEF B1 := n4 IAND o0 <INT>
  n4 := B1 <INT>
  DEF B2 := 1 <INT>
  DEF B3 := n9 IEQ B2 <BOOL>
  DEF B4 := TRUE <BOOL>
  IF B3 BEQ B4
  THEN IFSTAT_17_SEQ_0_LEVEL_2
  ELSE IFNEXT_17_SEQ_0_LEVEL_2
  LABEL IFSTAT_17_SEQ_0_LEVEL_2
  DEF B5 := 1 <INT>
  DEF B6 := B5 ILSHIFT n8 <INT>
  DEF B7 := n4 IADD B6 <INT>
  n4 := B7 <INT>
  DEF B8 := 31 <INT>
  DEF B9 := n4 IRSHIFT B8 <INT>
  DEF C0 := 1 <INT>
  DEF C1 := B9 IAND C0 <INT>
  o2 := C1 <INT>
  DEF C2 := 1 <INT>
  DEF C3 := o2 IEQ C2 <BOOL>
  DEF C4 := TRUE <BOOL>
  IF C3 BEQ C4
  THEN IFSTAT_18_SEQ_0_LEVEL_3
  ELSE IFNEXT_18_SEQ_0_LEVEL_3
  LABEL IFSTAT_18_SEQ_0_LEVEL_3
  DEF C5 := 1 <INT>
  DEF C6 := 31 <INT>
  DEF C7 := C5 ILSHIFT C6 <INT>
  DEF C8 := INOT C7 <INT>
  DEF C9 := n4 IAND C8 <INT>
  n4 := C9 <INT>
  DEF D0 := 1 <INT>
  DEF D1 := n3 IADD D0 <INT>
  n3 := D1 <INT>
  GOTO IFEND_18_LEVEL_3 FROM n3 := D1 <INT>
  LABEL IFNEXT_18_SEQ_0_LEVEL_3
  LABEL IFEND_18_LEVEL_3
  GOTO IFEND_17_LEVEL_2 FROM LABEL IFEND_18_LEVEL_3
  LABEL IFNEXT_17_SEQ_0_LEVEL_2
  LABEL IFEND_17_LEVEL_2
  GOTO IFEND_16_LEVEL_1 FROM LABEL IFEND_17_LEVEL_2
  LABEL IFNEXT_16_SEQ_0_LEVEL_1
  DEF D2 := 31 <INT>
  DEF D3 := n8 IEQ D2 <BOOL>
  DEF D4 := TRUE <BOOL>
  IF D3 BEQ D4
  THEN IFSTAT_16_SEQ_1_LEVEL_1
  ELSE IFNEXT_16_SEQ_1_LEVEL_1
  LABEL IFSTAT_16_SEQ_1_LEVEL_1
  DEF D5 := 30 <INT>
  DEF D6 := n4 IRSHIFT D5 <INT>
  DEF D7 := 1 <INT>
  DEF D8 := D6 IAND D7 <INT>
  n9 := D8 <INT>
  DEF D9 := 0 <INT>
  n4 := D9 <INT>
  DEF E0 := 1 <INT>
  DEF E1 := n9 IEQ E0 <BOOL>
  DEF E2 := TRUE <BOOL>
  IF E1 BEQ E2
  THEN IFSTAT_21_SEQ_0_LEVEL_2
  ELSE IFNEXT_21_SEQ_0_LEVEL_2
  LABEL IFSTAT_21_SEQ_0_LEVEL_2
  DEF E3 := 1 <INT>
  DEF E4 := n3 IADD E3 <INT>
  n3 := E4 <INT>
  GOTO IFEND_21_LEVEL_2 FROM n3 := E4 <INT>
  LABEL IFNEXT_21_SEQ_0_LEVEL_2
  LABEL IFEND_21_LEVEL_2
  GOTO IFEND_16_LEVEL_1 FROM LABEL IFEND_21_LEVEL_2
  LABEL IFNEXT_16_SEQ_1_LEVEL_1
  DEF E5 := 31 <INT>
  DEF E6 := n8 GT E5 <BOOL>
  DEF E7 := TRUE <BOOL>
  IF E6 BEQ E7
  THEN IFSTAT_16_SEQ_2_LEVEL_1
  ELSE IFNEXT_16_SEQ_2_LEVEL_1
  LABEL IFSTAT_16_SEQ_2_LEVEL_1
  DEF E8 := 32 <INT>
  DEF E9 := n8 ISUB E8 <INT>
  DEF F0 := n3 IRSHIFT E9 <INT>
  DEF F1 := 1 <INT>
  DEF F2 := F0 IAND F1 <INT>
  n9 := F2 <INT>
  DEF F3 := 1 <INT>
  DEF F4 := 31 <INT>
  DEF F5 := n8 ISUB F4 <INT>
  DEF F6 := F3 ILSHIFT F5 <INT>
  DEF F7 := 1 <INT>
  DEF F8 := F6 ISUB F7 <INT>
  DEF F9 := INOT F8 <INT>
  o1 := F9 <INT>
  DEF G0 := n3 IAND o1 <INT>
  n3 := G0 <INT>
  DEF G1 := 0 <INT>
  n4 := G1 <INT>
  DEF G2 := 1 <INT>
  DEF G3 := n9 IEQ G2 <BOOL>
  DEF G4 := TRUE <BOOL>
  IF G3 BEQ G4
  THEN IFSTAT_23_SEQ_0_LEVEL_2
  ELSE IFNEXT_23_SEQ_0_LEVEL_2
  LABEL IFSTAT_23_SEQ_0_LEVEL_2
  DEF G5 := 1 <INT>
  DEF G6 := 31 <INT>
  DEF G7 := n8 ISUB G6 <INT>
  DEF G8 := G5 ILSHIFT G7 <INT>
  DEF G9 := n3 IADD G8 <INT>
  n3 := G9 <INT>
  GOTO IFEND_23_LEVEL_2 FROM n3 := G9 <INT>
  LABEL IFNEXT_23_SEQ_0_LEVEL_2
  LABEL IFEND_23_LEVEL_2
  GOTO IFEND_16_LEVEL_1 FROM LABEL IFEND_23_LEVEL_2
  LABEL IFNEXT_16_SEQ_2_LEVEL_1
  LABEL IFEND_16_LEVEL_1
  DEF H0 := 23 <INT>
  DEF H1 := n2 LT H0 <BOOL>
  DEF H2 := TRUE <BOOL>
  IF H1 BEQ H2
  THEN IFSTAT_25_SEQ_0_LEVEL_1
  ELSE IFNEXT_25_SEQ_0_LEVEL_1
  LABEL IFSTAT_25_SEQ_0_LEVEL_1
  DEF H3 := 23 <INT>
  DEF H4 := H3 ISUB n2 <INT>
  m3 := H4 <INT>
  DEF H5 := n4 ILSHIFT m3 <INT>
  n4 := H5 <INT>
  GOTO IFEND_25_LEVEL_1 FROM n4 := H5 <INT>
  LABEL IFNEXT_25_SEQ_0_LEVEL_1
  DEF H6 := 30 <INT>
  DEF H7 := n2 GT H6 <BOOL>
  DEF H8 := TRUE <BOOL>
  IF H7 BEQ H8
  THEN IFSTAT_25_SEQ_1_LEVEL_1
  ELSE IFNEXT_25_SEQ_1_LEVEL_1
  LABEL IFSTAT_25_SEQ_1_LEVEL_1
  DEF H9 := 23 <INT>
  DEF I0 := n2 ISUB H9 <INT>
  m3 := I0 <INT>
  DEF I1 := 1 <INT>
  DEF I2 := I1 ILSHIFT m3 <INT>
  DEF I3 := 1 <INT>
  DEF I4 := I2 ISUB I3 <INT>
  o6 := I4 <INT>
  DEF I5 := n3 IAND o6 <INT>
  o3 := I5 <INT>
  DEF I6 := n3 IRSHIFT m3 <INT>
  n3 := I6 <INT>
  DEF I7 := n4 IRSHIFT m3 <INT>
  n4 := I7 <INT>
  DEF I8 := 30 <INT>
  DEF I9 := I8 ISUB m3 <INT>
  DEF J0 := 1 <INT>
  DEF J1 := I9 IADD J0 <INT>
  DEF J2 := o3 ILSHIFT J1 <INT>
  DEF J3 := n4 IOR J2 <INT>
  n4 := J3 <INT>
  GOTO IFEND_25_LEVEL_1 FROM n4 := J3 <INT>
  LABEL IFNEXT_25_SEQ_1_LEVEL_1
  DEF J4 := 23 <INT>
  DEF J5 := n2 GT J4 <BOOL>
  DEF J6 := TRUE <BOOL>
  IF J5 BEQ J6
  THEN IFSTAT_25_SEQ_2_LEVEL_1
  ELSE IFNEXT_25_SEQ_2_LEVEL_1
  LABEL IFSTAT_25_SEQ_2_LEVEL_1
  DEF J7 := 23 <INT>
  DEF J8 := n2 ISUB J7 <INT>
  m3 := J8 <INT>
  DEF J9 := n4 IRSHIFT m3 <INT>
  n4 := J9 <INT>
  GOTO IFEND_25_LEVEL_1 FROM n4 := J9 <INT>
  LABEL IFNEXT_25_SEQ_2_LEVEL_1
  LABEL IFEND_25_LEVEL_1
  DEF K0 := 0 <INT>
  l9 := K0 <INT>
  n5 := n3 <INT>
  n6 := n4 <INT>
  CALL IntIsZero([n5 -> f93]<INT>) FROM n6 := n4 <INT>
  DEF K1 := (RETURN f97) <BOOL>
  DEF K2 := BNOT K1 <BOOL>
  DEF K3 := TRUE <BOOL>
  IF K2 BEQ K3
  THEN WHILESTAT_14_SEQ_0_LEVEL_0
  ELSE WHILENEXT_14_SEQ_0_LEVEL_0
  LABEL WHILECOND_14_SEQ_0_LEVEL_0
  IF K2 BEQ K3
  THEN WHILESTAT_14_SEQ_0_LEVEL_0
  ELSE WHILEEND_14_LEVEL_0
  LABEL WHILESTAT_14_SEQ_0_LEVEL_0
  DEF K4 := 1 <INT>
  DEF K5 := n6 IAND K4 <INT>
  m2 := K5 <INT>
  DEF K6 := 1 <INT>
  DEF K7 := m2 IEQ K6 <BOOL>
  DEF K8 := TRUE <BOOL>
  IF K7 BEQ K8
  THEN IFSTAT_26_SEQ_0_LEVEL_1
  ELSE IFNEXT_26_SEQ_0_LEVEL_1
  LABEL IFSTAT_26_SEQ_0_LEVEL_1
  m0 := l9 <INT>
  GOTO IFEND_26_LEVEL_1 FROM m0 := l9 <INT>
  LABEL IFNEXT_26_SEQ_0_LEVEL_1
  LABEL IFEND_26_LEVEL_1
  DEF K9 := 1 <INT>
  DEF L0 := l9 IADD K9 <INT>
  l9 := L0 <INT>
  DEF L1 := 1 <INT>
  DEF L2 := n5 IAND L1 <INT>
  n7 := L2 <INT>
  DEF L3 := 1 <INT>
  DEF L4 := n5 IRSHIFT L3 <INT>
  n5 := L4 <INT>
  DEF L5 := 1 <INT>
  DEF L6 := n6 IRSHIFT L5 <INT>
  n6 := L6 <INT>
  DEF L7 := 30 <INT>
  DEF L8 := n7 ILSHIFT L7 <INT>
  DEF L9 := n6 IOR L8 <INT>
  n6 := L9 <INT>
  CALL IntIsZero([n5 -> f93]<INT>) FROM n6 := L9 <INT>
  DEF M0 := (RETURN f97) <BOOL>
  DEF M1 := BNOT M0 <BOOL>
  K2 := M1 <BOOL>
  GOTO WHILECOND_14_SEQ_0_LEVEL_0 FROM K2 := M1 <BOOL>
  LABEL WHILENEXT_14_SEQ_0_LEVEL_0
  LABEL WHILEEND_14_LEVEL_0
  CALL IntIsZero([n6 -> f93]<INT>) FROM LABEL WHILEEND_14_LEVEL_0
  DEF M2 := (RETURN f97) <BOOL>
  DEF M3 := BNOT M2 <BOOL>
  DEF M4 := TRUE <BOOL>
  IF M3 BEQ M4
  THEN WHILESTAT_16_SEQ_0_LEVEL_0
  ELSE WHILENEXT_16_SEQ_0_LEVEL_0
  LABEL WHILECOND_16_SEQ_0_LEVEL_0
  IF M3 BEQ M4
  THEN WHILESTAT_16_SEQ_0_LEVEL_0
  ELSE WHILEEND_16_LEVEL_0
  LABEL WHILESTAT_16_SEQ_0_LEVEL_0
  DEF M5 := 1 <INT>
  DEF M6 := n6 IAND M5 <INT>
  m2 := M6 <INT>
  DEF M7 := 1 <INT>
  DEF M8 := m2 IEQ M7 <BOOL>
  DEF M9 := TRUE <BOOL>
  IF M8 BEQ M9
  THEN IFSTAT_27_SEQ_0_LEVEL_1
  ELSE IFNEXT_27_SEQ_0_LEVEL_1
  LABEL IFSTAT_27_SEQ_0_LEVEL_1
  m0 := l9 <INT>
  GOTO IFEND_27_LEVEL_1 FROM m0 := l9 <INT>
  LABEL IFNEXT_27_SEQ_0_LEVEL_1
  LABEL IFEND_27_LEVEL_1
  DEF N0 := 1 <INT>
  DEF N1 := l9 IADD N0 <INT>
  l9 := N1 <INT>
  DEF N2 := 1 <INT>
  DEF N3 := n6 IRSHIFT N2 <INT>
  n6 := N3 <INT>
  CALL IntIsZero([n6 -> f93]<INT>) FROM n6 := N3 <INT>
  DEF N4 := (RETURN f97) <BOOL>
  DEF N5 := BNOT N4 <BOOL>
  M3 := N5 <BOOL>
  GOTO WHILECOND_16_SEQ_0_LEVEL_0 FROM M3 := N5 <BOOL>
  LABEL WHILENEXT_16_SEQ_0_LEVEL_0
  LABEL WHILEEND_16_LEVEL_0
  DEF N6 := 30 <INT>
  DEF N7 := m0 GT N6 <BOOL>
  DEF N8 := TRUE <BOOL>
  IF N7 BEQ N8
  THEN IFSTAT_28_SEQ_0_LEVEL_1
  ELSE IFNEXT_28_SEQ_0_LEVEL_1
  LABEL IFSTAT_28_SEQ_0_LEVEL_1
  DEF N9 := 1 <INT>
  DEF O0 := 30 <INT>
  DEF O1 := m0 ISUB O0 <INT>
  DEF O2 := N9 ILSHIFT O1 <INT>
  DEF O3 := 1 <INT>
  DEF O4 := O2 ISUB O3 <INT>
  o6 := O4 <INT>
  DEF O5 := n3 IAND o6 <INT>
  o3 := O5 <INT>
  DEF O6 := 30 <INT>
  DEF O7 := 23 <INT>
  DEF O8 := 30 <INT>
  DEF O9 := m0 ISUB O8 <INT>
  DEF P0 := O7 ISUB O9 <INT>
  DEF P1 := O6 ISUB P0 <INT>
  DEF P2 := n4 IRSHIFT P1 <INT>
  n4 := P2 <INT>
  DEF P3 := 23 <INT>
  DEF P4 := 30 <INT>
  DEF P5 := m0 ISUB P4 <INT>
  DEF P6 := P3 ISUB P5 <INT>
  DEF P7 := 1 <INT>
  DEF P8 := P6 IADD P7 <INT>
  DEF P9 := o3 ILSHIFT P8 <INT>
  DEF Q0 := n4 IOR P9 <INT>
  l7 := Q0 <INT>
  DEF Q1 := l8 IADD m3 <INT>
  l8 := Q1 <INT>
  GOTO IFEND_28_LEVEL_1 FROM l8 := Q1 <INT>
  LABEL IFNEXT_28_SEQ_0_LEVEL_1
  DEF Q2 := 23 <INT>
  DEF Q3 := m0 GT Q2 <BOOL>
  DEF Q4 := TRUE <BOOL>
  IF Q3 BEQ Q4
  THEN IFSTAT_28_SEQ_1_LEVEL_1
  ELSE IFNEXT_28_SEQ_1_LEVEL_1
  LABEL IFSTAT_28_SEQ_1_LEVEL_1
  DEF Q5 := 23 <INT>
  DEF Q6 := m0 ISUB Q5 <INT>
  m3 := Q6 <INT>
  DEF Q7 := n4 IRSHIFT m3 <INT>
  l7 := Q7 <INT>
  DEF Q8 := l8 IADD m3 <INT>
  l8 := Q8 <INT>
  GOTO IFEND_28_LEVEL_1 FROM l8 := Q8 <INT>
  LABEL IFNEXT_28_SEQ_1_LEVEL_1
  DEF Q9 := 23 <INT>
  DEF R0 := m0 LT Q9 <BOOL>
  DEF R1 := TRUE <BOOL>
  IF R0 BEQ R1
  THEN IFSTAT_28_SEQ_2_LEVEL_1
  ELSE IFNEXT_28_SEQ_2_LEVEL_1
  LABEL IFSTAT_28_SEQ_2_LEVEL_1
  DEF R2 := 23 <INT>
  DEF R3 := R2 ISUB m0 <INT>
  m3 := R3 <INT>
  DEF R4 := n4 ILSHIFT m3 <INT>
  l7 := R4 <INT>
  DEF R5 := l8 ISUB m3 <INT>
  l8 := R5 <INT>
  GOTO IFEND_28_LEVEL_1 FROM l8 := R5 <INT>
  LABEL IFNEXT_28_SEQ_2_LEVEL_1
  DEF R6 := 23 <INT>
  DEF R7 := m0 IEQ R6 <BOOL>
  DEF R8 := TRUE <BOOL>
  IF R7 BEQ R8
  THEN IFSTAT_28_SEQ_3_LEVEL_1
  ELSE IFNEXT_28_SEQ_3_LEVEL_1
  LABEL IFSTAT_28_SEQ_3_LEVEL_1
  l7 := n4 <INT>
  GOTO IFEND_28_LEVEL_1 FROM l7 := n4 <INT>
  LABEL IFNEXT_28_SEQ_3_LEVEL_1
  LABEL IFEND_28_LEVEL_1
  DEF R9 := l8 IADD (GLOBAL f99) <INT>
  l8 := R9 <INT>
  DEF S0 := 255 <INT>
  DEF S1 := l8 IAND S0 <INT>
  DEF S2 := 23 <INT>
  DEF S3 := S1 ILSHIFT S2 <INT>
  k9 := S3 <INT>
  DEF S4 := 1 <INT>
  DEF S5 := l6 IAND S4 <INT>
  DEF S6 := 31 <INT>
  DEF S7 := S5 ILSHIFT S6 <INT>
  DEF S8 := k9 IOR S7 <INT>
  k9 := S8 <INT>
  DEF S9 := 8388607 <INT>
  DEF T0 := l7 IAND S9 <INT>
  DEF T1 := k9 IOR T0 <INT>
  k9 := T1 <INT>
  GOTO IFEND_10_LEVEL_0_0 FROM k9 := T1 <INT>
  LABEL IFNEXT_10_SEQ_0_LEVEL_0_0
  LABEL IFEND_10_LEVEL_0_0
  CALL IntBinaryAsReal([k9 -> g12]<INT>) FROM LABEL IFEND_10_LEVEL_0_0
  DEF T2 := (RETURN g13) <REAL>
  k8 := T2 <REAL>
  DEF RETURN g14 := k8 <REAL>
 RETURN FROM RMul
 PROC LABEL RealSign
  DEF f37 := 0 <INT>
  DEF f38 := 0 <INT>
  CALL RealBinaryAsInt([(PARAM f49) -> f41]<REAL>) FROM DEF f38 := 0 <INT>
  DEF f43 := (RETURN f42) <INT>
  f38 := f43 <INT>
  DEF f44 := 31 <INT>
  DEF f45 := f38 IRSHIFT f44 <INT>
  DEF f46 := 1 <INT>
  DEF f47 := f45 IAND f46 <INT>
  f37 := f47 <INT>
  DEF RETURN f48 := f37 <INT>
 RETURN FROM RealSign
 PROC LABEL RealBinaryAsInt
  DEF f39 := 0 <INT>
  DEF f40 := 0.0 <REAL>
  IPARAM f40
  IPARAM (PARAM f41)
  IASM "LDR %r, %a"
  IPARAM f40
  IPARAM f39
  IASM "STR %r, %a"
  DEF RETURN f42 := f39 <INT>
 RETURN FROM RealBinaryAsInt
 PROC LABEL RealExponent
  DEF f50 := 0 <INT>
  DEF f51 := 0 <INT>
  DEF f52 := 0 <INT>
  CALL RealBinaryAsInt([(PARAM f63) -> f41]<REAL>) FROM DEF f52 := 0 <INT>
  DEF f53 := (RETURN f42) <INT>
  f51 := f53 <INT>
  DEF f54 := 23 <INT>
  DEF f55 := f51 IRSHIFT f54 <INT>
  DEF f56 := 255 <INT>
  DEF f57 := f55 IAND f56 <INT>
  f52 := f57 <INT>
  DEF f58 := f52 ISUB (GLOBAL f99) <INT>
  f50 := f58 <INT>
  DEF RETURN f62 := f50 <INT>
 RETURN FROM RealExponent
 PROC LABEL RealMantissa
  DEF f64 := 0 <INT>
  DEF f65 := 0 <INT>
  DEF f66 := 0 <INT>
  DEF f67 := 0 <INT>
  CALL RealBinaryAsInt([(PARAM f89) -> f41]<REAL>) FROM DEF f67 := 0 <INT>
  DEF f68 := (RETURN f42) <INT>
  f65 := f68 <INT>
  DEF f69 := 8388607 <INT>
  DEF f70 := f65 IAND f69 <INT>
  f66 := f70 <INT>
  CALL RealIsZero([(PARAM f89) -> f83]<REAL>) FROM f66 := f70 <INT>
  DEF f84 := (RETURN f82) <BOOL>
  DEF f85 := TRUE <BOOL>
  IF f84 BEQ f85
  THEN IFSTAT_6_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_6_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_6_SEQ_0_LEVEL_0_0
  f64 := f66 <INT>
  GOTO IFEND_6_LEVEL_0_0 FROM f64 := f66 <INT>
  LABEL IFNEXT_6_SEQ_0_LEVEL_0_0
  DEF f86 := 8388608 <INT>
  DEF f87 := f66 IOR f86 <INT>
  f64 := f87 <INT>
  GOTO IFEND_6_LEVEL_0_0 FROM f64 := f87 <INT>
  LABEL IFNEXT_6_SEQ_1_LEVEL_0
  LABEL IFEND_6_LEVEL_0_0
  DEF RETURN f88 := f64 <INT>
 RETURN FROM RealMantissa
 PROC LABEL RealIsZero
  DEF f71 := FALSE <BOOL>
  DEF f72 := 0 <INT>
  DEF f73 := 0 <INT>
  CALL RealBinaryAsInt([(PARAM f83) -> f41]<REAL>) FROM DEF f73 := 0 <INT>
  DEF f74 := (RETURN f42) <INT>
  f73 := f74 <INT>
  DEF f75 := 2147483647 <INT>
  DEF f76 := f73 IAND f75 <INT>
  f72 := f76 <INT>
  DEF f77 := 0 <INT>
  DEF f78 := f72 IEQ f77 <BOOL>
  DEF f79 := TRUE <BOOL>
  IF f78 BEQ f79
  THEN IFSTAT_0_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_0
  DEF f80 := TRUE <BOOL>
  f71 := f80 <BOOL>
  GOTO IFEND_0_LEVEL_0_0 FROM f71 := f80 <BOOL>
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_0
  DEF f81 := FALSE <BOOL>
  f71 := f81 <BOOL>
  GOTO IFEND_0_LEVEL_0_0 FROM f71 := f81 <BOOL>
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_0
  LABEL IFEND_0_LEVEL_0_0
  DEF RETURN f82 := f71 <BOOL>
 RETURN FROM RealIsZero
 PROC LABEL IntIsZero
  DEF f90 := FALSE <BOOL>
  DEF f91 := 0 <INT>
  DEF f92 := (PARAM f93) IEQ f91 <BOOL>
  DEF f94 := TRUE <BOOL>
  IF f92 BEQ f94
  THEN IFSTAT_1_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_1_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_0
  DEF f95 := TRUE <BOOL>
  f90 := f95 <BOOL>
  GOTO IFEND_1_LEVEL_0_0 FROM f90 := f95 <BOOL>
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_0
  DEF f96 := FALSE <BOOL>
  f90 := f96 <BOOL>
  GOTO IFEND_1_LEVEL_0_0 FROM f90 := f96 <BOOL>
  LABEL IFNEXT_1_SEQ_1_LEVEL_0_0
  LABEL IFEND_1_LEVEL_0_0
  DEF RETURN f97 := f90 <BOOL>
 RETURN FROM IntIsZero
 PROC LABEL IntBinaryAsReal
  DEF g10 := 0.0 <REAL>
  DEF g11 := 0 <INT>
  IPARAM g11
  IPARAM (PARAM g12)
  IASM "LDR %r, %a"
  IPARAM g11
  IPARAM g10
  IASM "STR %r, %a"
  DEF RETURN g13 := g10 <REAL>
 RETURN FROM IntBinaryAsReal
 PROC LABEL WriteReal
  DEF g18 := 0 <INT>
  IPARAM g18
  IASM "MOV %r, R0"
  IPARAM (PARAM g19)
  IASM "LDR R0, %a"
  IASM "SWI 2"
  IPARAM g18
  IASM "MOV R0, %r"
 RETURN FROM WriteReal
