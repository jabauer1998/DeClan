SYMBOL SECTION
 ENTRY f33 CONST INTERNAL GLOBAL r1  <REAL>
 ENTRY f35 CONST INTERNAL GLOBAL r2  <REAL>
 ENTRY f36 INTERNAL GLOBAL result  <REAL>
 ENTRY T3 INTERNAL result RDivide <REAL>
 ENTRY T4 INTERNAL intResult RDivide <INT>
 ENTRY T5 INTERNAL n1Sign RDivide <INT>
 ENTRY T6 INTERNAL n2Sign RDivide <INT>
 ENTRY T7 INTERNAL n1Exp RDivide <INT>
 ENTRY T8 INTERNAL n2Exp RDivide <INT>
 ENTRY T9 INTERNAL n1Base RDivide <INT>
 ENTRY U0 INTERNAL n2Base RDivide <INT>
 ENTRY U1 INTERNAL resultSign RDivide <INT>
 ENTRY U2 INTERNAL resultBase RDivide <INT>
 ENTRY U3 INTERNAL resultExp RDivide <INT>
 ENTRY U4 INTERNAL n2Count RDivide <INT>
 ENTRY U5 INTERNAL n2LastDigit RDivide <INT>
 ENTRY U6 INTERNAL n2TempBase RDivide <INT>
 ENTRY U7 INTERNAL n2FirstOne RDivide <INT>
 ENTRY U8 INTERNAL n2LastOne RDivide <INT>
 ENTRY U9 INTERNAL toShiftExp RDivide <INT>
 ENTRY V0 INTERNAL toShiftBase RDivide <INT>
 ENTRY V1 INTERNAL toShiftBack RDivide <INT>
 ENTRY V2 INTERNAL resultLastOne RDivide <INT>
 ENTRY V3 INTERNAL resultLastDigit RDivide <INT>
 ENTRY V4 INTERNAL count RDivide <INT>
 ENTRY V5 INTERNAL resultTempBase RDivide <INT>
 ENTRY V6 INTERNAL n1DecimalPlace RDivide <INT>
 ENTRY V7 INTERNAL resultDecimalPlace RDivide <INT>
 ENTRY V8 INTERNAL roundIndex RDivide <INT>
 ENTRY V9 INTERNAL afterRound RDivide <INT>
 ENTRY W0 INTERNAL lowBase RDivide <INT>
 ENTRY W1 INTERNAL hiBase RDivide <INT>
 ENTRY W2 INTERNAL lowDiff RDivide <INT>
 ENTRY W3 INTERNAL hiDiff RDivide <INT>
 ENTRY W4 INTERNAL lowBit RDivide <INT>
 ENTRY W5 INTERNAL hiBit RDivide <INT>
 ENTRY W6 INTERNAL resultBitStorage RDivide <INT>
 ENTRY W7 INTERNAL lowBitStorage RDivide <INT>
 ENTRY W8 INTERNAL hiBitStorage RDivide <INT>
 ENTRY f37 INTERNAL addressHolder WriteString <INT>
 ENTRY f38 INTERNAL offsetHolder WriteString <INT>
 ENTRY f39 INTERNAL valueHolder WriteString <INT>
 ENTRY f40 INTERNAL tempHolder WriteString <INT>
 ENTRY f41 INTERNAL result StringAsAddress <INT>
 ENTRY f42 INTERNAL temp StringAsAddress <INT>
 ENTRY f43 INTERNAL PARAM s StringAsAddress 0 <STRING>
 ENTRY f44 INTERNAL RETURN StringAsAddress <INT>
 ENTRY f62 INTERNAL PARAM s WriteString 0 <STRING>
 ENTRY f47 INTERNAL result IntIsZero <BOOL>
 ENTRY f50 INTERNAL PARAM n IntIsZero 0 <INT>
 ENTRY f54 INTERNAL RETURN IntIsZero <BOOL>
 ENTRY f63 INTERNAL result RealSign <INT>
 ENTRY f64 INTERNAL realAsInteger RealSign <INT>
 ENTRY f65 INTERNAL result RealBinaryAsInt <INT>
 ENTRY f66 INTERNAL temp RealBinaryAsInt <REAL>
 ENTRY f67 INTERNAL PARAM r RealBinaryAsInt 0 <REAL>
 ENTRY f68 INTERNAL RETURN RealBinaryAsInt <INT>
 ENTRY f75 INTERNAL PARAM r RealSign 0 <REAL>
 ENTRY f74 INTERNAL RETURN RealSign <INT>
 ENTRY g84 INTERNAL PARAM n1 RDivide 0 <REAL>
 ENTRY f76 INTERNAL tempReg WriteInt <INT>
 ENTRY f77 INTERNAL PARAM i WriteInt 0 <INT>
 ENTRY g85 INTERNAL PARAM n2 RDivide 1 <REAL>
 ENTRY f78 INTERNAL result RealExponent <INT>
 ENTRY f79 INTERNAL realAsInteger RealExponent <INT>
 ENTRY f80 INTERNAL exponent RealExponent <INT>
 ENTRY f91 INTERNAL PARAM r RealExponent 0 <REAL>
 ENTRY f90 INTERNAL RETURN RealExponent <INT>
 ENTRY f92 INTERNAL result RealMantissa <INT>
 ENTRY f93 INTERNAL realAsInt RealMantissa <INT>
 ENTRY f94 INTERNAL significand RealMantissa <INT>
 ENTRY f95 INTERNAL exp RealMantissa <INT>
 ENTRY g27 INTERNAL PARAM r RealMantissa 0 <REAL>
 ENTRY f99 INTERNAL result RealIsZero <BOOL>
 ENTRY g10 INTERNAL val RealIsZero <INT>
 ENTRY g11 INTERNAL exp RealIsZero <INT>
 ENTRY g21 INTERNAL PARAM r RealIsZero 0 <REAL>
 ENTRY g20 INTERNAL RETURN RealIsZero <BOOL>
 ENTRY g26 INTERNAL RETURN RealMantissa <INT>
 ENTRY g28 INTERNAL total Div <INT>
 ENTRY g29 INTERNAL result Div <INT>
 ENTRY g30 INTERNAL tempDividend Div <INT>
 ENTRY g31 INTERNAL dividendLastOne Div <INT>
 ENTRY g32 INTERNAL dividendLastDigit Div <INT>
 ENTRY g33 INTERNAL dividendCount Div <INT>
 ENTRY g34 INTERNAL dividendIndex Div <INT>
 ENTRY g35 INTERNAL bitAtIndex Div <INT>
 ENTRY g36 INTERNAL remainder Div <INT>
 ENTRY g37 INTERNAL PARAM dividend Div 0 <INT>
 ENTRY g66 INTERNAL PARAM divisor Div 1 <INT>
 ENTRY g76 INTERNAL RETURN Div <INT>
 ENTRY g78 CONST INTERNAL GLOBAL realBias  <INT>
 ENTRY g79 INTERNAL result IntBinaryAsReal <REAL>
 ENTRY g80 INTERNAL temp IntBinaryAsReal <INT>
 ENTRY g81 INTERNAL PARAM n IntBinaryAsReal 0 <INT>
 ENTRY g82 INTERNAL RETURN IntBinaryAsReal <REAL>
 ENTRY g83 INTERNAL RETURN RDivide <REAL>
 ENTRY g87 INTERNAL tempReg WriteReal <INT>
 ENTRY g88 INTERNAL PARAM r WriteReal 0 <REAL>
DATA SECTION
 DEF f32 := 1.0 <REAL>
 DEF GLOBAL f33 := f32 <REAL>
 DEF f34 := 2.0 <REAL>
 DEF GLOBAL f35 := f34 <REAL>
 DEF f88 := 127 <INT>
 DEF GLOBAL g78 := f88 <INT>
BSS SECTION
 DEF GLOBAL f36 := 0.0 <REAL>
CODE SECTION
 CALL RDivide([(GLOBAL f33) -> g84]<REAL>, [(GLOBAL f35) -> g85]<REAL>)
 DEF g86 := (RETURN g83) <REAL>
 GLOBAL f36 := g86 <REAL>
 CALL WriteReal([(GLOBAL f36) -> g88]<REAL>)
END
PROC SECTION
 PROC LABEL RDivide
  DEF T3 := 0.0 <REAL>
  DEF T4 := 0 <INT>
  DEF T5 := 0 <INT>
  DEF T6 := 0 <INT>
  DEF T7 := 0 <INT>
  DEF T8 := 0 <INT>
  DEF T9 := 0 <INT>
  DEF U0 := 0 <INT>
  DEF U1 := 0 <INT>
  DEF U2 := 0 <INT>
  DEF U3 := 0 <INT>
  DEF U4 := 0 <INT>
  DEF U5 := 0 <INT>
  DEF U6 := 0 <INT>
  DEF U7 := 0 <INT>
  DEF U8 := 0 <INT>
  DEF U9 := 0 <INT>
  DEF V0 := 0 <INT>
  DEF V1 := 0 <INT>
  DEF V2 := 0 <INT>
  DEF V3 := 0 <INT>
  DEF V4 := 0 <INT>
  DEF V5 := 0 <INT>
  DEF V6 := 0 <INT>
  DEF V7 := 0 <INT>
  DEF V8 := 0 <INT>
  DEF V9 := 0 <INT>
  DEF W0 := 0 <INT>
  DEF W1 := 0 <INT>
  DEF W2 := 0 <INT>
  DEF W3 := 0 <INT>
  DEF W4 := 0 <INT>
  DEF W5 := 0 <INT>
  DEF W6 := 0 <INT>
  DEF W7 := 0 <INT>
  DEF W8 := 0 <INT>
  DEF W9 := "n1SignIs: " <STRING>
  CALL WriteString([W9 -> f62]<STRING>)
  CALL RealSign([(PARAM g84) -> f75]<REAL>)
  DEF X1 := (RETURN f74) <INT>
  T5 := X1 <INT>
  CALL WriteInt([T5 -> f77]<INT>)
  CALL WriteLn()
  DEF X3 := "n2SignIs: " <STRING>
  CALL WriteString([X3 -> f62]<STRING>)
  CALL RealSign([(PARAM g85) -> f75]<REAL>)
  DEF X4 := (RETURN f74) <INT>
  T6 := X4 <INT>
  CALL WriteInt([T6 -> f77]<INT>)
  CALL WriteLn()
  DEF X5 := "n1ExponentIs: " <STRING>
  CALL WriteString([X5 -> f62]<STRING>)
  CALL RealExponent([(PARAM g84) -> f91]<REAL>)
  DEF X6 := (RETURN f90) <INT>
  T7 := X6 <INT>
  CALL WriteInt([T7 -> f77]<INT>)
  CALL WriteLn()
  DEF X7 := "n2ExpIs: " <STRING>
  CALL WriteString([X7 -> f62]<STRING>)
  CALL RealExponent([(PARAM g85) -> f91]<REAL>)
  DEF X8 := (RETURN f90) <INT>
  T8 := X8 <INT>
  CALL WriteInt([T8 -> f77]<INT>)
  CALL WriteLn()
  DEF X9 := "n1Base is: " <STRING>
  CALL WriteString([X9 -> f62]<STRING>)
  CALL RealMantissa([(PARAM g84) -> g27]<REAL>)
  DEF Y0 := (RETURN g26) <INT>
  T9 := Y0 <INT>
  CALL WriteInt([T9 -> f77]<INT>)
  CALL WriteLn()
  DEF Y1 := "n2BaseIs: " <STRING>
  CALL WriteString([Y1 -> f62]<STRING>)
  CALL RealMantissa([(PARAM g85) -> g27]<REAL>)
  DEF Y2 := (RETURN g26) <INT>
  U0 := Y2 <INT>
  CALL WriteInt([U0 -> f77]<INT>)
  CALL WriteLn()
  CALL IntIsZero([T9 -> f50]<INT>)
  DEF Y3 := (RETURN f54) <BOOL>
  CALL IntIsZero([U0 -> f50]<INT>)
  DEF Y4 := (RETURN f54) <BOOL>
  DEF Y5 := Y3 LAND Y4 <BOOL>
  DEF Y6 := TRUE <BOOL>
  IF Y5 BEQ Y6
  THEN IFSTAT_30_SEQ_0_LEVEL_0
  ELSE IFNEXT_30_SEQ_0_LEVEL_0
  LABEL IFSTAT_30_SEQ_0_LEVEL_0
  DEF Y7 := 1065353216 <INT>
  T4 := Y7 <INT>
  GOTO IFEND_30_LEVEL_0
  LABEL IFNEXT_30_SEQ_0_LEVEL_0
  CALL IntIsZero([T9 -> f50]<INT>)
  DEF Y8 := (RETURN f54) <BOOL>
  DEF Y9 := BNOT Y8 <BOOL>
  CALL IntIsZero([U0 -> f50]<INT>)
  DEF Z0 := (RETURN f54) <BOOL>
  DEF Z1 := Y9 LAND Z0 <BOOL>
  DEF Z2 := TRUE <BOOL>
  IF Z1 BEQ Z2
  THEN IFSTAT_30_SEQ_1_LEVEL_0
  ELSE IFNEXT_30_SEQ_1_LEVEL_0
  LABEL IFSTAT_30_SEQ_1_LEVEL_0
  DEF Z3 := 2139095040 <INT>
  T4 := Z3 <INT>
  GOTO IFEND_30_LEVEL_0
  LABEL IFNEXT_30_SEQ_1_LEVEL_0
  CALL IntIsZero([T9 -> f50]<INT>)
  DEF Z4 := (RETURN f54) <BOOL>
  CALL IntIsZero([U0 -> f50]<INT>)
  DEF Z5 := (RETURN f54) <BOOL>
  DEF Z6 := BNOT Z5 <BOOL>
  DEF Z7 := Z4 LAND Z6 <BOOL>
  DEF Z8 := TRUE <BOOL>
  IF Z7 BEQ Z8
  THEN IFSTAT_30_SEQ_2_LEVEL_0
  ELSE IFNEXT_30_SEQ_2_LEVEL_0
  LABEL IFSTAT_30_SEQ_2_LEVEL_0
  DEF Z9 := 0 <INT>
  T4 := Z9 <INT>
  GOTO IFEND_30_LEVEL_0
  LABEL IFNEXT_30_SEQ_2_LEVEL_0
  DEF a10 := 30 <INT>
  DEF a11 := 23 <INT>
  DEF a12 := a10 ISUB a11 <INT>
  V0 := a12 <INT>
  DEF a13 := T9 ILSHIFT V0 <INT>
  T9 := a13 <INT>
  DEF a14 := 0 <INT>
  U4 := a14 <INT>
  U6 := U0 <INT>
  DEF a15 := 1 <INT>
  DEF a16 := U6 IAND a15 <INT>
  DEF a17 := 0 <INT>
  DEF a18 := a16 IEQ a17 <BOOL>
  DEF a19 := TRUE <BOOL>
  IF a18 BEQ a19
  THEN WHILESTAT_18_SEQ_0_LEVEL_0
  ELSE WHILENEXT_18_SEQ_0_LEVEL_0
  LABEL WHILECOND_18_SEQ_0_LEVEL_0
  IF a18 BEQ a19
  THEN WHILESTAT_18_SEQ_0_LEVEL_0
  ELSE WHILEEND_18_LEVEL_0
  LABEL WHILESTAT_18_SEQ_0_LEVEL_0
  DEF a20 := 1 <INT>
  DEF a21 := U6 IRSHIFT a20 <INT>
  U6 := a21 <INT>
  DEF a22 := 1 <INT>
  DEF a23 := U4 IADD a22 <INT>
  U4 := a23 <INT>
  DEF a24 := 1 <INT>
  DEF a25 := U6 IAND a24 <INT>
  DEF a26 := 0 <INT>
  DEF a27 := a25 IEQ a26 <BOOL>
  a18 := a27 <BOOL>
  GOTO WHILECOND_18_SEQ_0_LEVEL_0
  LABEL WHILENEXT_18_SEQ_0_LEVEL_0
  LABEL WHILEEND_18_LEVEL_0
  U7 := U4 <INT>
  V0 := U7 <INT>
  DEF a28 := U0 IRSHIFT V0 <INT>
  U0 := a28 <INT>
  DEF a29 := 0 <INT>
  U4 := a29 <INT>
  U6 := U0 <INT>
  CALL IntIsZero([U6 -> f50]<INT>)
  DEF a30 := (RETURN f54) <BOOL>
  DEF a31 := BNOT a30 <BOOL>
  DEF a32 := TRUE <BOOL>
  IF a31 BEQ a32
  THEN WHILESTAT_20_SEQ_0_LEVEL_0
  ELSE WHILENEXT_20_SEQ_0_LEVEL_0
  LABEL WHILECOND_20_SEQ_0_LEVEL_0
  IF a31 BEQ a32
  THEN WHILESTAT_20_SEQ_0_LEVEL_0
  ELSE WHILEEND_20_LEVEL_0
  LABEL WHILESTAT_20_SEQ_0_LEVEL_0
  DEF a33 := 1 <INT>
  DEF a34 := U6 IAND a33 <INT>
  U5 := a34 <INT>
  DEF a35 := 1 <INT>
  DEF a36 := U5 IEQ a35 <BOOL>
  DEF a37 := TRUE <BOOL>
  IF a36 BEQ a37
  THEN IFSTAT_31_SEQ_0_LEVEL_1
  ELSE IFNEXT_31_SEQ_0_LEVEL_1
  LABEL IFSTAT_31_SEQ_0_LEVEL_1
  U8 := U4 <INT>
  GOTO IFEND_31_LEVEL_1
  LABEL IFNEXT_31_SEQ_0_LEVEL_1
  LABEL IFEND_31_LEVEL_1
  DEF a38 := 1 <INT>
  DEF a39 := U4 IADD a38 <INT>
  U4 := a39 <INT>
  DEF a40 := 1 <INT>
  DEF a41 := U6 IRSHIFT a40 <INT>
  U6 := a41 <INT>
  CALL IntIsZero([U6 -> f50]<INT>)
  DEF a42 := (RETURN f54) <BOOL>
  DEF a43 := BNOT a42 <BOOL>
  a31 := a43 <BOOL>
  GOTO WHILECOND_20_SEQ_0_LEVEL_0
  LABEL WHILENEXT_20_SEQ_0_LEVEL_0
  LABEL WHILEEND_20_LEVEL_0
  U9 := U8 <INT>
  DEF a44 := T7 ISUB U9 <INT>
  T7 := a44 <INT>
  DEF a45 := T8 ISUB U9 <INT>
  T8 := a45 <INT>
  DEF a46 := 30 <INT>
  DEF a47 := a46 ISUB U9 <INT>
  V6 := a47 <INT>
  V7 := V6 <INT>
  DEF a48 := T5 INE T6 <BOOL>
  DEF a49 := TRUE <BOOL>
  IF a48 BEQ a49
  THEN IFSTAT_32_SEQ_0_LEVEL_1
  ELSE IFNEXT_32_SEQ_0_LEVEL_1
  LABEL IFSTAT_32_SEQ_0_LEVEL_1
  DEF a50 := 1 <INT>
  U1 := a50 <INT>
  GOTO IFEND_32_LEVEL_1
  LABEL IFNEXT_32_SEQ_0_LEVEL_1
  DEF a51 := 0 <INT>
  U1 := a51 <INT>
  GOTO IFEND_32_LEVEL_1
  LABEL IFNEXT_32_SEQ_1_LEVEL_1
  LABEL IFEND_32_LEVEL_1
  DEF a52 := T7 ISUB T8 <INT>
  U3 := a52 <INT>
  CALL Div([T9 -> g37]<INT>, [U0 -> g66]<INT>)
  DEF a56 := (RETURN g76) <INT>
  U2 := a56 <INT>
  DEF a57 := 23 <INT>
  DEF a58 := V7 GT a57 <BOOL>
  DEF a59 := TRUE <BOOL>
  IF a58 BEQ a59
  THEN IFSTAT_33_SEQ_0_LEVEL_1
  ELSE IFNEXT_33_SEQ_0_LEVEL_1
  LABEL IFSTAT_33_SEQ_0_LEVEL_1
  DEF a60 := 23 <INT>
  DEF a61 := V7 ISUB a60 <INT>
  V1 := a61 <INT>
  DEF a62 := 1 <INT>
  DEF a63 := a62 ILSHIFT V1 <INT>
  DEF a64 := 1 <INT>
  DEF a65 := a63 ISUB a64 <INT>
  DEF a66 := U2 IAND a65 <INT>
  W6 := a66 <INT>
  DEF a67 := U2 IRSHIFT V1 <INT>
  U2 := a67 <INT>
  GOTO IFEND_33_LEVEL_1
  LABEL IFNEXT_33_SEQ_0_LEVEL_1
  DEF a68 := 23 <INT>
  DEF a69 := V7 LT a68 <BOOL>
  DEF a70 := TRUE <BOOL>
  IF a69 BEQ a70
  THEN IFSTAT_33_SEQ_1_LEVEL_1
  ELSE IFNEXT_33_SEQ_1_LEVEL_1
  LABEL IFSTAT_33_SEQ_1_LEVEL_1
  DEF a71 := 23 <INT>
  DEF a72 := a71 ISUB V7 <INT>
  V1 := a72 <INT>
  DEF a73 := U2 ILSHIFT V1 <INT>
  U2 := a73 <INT>
  DEF a74 := 0 <INT>
  W6 := a74 <INT>
  GOTO IFEND_33_LEVEL_1
  LABEL IFNEXT_33_SEQ_1_LEVEL_1
  LABEL IFEND_33_LEVEL_1
  DEF a75 := 0 <INT>
  V4 := a75 <INT>
  V5 := U2 <INT>
  DEF a76 := 0 <INT>
  V2 := a76 <INT>
  CALL IntIsZero([V5 -> f50]<INT>)
  DEF a77 := (RETURN f54) <BOOL>
  DEF a78 := BNOT a77 <BOOL>
  DEF a79 := TRUE <BOOL>
  IF a78 BEQ a79
  THEN WHILESTAT_22_SEQ_0_LEVEL_0
  ELSE WHILENEXT_22_SEQ_0_LEVEL_0
  LABEL WHILECOND_22_SEQ_0_LEVEL_0
  IF a78 BEQ a79
  THEN WHILESTAT_22_SEQ_0_LEVEL_0
  ELSE WHILEEND_22_LEVEL_0
  LABEL WHILESTAT_22_SEQ_0_LEVEL_0
  DEF a80 := 1 <INT>
  DEF a81 := V5 IAND a80 <INT>
  V3 := a81 <INT>
  DEF a82 := 1 <INT>
  DEF a83 := V3 IEQ a82 <BOOL>
  DEF a84 := TRUE <BOOL>
  IF a83 BEQ a84
  THEN IFSTAT_34_SEQ_0_LEVEL_1
  ELSE IFNEXT_34_SEQ_0_LEVEL_1
  LABEL IFSTAT_34_SEQ_0_LEVEL_1
  V2 := V4 <INT>
  GOTO IFEND_34_LEVEL_1
  LABEL IFNEXT_34_SEQ_0_LEVEL_1
  LABEL IFEND_34_LEVEL_1
  DEF a85 := 1 <INT>
  DEF a86 := V4 IADD a85 <INT>
  V4 := a86 <INT>
  DEF a87 := 1 <INT>
  DEF a88 := V5 IRSHIFT a87 <INT>
  V5 := a88 <INT>
  CALL IntIsZero([V5 -> f50]<INT>)
  DEF a89 := (RETURN f54) <BOOL>
  DEF a90 := BNOT a89 <BOOL>
  a78 := a90 <BOOL>
  GOTO WHILECOND_22_SEQ_0_LEVEL_0
  LABEL WHILENEXT_22_SEQ_0_LEVEL_0
  LABEL WHILEEND_22_LEVEL_0
  DEF a91 := 23 <INT>
  DEF a92 := V2 LT a91 <BOOL>
  DEF a93 := TRUE <BOOL>
  IF a92 BEQ a93
  THEN IFSTAT_35_SEQ_0_LEVEL_1
  ELSE IFNEXT_35_SEQ_0_LEVEL_1
  LABEL IFSTAT_35_SEQ_0_LEVEL_1
  DEF a94 := 23 <INT>
  DEF a95 := a94 ISUB V2 <INT>
  V0 := a95 <INT>
  DEF a96 := U2 ILSHIFT V0 <INT>
  U2 := a96 <INT>
  DEF a97 := V1 ISUB V0 <INT>
  DEF a98 := W6 IRSHIFT a97 <INT>
  DEF a99 := U2 IOR a98 <INT>
  U2 := a99 <INT>
  DEF b10 := U3 ISUB V0 <INT>
  U3 := b10 <INT>
  GOTO IFEND_35_LEVEL_1
  LABEL IFNEXT_35_SEQ_0_LEVEL_1
  LABEL IFEND_35_LEVEL_1
  DEF b11 := 1 <INT>
  DEF b12 := U2 IADD b11 <INT>
  W1 := b12 <INT>
  DEF b13 := 0 <INT>
  W8 := b13 <INT>
  W0 := U2 <INT>
  DEF b14 := 0 <INT>
  W7 := b14 <INT>
  DEF b15 := 1 <INT>
  DEF b16 := V1 ISUB b15 <INT>
  DEF b17 := W6 IRSHIFT b16 <INT>
  V2 := b17 <INT>
  DEF b18 := 1 <INT>
  DEF b19 := V2 IEQ b18 <BOOL>
  DEF b20 := TRUE <BOOL>
  IF b19 BEQ b20
  THEN IFSTAT_36_SEQ_0_LEVEL_1
  ELSE IFNEXT_36_SEQ_0_LEVEL_1
  LABEL IFSTAT_36_SEQ_0_LEVEL_1
  U2 := W1 <INT>
  W6 := W8 <INT>
  GOTO IFEND_36_LEVEL_1
  LABEL IFNEXT_36_SEQ_0_LEVEL_1
  DEF b21 := W2 GT W3 <BOOL>
  DEF b22 := TRUE <BOOL>
  IF b21 BEQ b22
  THEN IFSTAT_36_SEQ_1_LEVEL_1
  ELSE IFNEXT_36_SEQ_1_LEVEL_1
  LABEL IFSTAT_36_SEQ_1_LEVEL_1
  U2 := W0 <INT>
  W6 := W7 <INT>
  GOTO IFEND_36_LEVEL_1
  LABEL IFNEXT_36_SEQ_1_LEVEL_1
  DEF b23 := 1 <INT>
  DEF b24 := W0 IAND b23 <INT>
  W4 := b24 <INT>
  DEF b25 := 1 <INT>
  DEF b26 := W1 IAND b25 <INT>
  W5 := b26 <INT>
  DEF b27 := 0 <INT>
  DEF b28 := W5 IEQ b27 <BOOL>
  DEF b29 := TRUE <BOOL>
  IF b28 BEQ b29
  THEN IFSTAT_37_SEQ_0_LEVEL_2
  ELSE IFNEXT_37_SEQ_0_LEVEL_2
  LABEL IFSTAT_37_SEQ_0_LEVEL_2
  U2 := W1 <INT>
  W6 := W8 <INT>
  GOTO IFEND_37_LEVEL_2
  LABEL IFNEXT_37_SEQ_0_LEVEL_2
  U2 := W0 <INT>
  W6 := W7 <INT>
  GOTO IFEND_37_LEVEL_2
  LABEL IFNEXT_37_SEQ_1_LEVEL_2
  LABEL IFEND_37_LEVEL_2
  GOTO IFEND_36_LEVEL_1
  LABEL IFNEXT_36_SEQ_2_LEVEL_1
  LABEL IFEND_36_LEVEL_1
  DEF b30 := U3 IADD (GLOBAL g78) <INT>
  U3 := b30 <INT>
  DEF b31 := 255 <INT>
  DEF b32 := U3 IAND b31 <INT>
  DEF b33 := 23 <INT>
  DEF b34 := b32 ILSHIFT b33 <INT>
  T4 := b34 <INT>
  DEF b35 := 31 <INT>
  DEF b36 := U1 ILSHIFT b35 <INT>
  DEF b37 := T4 IOR b36 <INT>
  T4 := b37 <INT>
  DEF b38 := 8388607 <INT>
  DEF b39 := U2 IAND b38 <INT>
  DEF b40 := T4 IOR b39 <INT>
  T4 := b40 <INT>
  GOTO IFEND_30_LEVEL_0
  LABEL IFNEXT_30_SEQ_3_LEVEL_0
  LABEL IFEND_30_LEVEL_0
  CALL IntBinaryAsReal([T4 -> g81]<INT>)
  DEF b41 := (RETURN g82) <REAL>
  T3 := b41 <REAL>
  DEF RETURN g83 := T3 <REAL>
 RETURN FROM RDivide
 PROC LABEL WriteString
  DEF f37 := 0 <INT>
  DEF f38 := 0 <INT>
  DEF f39 := 0 <INT>
  DEF f40 := 0 <INT>
  CALL StringAsAddress([(PARAM f62) -> f43]<STRING>)
  DEF f45 := (RETURN f44) <INT>
  f37 := f45 <INT>
  DEF f46 := 0 <INT>
  f38 := f46 <INT>
  IPARAM f39
  IPARAM f37
  IPARAM f38
  IASM "LDRB %r, [%r, +%r]"
  IPARAM f39
  IPARAM f39
  IASM "STR %r, %a"
  CALL IntIsZero([f39 -> f50]<INT>)
  DEF f55 := (RETURN f54) <BOOL>
  DEF f56 := BNOT f55 <BOOL>
  DEF f57 := TRUE <BOOL>
  IF f56 BEQ f57
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_0
  ELSE WHILENEXT_0_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_0_SEQ_0_LEVEL_0_0
  IF f56 BEQ f57
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_0
  ELSE WHILEEND_0_LEVEL_0_0
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0_0
  IPARAM f40
  IASM "MOV %r, R0"
  IPARAM f39
  IASM "MOV R0, %r"
  IASM "SWI 6"
  DEF f58 := 1 <INT>
  DEF f59 := f38 IADD f58 <INT>
  f38 := f59 <INT>
  IPARAM f39
  IPARAM f37
  IPARAM f38
  IASM "LDRB %r, [%r, +%r]"
  IPARAM f39
  IPARAM f39
  IASM "STR %r, %a"
  IPARAM f40
  IASM "MOV R0, %r"
  CALL IntIsZero([f39 -> f50]<INT>)
  DEF f60 := (RETURN f54) <BOOL>
  DEF f61 := BNOT f60 <BOOL>
  f56 := f61 <BOOL>
  GOTO WHILECOND_0_SEQ_0_LEVEL_0_0
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_0_LEVEL_0_0
 RETURN FROM WriteString
 PROC LABEL StringAsAddress
  DEF f41 := 0 <INT>
  DEF f42 := 0 <INT>
  IPARAM f42
  IPARAM (PARAM f43)
  IASM "LDR %r, %a"
  IPARAM f42
  IPARAM f41
  IASM "STR %r, %a"
  DEF RETURN f44 := f41 <INT>
 RETURN FROM StringAsAddress
 PROC LABEL IntIsZero
  DEF f47 := FALSE <BOOL>
  DEF f48 := 0 <INT>
  DEF f49 := (PARAM f50) IEQ f48 <BOOL>
  DEF f51 := TRUE <BOOL>
  IF f49 BEQ f51
  THEN IFSTAT_1_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_1_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_0
  DEF f52 := TRUE <BOOL>
  f47 := f52 <BOOL>
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_0
  DEF f53 := FALSE <BOOL>
  f47 := f53 <BOOL>
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_1_LEVEL_0_0
  LABEL IFEND_1_LEVEL_0_0
  DEF RETURN f54 := f47 <BOOL>
 RETURN FROM IntIsZero
 PROC LABEL RealSign
  DEF f63 := 0 <INT>
  DEF f64 := 0 <INT>
  CALL RealBinaryAsInt([(PARAM f75) -> f67]<REAL>)
  DEF f69 := (RETURN f68) <INT>
  f64 := f69 <INT>
  DEF f70 := 31 <INT>
  DEF f71 := f64 IRSHIFT f70 <INT>
  DEF f72 := 1 <INT>
  DEF f73 := f71 IAND f72 <INT>
  f63 := f73 <INT>
  DEF RETURN f74 := f63 <INT>
 RETURN FROM RealSign
 PROC LABEL RealBinaryAsInt
  DEF f65 := 0 <INT>
  DEF f66 := 0.0 <REAL>
  IPARAM f66
  IPARAM (PARAM f67)
  IASM "LDR %r, %a"
  IPARAM f66
  IPARAM f65
  IASM "STR %r, %a"
  DEF RETURN f68 := f65 <INT>
 RETURN FROM RealBinaryAsInt
 PROC LABEL WriteInt
  DEF f76 := 0 <INT>
  IPARAM f76
  IASM "MOV %r, R0"
  IPARAM (PARAM f77)
  IASM "LDR R0, %a"
  IASM "SWI 1"
  IPARAM f76
  IASM "MOV R0, %r"
 RETURN FROM WriteInt
 PROC LABEL WriteLn
  IASM "SWI 4"
 RETURN FROM WriteLn
 PROC LABEL RealExponent
  DEF f78 := 0 <INT>
  DEF f79 := 0 <INT>
  DEF f80 := 0 <INT>
  CALL RealBinaryAsInt([(PARAM f91) -> f67]<REAL>)
  DEF f81 := (RETURN f68) <INT>
  f79 := f81 <INT>
  DEF f82 := 23 <INT>
  DEF f83 := f79 IRSHIFT f82 <INT>
  DEF f84 := 255 <INT>
  DEF f85 := f83 IAND f84 <INT>
  f80 := f85 <INT>
  DEF f86 := f80 ISUB (GLOBAL g78) <INT>
  f78 := f86 <INT>
  DEF RETURN f90 := f78 <INT>
 RETURN FROM RealExponent
 PROC LABEL RealMantissa
  DEF f92 := 0 <INT>
  DEF f93 := 0 <INT>
  DEF f94 := 0 <INT>
  DEF f95 := 0 <INT>
  CALL RealBinaryAsInt([(PARAM g27) -> f67]<REAL>)
  DEF f96 := (RETURN f68) <INT>
  f93 := f96 <INT>
  DEF f97 := 8388607 <INT>
  DEF f98 := f93 IAND f97 <INT>
  f94 := f98 <INT>
  CALL RealIsZero([(PARAM g27) -> g21]<REAL>)
  DEF g22 := (RETURN g20) <BOOL>
  DEF g23 := TRUE <BOOL>
  IF g22 BEQ g23
  THEN IFSTAT_6_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_6_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_6_SEQ_0_LEVEL_0_0
  f92 := f94 <INT>
  GOTO IFEND_6_LEVEL_0_0
  LABEL IFNEXT_6_SEQ_0_LEVEL_0_0
  DEF g24 := 8388608 <INT>
  DEF g25 := f94 IOR g24 <INT>
  f92 := g25 <INT>
  GOTO IFEND_6_LEVEL_0_0
  LABEL IFNEXT_6_SEQ_1_LEVEL_0
  LABEL IFEND_6_LEVEL_0_0
  DEF RETURN g26 := f92 <INT>
 RETURN FROM RealMantissa
 PROC LABEL RealIsZero
  DEF f99 := FALSE <BOOL>
  DEF g10 := 0 <INT>
  DEF g11 := 0 <INT>
  CALL RealBinaryAsInt([(PARAM g21) -> f67]<REAL>)
  DEF g12 := (RETURN f68) <INT>
  g11 := g12 <INT>
  DEF g13 := 2147483647 <INT>
  DEF g14 := g11 IAND g13 <INT>
  g10 := g14 <INT>
  DEF g15 := 0 <INT>
  DEF g16 := g10 IEQ g15 <BOOL>
  DEF g17 := TRUE <BOOL>
  IF g16 BEQ g17
  THEN IFSTAT_0_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_0
  DEF g18 := TRUE <BOOL>
  f99 := g18 <BOOL>
  GOTO IFEND_0_LEVEL_0_0
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_0
  DEF g19 := FALSE <BOOL>
  f99 := g19 <BOOL>
  GOTO IFEND_0_LEVEL_0_0
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_0
  LABEL IFEND_0_LEVEL_0_0
  DEF RETURN g20 := f99 <BOOL>
 RETURN FROM RealIsZero
 PROC LABEL Div
  DEF g28 := 0 <INT>
  DEF g29 := 0 <INT>
  DEF g30 := 0 <INT>
  DEF g31 := 0 <INT>
  DEF g32 := 0 <INT>
  DEF g33 := 0 <INT>
  DEF g34 := 0 <INT>
  DEF g35 := 0 <INT>
  DEF g36 := 0 <INT>
  g30 := (PARAM g37) <INT>
  DEF g38 := 0 <INT>
  g33 := g38 <INT>
  DEF g39 := 0 <INT>
  g31 := g39 <INT>
  CALL IntIsZero([g30 -> f50]<INT>)
  DEF g40 := (RETURN f54) <BOOL>
  DEF g41 := BNOT g40 <BOOL>
  DEF g42 := TRUE <BOOL>
  IF g41 BEQ g42
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_1
  ELSE WHILENEXT_0_SEQ_0_LEVEL_0_1
  LABEL WHILECOND_0_SEQ_0_LEVEL_0_1
  IF g41 BEQ g42
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_1
  ELSE WHILEEND_0_LEVEL_0_1
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0_1
  DEF g43 := 1 <INT>
  DEF g44 := g30 IAND g43 <INT>
  g32 := g44 <INT>
  DEF g45 := 1 <INT>
  DEF g46 := g32 IEQ g45 <BOOL>
  DEF g47 := TRUE <BOOL>
  IF g46 BEQ g47
  THEN IFSTAT_0_SEQ_0_LEVEL_0_1
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_1
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_1
  g31 := g33 <INT>
  GOTO IFEND_0_LEVEL_0_1
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_1
  LABEL IFEND_0_LEVEL_0_1
  DEF g48 := 1 <INT>
  DEF g49 := g33 IADD g48 <INT>
  g33 := g49 <INT>
  DEF g50 := 1 <INT>
  DEF g51 := g30 IRSHIFT g50 <INT>
  g30 := g51 <INT>
  CALL IntIsZero([g30 -> f50]<INT>)
  DEF g52 := (RETURN f54) <BOOL>
  DEF g53 := BNOT g52 <BOOL>
  g41 := g53 <BOOL>
  GOTO WHILECOND_0_SEQ_0_LEVEL_0_1
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0_1
  LABEL WHILEEND_0_LEVEL_0_1
  g34 := g31 <INT>
  g30 := (PARAM g37) <INT>
  DEF g54 := 0 <INT>
  g36 := g54 <INT>
  DEF g55 := 0 <INT>
  g29 := g55 <INT>
  DEF g56 := 0 <INT>
  DEF g57 := g34 GE g56 <BOOL>
  DEF g58 := TRUE <BOOL>
  IF g57 BEQ g58
  THEN WHILESTAT_2_SEQ_0_LEVEL_0_0
  ELSE WHILENEXT_2_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_2_SEQ_0_LEVEL_0_0
  IF g57 BEQ g58
  THEN WHILESTAT_2_SEQ_0_LEVEL_0_0
  ELSE WHILEEND_2_LEVEL_0_0
  LABEL WHILESTAT_2_SEQ_0_LEVEL_0_0
  DEF g59 := g30 IRSHIFT g34 <INT>
  DEF g60 := 1 <INT>
  DEF g61 := g59 IAND g60 <INT>
  g35 := g61 <INT>
  DEF g62 := 1 <INT>
  DEF g63 := g36 ILSHIFT g62 <INT>
  DEF g64 := g63 IOR g35 <INT>
  g36 := g64 <INT>
  DEF g65 := g36 GE (PARAM g66) <BOOL>
  DEF g67 := TRUE <BOOL>
  IF g65 BEQ g67
  THEN IFSTAT_1_SEQ_0_LEVEL_0_1
  ELSE IFNEXT_1_SEQ_0_LEVEL_0_1
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_1
  DEF g68 := 1 <INT>
  DEF g69 := g68 ILSHIFT g34 <INT>
  DEF g70 := g29 IOR g69 <INT>
  g29 := g70 <INT>
  DEF g71 := g36 ISUB (PARAM g66) <INT>
  g36 := g71 <INT>
  GOTO IFEND_1_LEVEL_0_1
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_1
  LABEL IFEND_1_LEVEL_0_1
  DEF g72 := 1 <INT>
  DEF g73 := g34 ISUB g72 <INT>
  g34 := g73 <INT>
  DEF g74 := 0 <INT>
  DEF g75 := g34 GE g74 <BOOL>
  g57 := g75 <BOOL>
  GOTO WHILECOND_2_SEQ_0_LEVEL_0_0
  LABEL WHILENEXT_2_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_2_LEVEL_0_0
  DEF RETURN g76 := g29 <INT>
 RETURN FROM Div
 PROC LABEL IntBinaryAsReal
  DEF g79 := 0.0 <REAL>
  DEF g80 := 0 <INT>
  IPARAM g80
  IPARAM (PARAM g81)
  IASM "LDR %r, %a"
  IPARAM g80
  IPARAM g79
  IASM "STR %r, %a"
  DEF RETURN g82 := g79 <REAL>
 RETURN FROM IntBinaryAsReal
 PROC LABEL WriteReal
  DEF g87 := 0 <INT>
  IPARAM g87
  IASM "MOV %r, R0"
  IPARAM (PARAM g88)
  IASM "LDR R0, %a"
  IASM "SWI 2"
  IPARAM g87
  IASM "MOV R0, %r"
 RETURN FROM WriteReal
