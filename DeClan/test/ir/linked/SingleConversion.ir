SYMBOL SECTION
 ENTRY f25 CONST INTERNAL GLOBAL i  <INT>
 ENTRY f26 INTERNAL GLOBAL result  <REAL>
 ENTRY f27 INTERNAL GLOBAL readResult  <REAL>
 ENTRY f28 INTERNAL result IntToReal <REAL>
 ENTRY f29 INTERNAL absN IntToReal <INT>
 ENTRY f30 INTERNAL isNeg IntToReal <BOOL>
 ENTRY f31 INTERNAL intResult IntToReal <INT>
 ENTRY f32 INTERNAL furthestOne IntToReal <INT>
 ENTRY f33 INTERNAL count IntToReal <INT>
 ENTRY f34 INTERNAL tempN IntToReal <INT>
 ENTRY f35 INTERNAL lastBit IntToReal <INT>
 ENTRY f36 INTERNAL fullExponent IntToReal <INT>
 ENTRY f37 INTERNAL exponent IntToReal <INT>
 ENTRY f38 INTERNAL mantissa IntToReal <INT>
 ENTRY f39 INTERNAL mantissaMask IntToReal <INT>
 ENTRY f40 INTERNAL toShiftOver IntToReal <INT>
 ENTRY f41 INTERNAL result Abs <INT>
 ENTRY f44 INTERNAL PARAM n Abs 0 <INT>
 ENTRY f46 INTERNAL result INeg <INT>
 ENTRY f48 INTERNAL PARAM n INeg 0 <INT>
 ENTRY f51 INTERNAL RETURN INeg <INT>
 ENTRY f53 INTERNAL RETURN Abs <INT>
 ENTRY g37 INTERNAL PARAM n IntToReal 0 <INT>
 ENTRY f56 INTERNAL result IntIsNegative <BOOL>
 ENTRY f57 INTERNAL thirtyFirstBit IntIsNegative <INT>
 ENTRY f60 INTERNAL PARAM n IntIsNegative 0 <INT>
 ENTRY f68 INTERNAL RETURN IntIsNegative <BOOL>
 ENTRY f70 INTERNAL result IntIsZero <BOOL>
 ENTRY f73 INTERNAL PARAM n IntIsZero 0 <INT>
 ENTRY f77 INTERNAL RETURN IntIsZero <BOOL>
 ENTRY g20 CONST INTERNAL GLOBAL realBias  <INT>
 ENTRY g31 INTERNAL result IntBinaryAsReal <REAL>
 ENTRY g32 INTERNAL temp IntBinaryAsReal <INT>
 ENTRY g33 INTERNAL RETURN IntBinaryAsReal <REAL>
 ENTRY g36 INTERNAL RETURN IntToReal <REAL>
 ENTRY g39 INTERNAL tempReg WriteReal <INT>
 ENTRY g40 INTERNAL PARAM r WriteReal 0 <REAL>
DATA SECTION
 DEF f24 := 5 <INT>
 DEF GLOBAL f25 := f24 <INT>
 DEF g18 := 127 <INT>
 DEF GLOBAL g20 := g18 <INT>
BSS SECTION
 DEF GLOBAL f26 := 0.0 <REAL>
 DEF GLOBAL f27 := 0.0 <REAL>
CODE SECTION
 CALL IntToReal([(GLOBAL f25) -> g37]<INT>)
 DEF g38 := (RETURN g36) <REAL>
 GLOBAL f26 := g38 <REAL>
 CALL WriteReal([(GLOBAL f26) -> g40]<REAL>)
END
PROC SECTION
 PROC LABEL IntToReal
  DEF f28 := 0.0 <REAL>
  DEF f29 := 0 <INT>
  DEF f30 := FALSE <BOOL>
  DEF f31 := 0 <INT>
  DEF f32 := 0 <INT>
  DEF f33 := 0 <INT>
  DEF f34 := 0 <INT>
  DEF f35 := 0 <INT>
  DEF f36 := 0 <INT>
  DEF f37 := 0 <INT>
  DEF f38 := 0 <INT>
  DEF f39 := 0 <INT>
  DEF f40 := 0 <INT>
  CALL Abs([(PARAM g37) -> f44]<INT>)
  DEF f54 := (RETURN f53) <INT>
  f29 := f54 <INT>
  f34 := f29 <INT>
  DEF f55 := 0 <INT>
  f33 := f55 <INT>
  CALL IntIsNegative([(PARAM g37) -> f60]<INT>)
  DEF f69 := (RETURN f68) <BOOL>
  f30 := f69 <BOOL>
  CALL IntIsZero([f34 -> f73]<INT>)
  DEF f78 := (RETURN f77) <BOOL>
  DEF f79 := TRUE <BOOL>
  IF f78 BEQ f79
  THEN IFSTAT_0_SEQ_0_LEVEL_0_1
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_1
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_1
  DEF f80 := 0 <INT>
  f31 := f80 <INT>
  GOTO IFEND_0_LEVEL_0_1
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_1
  CALL IntIsZero([f34 -> f73]<INT>)
  DEF f81 := (RETURN f77) <BOOL>
  DEF f82 := BNOT f81 <BOOL>
  DEF f83 := TRUE <BOOL>
  IF f82 BEQ f83
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_0
  ELSE WHILENEXT_0_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_0_SEQ_0_LEVEL_0_0
  IF f82 BEQ f83
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_0
  ELSE WHILEEND_0_LEVEL_0_0
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0_0
  DEF f84 := 1 <INT>
  DEF f85 := f34 IAND f84 <INT>
  f35 := f85 <INT>
  DEF f86 := 1 <INT>
  DEF f87 := f35 IEQ f86 <BOOL>
  DEF f88 := TRUE <BOOL>
  IF f87 BEQ f88
  THEN IFSTAT_1_SEQ_0_LEVEL_1
  ELSE IFNEXT_1_SEQ_0_LEVEL_1
  LABEL IFSTAT_1_SEQ_0_LEVEL_1
  f32 := f33 <INT>
  GOTO IFEND_1_LEVEL_1
  LABEL IFNEXT_1_SEQ_0_LEVEL_1
  LABEL IFEND_1_LEVEL_1
  DEF f89 := 1 <INT>
  DEF f90 := f33 IADD f89 <INT>
  f33 := f90 <INT>
  DEF f91 := 1 <INT>
  DEF f92 := f34 IRSHIFT f91 <INT>
  f34 := f92 <INT>
  CALL IntIsZero([f34 -> f73]<INT>)
  DEF f93 := (RETURN f77) <BOOL>
  DEF f94 := BNOT f93 <BOOL>
  f82 := f94 <BOOL>
  GOTO WHILECOND_0_SEQ_0_LEVEL_0_0
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_0_LEVEL_0_0
  DEF f95 := 23 <INT>
  DEF f96 := f32 GT f95 <BOOL>
  DEF f97 := TRUE <BOOL>
  IF f96 BEQ f97
  THEN IFSTAT_2_SEQ_0_LEVEL_1_0
  ELSE IFNEXT_2_SEQ_0_LEVEL_1_0
  LABEL IFSTAT_2_SEQ_0_LEVEL_1_0
  DEF f98 := 23 <INT>
  DEF f99 := f32 ISUB f98 <INT>
  DEF g10 := f29 IRSHIFT f99 <INT>
  f29 := g10 <INT>
  GOTO IFEND_2_LEVEL_1_0
  LABEL IFNEXT_2_SEQ_0_LEVEL_1_0
  DEF g11 := 23 <INT>
  DEF g12 := f32 LT g11 <BOOL>
  DEF g13 := TRUE <BOOL>
  IF g12 BEQ g13
  THEN IFSTAT_2_SEQ_1_LEVEL_1_0
  ELSE IFNEXT_2_SEQ_1_LEVEL_1_0
  LABEL IFSTAT_2_SEQ_1_LEVEL_1_0
  DEF g14 := 23 <INT>
  DEF g15 := g14 ISUB f32 <INT>
  DEF g16 := f29 ILSHIFT g15 <INT>
  f29 := g16 <INT>
  GOTO IFEND_2_LEVEL_1_0
  LABEL IFNEXT_2_SEQ_1_LEVEL_1_0
  LABEL IFEND_2_LEVEL_1_0
  DEF g17 := f32 IADD (GLOBAL g20) <INT>
  f37 := g17 <INT>
  DEF g21 := 8388607 <INT>
  f39 := g21 <INT>
  DEF g22 := f29 IAND f39 <INT>
  f38 := g22 <INT>
  f31 := f38 <INT>
  DEF g23 := 23 <INT>
  DEF g24 := f37 ILSHIFT g23 <INT>
  DEF g25 := f31 IOR g24 <INT>
  f31 := g25 <INT>
  DEF g26 := TRUE <BOOL>
  IF f30 BEQ g26
  THEN IFSTAT_3_SEQ_0_LEVEL_1
  ELSE IFNEXT_3_SEQ_0_LEVEL_1
  LABEL IFSTAT_3_SEQ_0_LEVEL_1
  DEF g27 := 1 <INT>
  DEF g28 := 31 <INT>
  DEF g29 := g27 ILSHIFT g28 <INT>
  DEF g30 := f31 IOR g29 <INT>
  f31 := g30 <INT>
  GOTO IFEND_3_LEVEL_1
  LABEL IFNEXT_3_SEQ_0_LEVEL_1
  LABEL IFEND_3_LEVEL_1
  GOTO IFEND_0_LEVEL_0_1
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_1
  LABEL IFEND_0_LEVEL_0_1
  CALL IntBinaryAsReal([f31 -> g34]<INT>)
  DEF g35 := (RETURN g33) <REAL>
  f28 := g35 <REAL>
  DEF RETURN g36 := f28 <REAL>
 RETURN FROM IntToReal
 PROC LABEL Abs
  DEF f41 := 0 <INT>
  DEF f42 := 0 <INT>
  DEF f43 := (PARAM f44) GE f42 <BOOL>
  DEF f45 := TRUE <BOOL>
  IF f43 BEQ f45
  THEN IFSTAT_0_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_0
  f41 := (PARAM f44) <INT>
  GOTO IFEND_0_LEVEL_0_0
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_0
  CALL INeg([(PARAM f44) -> f48]<INT>)
  DEF f52 := (RETURN f51) <INT>
  f41 := f52 <INT>
  GOTO IFEND_0_LEVEL_0_0
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_0
  LABEL IFEND_0_LEVEL_0_0
  DEF RETURN f53 := f41 <INT>
 RETURN FROM Abs
 PROC LABEL INeg
  DEF f46 := 0 <INT>
  DEF f47 := INOT (PARAM f48) <INT>
  DEF f49 := 1 <INT>
  DEF f50 := f47 IADD f49 <INT>
  f46 := f50 <INT>
  DEF RETURN f51 := f46 <INT>
 RETURN FROM INeg
 PROC LABEL IntIsNegative
  DEF f56 := FALSE <BOOL>
  DEF f57 := 0 <INT>
  DEF f58 := 31 <INT>
  DEF f59 := (PARAM f60) IRSHIFT f58 <INT>
  DEF f61 := 1 <INT>
  DEF f62 := f59 IAND f61 <INT>
  f57 := f62 <INT>
  DEF f63 := 0 <INT>
  DEF f64 := f57 IEQ f63 <BOOL>
  DEF f65 := TRUE <BOOL>
  IF f64 BEQ f65
  THEN IFSTAT_2_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_2_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_2_SEQ_0_LEVEL_0_0
  DEF f66 := FALSE <BOOL>
  f56 := f66 <BOOL>
  GOTO IFEND_2_LEVEL_0_0
  LABEL IFNEXT_2_SEQ_0_LEVEL_0_0
  DEF f67 := TRUE <BOOL>
  f56 := f67 <BOOL>
  GOTO IFEND_2_LEVEL_0_0
  LABEL IFNEXT_2_SEQ_1_LEVEL_0_0
  LABEL IFEND_2_LEVEL_0_0
  DEF RETURN f68 := f56 <BOOL>
 RETURN FROM IntIsNegative
 PROC LABEL IntIsZero
  DEF f70 := FALSE <BOOL>
  DEF f71 := 0 <INT>
  DEF f72 := (PARAM f73) IEQ f71 <BOOL>
  DEF f74 := TRUE <BOOL>
  IF f72 BEQ f74
  THEN IFSTAT_1_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_1_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_0
  DEF f75 := TRUE <BOOL>
  f70 := f75 <BOOL>
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_0
  DEF f76 := FALSE <BOOL>
  f70 := f76 <BOOL>
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_1_LEVEL_0_0
  LABEL IFEND_1_LEVEL_0_0
  DEF RETURN f77 := f70 <BOOL>
 RETURN FROM IntIsZero
 PROC LABEL IntBinaryAsReal
  DEF g31 := 0.0 <REAL>
  DEF g32 := 0 <INT>
  IPARAM g32 <INT> %dr
  IPARAM (PARAM g34) <INT> %a
  IASM "LDR %dr, %ua"
  IPARAM g32 <INT> %r
  IPARAM g31 <REAL> %da
  IASM "STR %ur, %da"
  DEF RETURN g33 := g31 <REAL>
 RETURN FROM IntBinaryAsReal
 PROC LABEL WriteReal
  DEF g39 := 0 <INT>
  IPARAM g39 <INT> %dr
  IASM "MOV %dr, R0"
  IPARAM (PARAM g40) <REAL> %a
  IASM "LDR R0, %ua"
  IASM "SWI 2"
  IPARAM g39 <INT> %r
  IASM "MOV R0, %ur"
 RETURN FROM WriteReal
