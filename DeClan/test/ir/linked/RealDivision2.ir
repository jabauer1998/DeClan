SYMBOL SECTION
 ENTRY f25 CONST INTERNAL GLOBAL r1  <REAL>
 ENTRY f27 CONST INTERNAL GLOBAL r2  <REAL>
 ENTRY f28 INTERNAL GLOBAL result  <REAL>
 ENTRY T3 INTERNAL result RDivide <REAL>
 ENTRY T4 INTERNAL intResult RDivide <INT>
 ENTRY T5 INTERNAL n1Sign RDivide <INT>
 ENTRY T6 INTERNAL n2Sign RDivide <INT>
 ENTRY T7 INTERNAL n1Exp RDivide <INT>
 ENTRY T8 INTERNAL n2Exp RDivide <INT>
 ENTRY T9 INTERNAL n1Base RDivide <INT>
 ENTRY U0 INTERNAL n2Base RDivide <INT>
 ENTRY U1 INTERNAL resultSign RDivide <INT>
 ENTRY U2 INTERNAL resultBase RDivide <INT>
 ENTRY U3 INTERNAL resultExp RDivide <INT>
 ENTRY U4 INTERNAL n2Count RDivide <INT>
 ENTRY U5 INTERNAL n2LastDigit RDivide <INT>
 ENTRY U6 INTERNAL n2TempBase RDivide <INT>
 ENTRY U7 INTERNAL n2FirstOne RDivide <INT>
 ENTRY U8 INTERNAL n2LastOne RDivide <INT>
 ENTRY U9 INTERNAL toShiftExp RDivide <INT>
 ENTRY V0 INTERNAL toShiftBase RDivide <INT>
 ENTRY V1 INTERNAL toShiftBack RDivide <INT>
 ENTRY V2 INTERNAL resultLastOne RDivide <INT>
 ENTRY V3 INTERNAL resultLastDigit RDivide <INT>
 ENTRY V4 INTERNAL count RDivide <INT>
 ENTRY V5 INTERNAL resultTempBase RDivide <INT>
 ENTRY V6 INTERNAL n1DecimalPlace RDivide <INT>
 ENTRY V7 INTERNAL resultDecimalPlace RDivide <INT>
 ENTRY V8 INTERNAL roundIndex RDivide <INT>
 ENTRY V9 INTERNAL afterRound RDivide <INT>
 ENTRY W0 INTERNAL lowBase RDivide <INT>
 ENTRY W1 INTERNAL hiBase RDivide <INT>
 ENTRY W2 INTERNAL lowDiff RDivide <INT>
 ENTRY W3 INTERNAL hiDiff RDivide <INT>
 ENTRY W4 INTERNAL lowBit RDivide <INT>
 ENTRY W5 INTERNAL hiBit RDivide <INT>
 ENTRY W6 INTERNAL resultBitStorage RDivide <INT>
 ENTRY W7 INTERNAL lowBitStorage RDivide <INT>
 ENTRY W8 INTERNAL hiBitStorage RDivide <INT>
 ENTRY f29 INTERNAL result RealSign <INT>
 ENTRY f30 INTERNAL realAsInteger RealSign <INT>
 ENTRY f31 INTERNAL result RealBinaryAsInt <INT>
 ENTRY f32 INTERNAL temp RealBinaryAsInt <REAL>
 ENTRY f33 INTERNAL PARAM r RealBinaryAsInt 0 <REAL>
 ENTRY f34 INTERNAL RETURN RealBinaryAsInt <INT>
 ENTRY f41 INTERNAL PARAM r RealSign 0 <REAL>
 ENTRY f40 INTERNAL RETURN RealSign <INT>
 ENTRY g56 INTERNAL PARAM n1 RDivide 0 <REAL>
 ENTRY g57 INTERNAL PARAM n2 RDivide 1 <REAL>
 ENTRY f42 INTERNAL result RealExponent <INT>
 ENTRY f43 INTERNAL realAsInteger RealExponent <INT>
 ENTRY f44 INTERNAL exponent RealExponent <INT>
 ENTRY f55 INTERNAL PARAM r RealExponent 0 <REAL>
 ENTRY f54 INTERNAL RETURN RealExponent <INT>
 ENTRY f56 INTERNAL result RealMantissa <INT>
 ENTRY f57 INTERNAL realAsInt RealMantissa <INT>
 ENTRY f58 INTERNAL significand RealMantissa <INT>
 ENTRY f59 INTERNAL exp RealMantissa <INT>
 ENTRY f81 INTERNAL PARAM r RealMantissa 0 <REAL>
 ENTRY f63 INTERNAL result RealIsZero <BOOL>
 ENTRY f64 INTERNAL val RealIsZero <INT>
 ENTRY f65 INTERNAL exp RealIsZero <INT>
 ENTRY f75 INTERNAL PARAM r RealIsZero 0 <REAL>
 ENTRY f74 INTERNAL RETURN RealIsZero <BOOL>
 ENTRY f80 INTERNAL RETURN RealMantissa <INT>
 ENTRY f82 INTERNAL result IntIsZero <BOOL>
 ENTRY f85 INTERNAL PARAM n IntIsZero 0 <INT>
 ENTRY f89 INTERNAL RETURN IntIsZero <BOOL>
 ENTRY f90 INTERNAL total Div <INT>
 ENTRY f91 INTERNAL result Div <INT>
 ENTRY f92 INTERNAL tempDividend Div <INT>
 ENTRY f93 INTERNAL dividendLastOne Div <INT>
 ENTRY f94 INTERNAL dividendLastDigit Div <INT>
 ENTRY f95 INTERNAL dividendCount Div <INT>
 ENTRY f96 INTERNAL dividendIndex Div <INT>
 ENTRY f97 INTERNAL bitAtIndex Div <INT>
 ENTRY f98 INTERNAL remainder Div <INT>
 ENTRY f99 INTERNAL PARAM dividend Div 0 <INT>
 ENTRY g38 INTERNAL PARAM divisor Div 1 <INT>
 ENTRY g48 INTERNAL RETURN Div <INT>
 ENTRY g50 CONST INTERNAL GLOBAL realBias  <INT>
 ENTRY g51 INTERNAL result IntBinaryAsReal <REAL>
 ENTRY g52 INTERNAL temp IntBinaryAsReal <INT>
 ENTRY g53 INTERNAL PARAM n IntBinaryAsReal 0 <INT>
 ENTRY g54 INTERNAL RETURN IntBinaryAsReal <REAL>
 ENTRY g55 INTERNAL RETURN RDivide <REAL>
 ENTRY g59 INTERNAL tempReg WriteReal <INT>
 ENTRY g60 INTERNAL PARAM r WriteReal 0 <REAL>
DATA SECTION
 DEF f24 := 91.34375 <REAL>
 DEF GLOBAL f25 := f24 <REAL>
 DEF f26 := 0.14453125 <REAL>
 DEF GLOBAL f27 := f26 <REAL>
 DEF f52 := 127 <INT>
 DEF GLOBAL g50 := f52 <INT>
BSS SECTION
 DEF GLOBAL f28 := 0.0 <REAL>
CODE SECTION
 CALL RDivide([(GLOBAL f25) -> g56]<REAL>, [(GLOBAL f27) -> g57]<REAL>)
 DEF g58 := (RETURN g55) <REAL>
 GLOBAL f28 := g58 <REAL>
 CALL WriteReal([(GLOBAL f28) -> g60]<REAL>)
END
PROC SECTION
 PROC LABEL RDivide
  DEF T3 := 0.0 <REAL>
  DEF T4 := 0 <INT>
  DEF T5 := 0 <INT>
  DEF T6 := 0 <INT>
  DEF T7 := 0 <INT>
  DEF T8 := 0 <INT>
  DEF T9 := 0 <INT>
  DEF U0 := 0 <INT>
  DEF U1 := 0 <INT>
  DEF U2 := 0 <INT>
  DEF U3 := 0 <INT>
  DEF U4 := 0 <INT>
  DEF U5 := 0 <INT>
  DEF U6 := 0 <INT>
  DEF U7 := 0 <INT>
  DEF U8 := 0 <INT>
  DEF U9 := 0 <INT>
  DEF V0 := 0 <INT>
  DEF V1 := 0 <INT>
  DEF V2 := 0 <INT>
  DEF V3 := 0 <INT>
  DEF V4 := 0 <INT>
  DEF V5 := 0 <INT>
  DEF V6 := 0 <INT>
  DEF V7 := 0 <INT>
  DEF V8 := 0 <INT>
  DEF V9 := 0 <INT>
  DEF W0 := 0 <INT>
  DEF W1 := 0 <INT>
  DEF W2 := 0 <INT>
  DEF W3 := 0 <INT>
  DEF W4 := 0 <INT>
  DEF W5 := 0 <INT>
  DEF W6 := 0 <INT>
  DEF W7 := 0 <INT>
  DEF W8 := 0 <INT>
  CALL RealSign([(PARAM g56) -> f41]<REAL>)
  DEF W9 := (RETURN f40) <INT>
  T5 := W9 <INT>
  CALL RealSign([(PARAM g57) -> f41]<REAL>)
  DEF X0 := (RETURN f40) <INT>
  T6 := X0 <INT>
  CALL RealExponent([(PARAM g56) -> f55]<REAL>)
  DEF X1 := (RETURN f54) <INT>
  T7 := X1 <INT>
  CALL RealExponent([(PARAM g57) -> f55]<REAL>)
  DEF X2 := (RETURN f54) <INT>
  T8 := X2 <INT>
  CALL RealMantissa([(PARAM g56) -> f81]<REAL>)
  DEF X3 := (RETURN f80) <INT>
  T9 := X3 <INT>
  CALL RealMantissa([(PARAM g57) -> f81]<REAL>)
  DEF X4 := (RETURN f80) <INT>
  U0 := X4 <INT>
  CALL IntIsZero([T9 -> f85]<INT>)
  DEF X5 := (RETURN f89) <BOOL>
  CALL IntIsZero([U0 -> f85]<INT>)
  DEF X6 := (RETURN f89) <BOOL>
  DEF X7 := X5 LAND X6 <BOOL>
  DEF X8 := TRUE <BOOL>
  IF X7 BEQ X8
  THEN IFSTAT_30_SEQ_0_LEVEL_0
  ELSE IFNEXT_30_SEQ_0_LEVEL_0
  LABEL IFSTAT_30_SEQ_0_LEVEL_0
  DEF X9 := 1065353216 <INT>
  T4 := X9 <INT>
  GOTO IFEND_30_LEVEL_0
  LABEL IFNEXT_30_SEQ_0_LEVEL_0
  CALL IntIsZero([T9 -> f85]<INT>)
  DEF Y0 := (RETURN f89) <BOOL>
  DEF Y1 := BNOT Y0 <BOOL>
  CALL IntIsZero([U0 -> f85]<INT>)
  DEF Y2 := (RETURN f89) <BOOL>
  DEF Y3 := Y1 LAND Y2 <BOOL>
  DEF Y4 := TRUE <BOOL>
  IF Y3 BEQ Y4
  THEN IFSTAT_30_SEQ_1_LEVEL_0
  ELSE IFNEXT_30_SEQ_1_LEVEL_0
  LABEL IFSTAT_30_SEQ_1_LEVEL_0
  DEF Y5 := 2139095040 <INT>
  T4 := Y5 <INT>
  GOTO IFEND_30_LEVEL_0
  LABEL IFNEXT_30_SEQ_1_LEVEL_0
  CALL IntIsZero([T9 -> f85]<INT>)
  DEF Y6 := (RETURN f89) <BOOL>
  CALL IntIsZero([U0 -> f85]<INT>)
  DEF Y7 := (RETURN f89) <BOOL>
  DEF Y8 := BNOT Y7 <BOOL>
  DEF Y9 := Y6 LAND Y8 <BOOL>
  DEF Z0 := TRUE <BOOL>
  IF Y9 BEQ Z0
  THEN IFSTAT_30_SEQ_2_LEVEL_0
  ELSE IFNEXT_30_SEQ_2_LEVEL_0
  LABEL IFSTAT_30_SEQ_2_LEVEL_0
  DEF Z1 := 0 <INT>
  T4 := Z1 <INT>
  GOTO IFEND_30_LEVEL_0
  LABEL IFNEXT_30_SEQ_2_LEVEL_0
  DEF Z2 := 30 <INT>
  DEF Z3 := 23 <INT>
  DEF Z4 := Z2 ISUB Z3 <INT>
  V0 := Z4 <INT>
  DEF Z5 := T9 ILSHIFT V0 <INT>
  T9 := Z5 <INT>
  DEF Z6 := 0 <INT>
  U4 := Z6 <INT>
  U6 := U0 <INT>
  DEF Z7 := 1 <INT>
  DEF Z8 := U6 IAND Z7 <INT>
  DEF Z9 := 0 <INT>
  DEF a10 := Z8 IEQ Z9 <BOOL>
  DEF a11 := TRUE <BOOL>
  IF a10 BEQ a11
  THEN WHILESTAT_18_SEQ_0_LEVEL_0
  ELSE WHILENEXT_18_SEQ_0_LEVEL_0
  LABEL WHILECOND_18_SEQ_0_LEVEL_0
  IF a10 BEQ a11
  THEN WHILESTAT_18_SEQ_0_LEVEL_0
  ELSE WHILEEND_18_LEVEL_0
  LABEL WHILESTAT_18_SEQ_0_LEVEL_0
  DEF a12 := 1 <INT>
  DEF a13 := U6 IRSHIFT a12 <INT>
  U6 := a13 <INT>
  DEF a14 := 1 <INT>
  DEF a15 := U4 IADD a14 <INT>
  U4 := a15 <INT>
  DEF a16 := 1 <INT>
  DEF a17 := U6 IAND a16 <INT>
  DEF a18 := 0 <INT>
  DEF a19 := a17 IEQ a18 <BOOL>
  a10 := a19 <BOOL>
  GOTO WHILECOND_18_SEQ_0_LEVEL_0
  LABEL WHILENEXT_18_SEQ_0_LEVEL_0
  LABEL WHILEEND_18_LEVEL_0
  U7 := U4 <INT>
  V0 := U7 <INT>
  DEF a20 := U0 IRSHIFT V0 <INT>
  U0 := a20 <INT>
  DEF a21 := 0 <INT>
  U4 := a21 <INT>
  U6 := U0 <INT>
  CALL IntIsZero([U6 -> f85]<INT>)
  DEF a22 := (RETURN f89) <BOOL>
  DEF a23 := BNOT a22 <BOOL>
  DEF a24 := TRUE <BOOL>
  IF a23 BEQ a24
  THEN WHILESTAT_20_SEQ_0_LEVEL_0
  ELSE WHILENEXT_20_SEQ_0_LEVEL_0
  LABEL WHILECOND_20_SEQ_0_LEVEL_0
  IF a23 BEQ a24
  THEN WHILESTAT_20_SEQ_0_LEVEL_0
  ELSE WHILEEND_20_LEVEL_0
  LABEL WHILESTAT_20_SEQ_0_LEVEL_0
  DEF a25 := 1 <INT>
  DEF a26 := U6 IAND a25 <INT>
  U5 := a26 <INT>
  DEF a27 := 1 <INT>
  DEF a28 := U5 IEQ a27 <BOOL>
  DEF a29 := TRUE <BOOL>
  IF a28 BEQ a29
  THEN IFSTAT_31_SEQ_0_LEVEL_1
  ELSE IFNEXT_31_SEQ_0_LEVEL_1
  LABEL IFSTAT_31_SEQ_0_LEVEL_1
  U8 := U4 <INT>
  GOTO IFEND_31_LEVEL_1
  LABEL IFNEXT_31_SEQ_0_LEVEL_1
  LABEL IFEND_31_LEVEL_1
  DEF a30 := 1 <INT>
  DEF a31 := U4 IADD a30 <INT>
  U4 := a31 <INT>
  DEF a32 := 1 <INT>
  DEF a33 := U6 IRSHIFT a32 <INT>
  U6 := a33 <INT>
  CALL IntIsZero([U6 -> f85]<INT>)
  DEF a34 := (RETURN f89) <BOOL>
  DEF a35 := BNOT a34 <BOOL>
  a23 := a35 <BOOL>
  GOTO WHILECOND_20_SEQ_0_LEVEL_0
  LABEL WHILENEXT_20_SEQ_0_LEVEL_0
  LABEL WHILEEND_20_LEVEL_0
  U9 := U8 <INT>
  DEF a36 := T7 ISUB U9 <INT>
  T7 := a36 <INT>
  DEF a37 := T8 ISUB U9 <INT>
  T8 := a37 <INT>
  DEF a38 := 30 <INT>
  DEF a39 := a38 ISUB U9 <INT>
  V6 := a39 <INT>
  V7 := V6 <INT>
  DEF a40 := T5 INE T6 <BOOL>
  DEF a41 := TRUE <BOOL>
  IF a40 BEQ a41
  THEN IFSTAT_32_SEQ_0_LEVEL_1
  ELSE IFNEXT_32_SEQ_0_LEVEL_1
  LABEL IFSTAT_32_SEQ_0_LEVEL_1
  DEF a42 := 1 <INT>
  U1 := a42 <INT>
  GOTO IFEND_32_LEVEL_1
  LABEL IFNEXT_32_SEQ_0_LEVEL_1
  DEF a43 := 0 <INT>
  U1 := a43 <INT>
  GOTO IFEND_32_LEVEL_1
  LABEL IFNEXT_32_SEQ_1_LEVEL_1
  LABEL IFEND_32_LEVEL_1
  DEF a44 := T7 ISUB T8 <INT>
  U3 := a44 <INT>
  CALL Div([T9 -> f99]<INT>, [U0 -> g38]<INT>)
  DEF a48 := (RETURN g48) <INT>
  U2 := a48 <INT>
  DEF a49 := 23 <INT>
  DEF a50 := V7 GT a49 <BOOL>
  DEF a51 := TRUE <BOOL>
  IF a50 BEQ a51
  THEN IFSTAT_33_SEQ_0_LEVEL_1
  ELSE IFNEXT_33_SEQ_0_LEVEL_1
  LABEL IFSTAT_33_SEQ_0_LEVEL_1
  DEF a52 := 23 <INT>
  DEF a53 := V7 ISUB a52 <INT>
  V1 := a53 <INT>
  DEF a54 := 1 <INT>
  DEF a55 := a54 ILSHIFT V1 <INT>
  DEF a56 := 1 <INT>
  DEF a57 := a55 ISUB a56 <INT>
  DEF a58 := U2 IAND a57 <INT>
  W6 := a58 <INT>
  DEF a59 := U2 IRSHIFT V1 <INT>
  U2 := a59 <INT>
  GOTO IFEND_33_LEVEL_1
  LABEL IFNEXT_33_SEQ_0_LEVEL_1
  DEF a60 := 23 <INT>
  DEF a61 := V7 LT a60 <BOOL>
  DEF a62 := TRUE <BOOL>
  IF a61 BEQ a62
  THEN IFSTAT_33_SEQ_1_LEVEL_1
  ELSE IFNEXT_33_SEQ_1_LEVEL_1
  LABEL IFSTAT_33_SEQ_1_LEVEL_1
  DEF a63 := 23 <INT>
  DEF a64 := a63 ISUB V7 <INT>
  V1 := a64 <INT>
  DEF a65 := U2 ILSHIFT V1 <INT>
  U2 := a65 <INT>
  DEF a66 := 0 <INT>
  W6 := a66 <INT>
  GOTO IFEND_33_LEVEL_1
  LABEL IFNEXT_33_SEQ_1_LEVEL_1
  LABEL IFEND_33_LEVEL_1
  DEF a67 := 0 <INT>
  V4 := a67 <INT>
  V5 := U2 <INT>
  DEF a68 := 0 <INT>
  V2 := a68 <INT>
  CALL IntIsZero([V5 -> f85]<INT>)
  DEF a69 := (RETURN f89) <BOOL>
  DEF a70 := BNOT a69 <BOOL>
  DEF a71 := TRUE <BOOL>
  IF a70 BEQ a71
  THEN WHILESTAT_22_SEQ_0_LEVEL_0
  ELSE WHILENEXT_22_SEQ_0_LEVEL_0
  LABEL WHILECOND_22_SEQ_0_LEVEL_0
  IF a70 BEQ a71
  THEN WHILESTAT_22_SEQ_0_LEVEL_0
  ELSE WHILEEND_22_LEVEL_0
  LABEL WHILESTAT_22_SEQ_0_LEVEL_0
  DEF a72 := 1 <INT>
  DEF a73 := V5 IAND a72 <INT>
  V3 := a73 <INT>
  DEF a74 := 1 <INT>
  DEF a75 := V3 IEQ a74 <BOOL>
  DEF a76 := TRUE <BOOL>
  IF a75 BEQ a76
  THEN IFSTAT_34_SEQ_0_LEVEL_1
  ELSE IFNEXT_34_SEQ_0_LEVEL_1
  LABEL IFSTAT_34_SEQ_0_LEVEL_1
  V2 := V4 <INT>
  GOTO IFEND_34_LEVEL_1
  LABEL IFNEXT_34_SEQ_0_LEVEL_1
  LABEL IFEND_34_LEVEL_1
  DEF a77 := 1 <INT>
  DEF a78 := V4 IADD a77 <INT>
  V4 := a78 <INT>
  DEF a79 := 1 <INT>
  DEF a80 := V5 IRSHIFT a79 <INT>
  V5 := a80 <INT>
  CALL IntIsZero([V5 -> f85]<INT>)
  DEF a81 := (RETURN f89) <BOOL>
  DEF a82 := BNOT a81 <BOOL>
  a70 := a82 <BOOL>
  GOTO WHILECOND_22_SEQ_0_LEVEL_0
  LABEL WHILENEXT_22_SEQ_0_LEVEL_0
  LABEL WHILEEND_22_LEVEL_0
  DEF a83 := 23 <INT>
  DEF a84 := V2 LT a83 <BOOL>
  DEF a85 := TRUE <BOOL>
  IF a84 BEQ a85
  THEN IFSTAT_35_SEQ_0_LEVEL_1
  ELSE IFNEXT_35_SEQ_0_LEVEL_1
  LABEL IFSTAT_35_SEQ_0_LEVEL_1
  DEF a86 := 23 <INT>
  DEF a87 := a86 ISUB V2 <INT>
  V0 := a87 <INT>
  DEF a88 := U2 ILSHIFT V0 <INT>
  U2 := a88 <INT>
  DEF a89 := V1 ISUB V0 <INT>
  DEF a90 := W6 IRSHIFT a89 <INT>
  DEF a91 := U2 IOR a90 <INT>
  U2 := a91 <INT>
  DEF a92 := U3 ISUB V0 <INT>
  U3 := a92 <INT>
  GOTO IFEND_35_LEVEL_1
  LABEL IFNEXT_35_SEQ_0_LEVEL_1
  LABEL IFEND_35_LEVEL_1
  DEF a93 := 1 <INT>
  DEF a94 := U2 IADD a93 <INT>
  W1 := a94 <INT>
  DEF a95 := 0 <INT>
  W8 := a95 <INT>
  W0 := U2 <INT>
  DEF a96 := 0 <INT>
  W7 := a96 <INT>
  DEF a97 := 1 <INT>
  DEF a98 := V1 ISUB a97 <INT>
  DEF a99 := W6 IRSHIFT a98 <INT>
  V2 := a99 <INT>
  DEF b10 := 1 <INT>
  DEF b11 := V2 IEQ b10 <BOOL>
  DEF b12 := TRUE <BOOL>
  IF b11 BEQ b12
  THEN IFSTAT_36_SEQ_0_LEVEL_1
  ELSE IFNEXT_36_SEQ_0_LEVEL_1
  LABEL IFSTAT_36_SEQ_0_LEVEL_1
  U2 := W1 <INT>
  W6 := W8 <INT>
  GOTO IFEND_36_LEVEL_1
  LABEL IFNEXT_36_SEQ_0_LEVEL_1
  DEF b13 := W2 GT W3 <BOOL>
  DEF b14 := TRUE <BOOL>
  IF b13 BEQ b14
  THEN IFSTAT_36_SEQ_1_LEVEL_1
  ELSE IFNEXT_36_SEQ_1_LEVEL_1
  LABEL IFSTAT_36_SEQ_1_LEVEL_1
  U2 := W0 <INT>
  W6 := W7 <INT>
  GOTO IFEND_36_LEVEL_1
  LABEL IFNEXT_36_SEQ_1_LEVEL_1
  DEF b15 := 1 <INT>
  DEF b16 := W0 IAND b15 <INT>
  W4 := b16 <INT>
  DEF b17 := 1 <INT>
  DEF b18 := W1 IAND b17 <INT>
  W5 := b18 <INT>
  DEF b19 := 0 <INT>
  DEF b20 := W5 IEQ b19 <BOOL>
  DEF b21 := TRUE <BOOL>
  IF b20 BEQ b21
  THEN IFSTAT_37_SEQ_0_LEVEL_2
  ELSE IFNEXT_37_SEQ_0_LEVEL_2
  LABEL IFSTAT_37_SEQ_0_LEVEL_2
  U2 := W1 <INT>
  W6 := W8 <INT>
  GOTO IFEND_37_LEVEL_2
  LABEL IFNEXT_37_SEQ_0_LEVEL_2
  U2 := W0 <INT>
  W6 := W7 <INT>
  GOTO IFEND_37_LEVEL_2
  LABEL IFNEXT_37_SEQ_1_LEVEL_2
  LABEL IFEND_37_LEVEL_2
  GOTO IFEND_36_LEVEL_1
  LABEL IFNEXT_36_SEQ_2_LEVEL_1
  LABEL IFEND_36_LEVEL_1
  DEF b22 := U3 IADD (GLOBAL g50) <INT>
  U3 := b22 <INT>
  DEF b23 := 255 <INT>
  DEF b24 := U3 IAND b23 <INT>
  DEF b25 := 23 <INT>
  DEF b26 := b24 ILSHIFT b25 <INT>
  T4 := b26 <INT>
  DEF b27 := 31 <INT>
  DEF b28 := U1 ILSHIFT b27 <INT>
  DEF b29 := T4 IOR b28 <INT>
  T4 := b29 <INT>
  DEF b30 := 8388607 <INT>
  DEF b31 := U2 IAND b30 <INT>
  DEF b32 := T4 IOR b31 <INT>
  T4 := b32 <INT>
  GOTO IFEND_30_LEVEL_0
  LABEL IFNEXT_30_SEQ_3_LEVEL_0
  LABEL IFEND_30_LEVEL_0
  CALL IntBinaryAsReal([T4 -> g53]<INT>)
  DEF b33 := (RETURN g54) <REAL>
  T3 := b33 <REAL>
  DEF RETURN g55 := T3 <REAL>
 RETURN FROM RDivide
 PROC LABEL RealSign
  DEF f29 := 0 <INT>
  DEF f30 := 0 <INT>
  CALL RealBinaryAsInt([(PARAM f41) -> f33]<REAL>)
  DEF f35 := (RETURN f34) <INT>
  f30 := f35 <INT>
  DEF f36 := 31 <INT>
  DEF f37 := f30 IRSHIFT f36 <INT>
  DEF f38 := 1 <INT>
  DEF f39 := f37 IAND f38 <INT>
  f29 := f39 <INT>
  DEF RETURN f40 := f29 <INT>
 RETURN FROM RealSign
 PROC LABEL RealBinaryAsInt
  DEF f31 := 0 <INT>
  DEF f32 := 0.0 <REAL>
  IPARAM f32 <REAL> %dr
  IPARAM (PARAM f33) <REAL> %a
  IASM "LDR %dr, %ua"
  IPARAM f32 <REAL> %r
  IPARAM f31 <INT> %da
  IASM "STR %ur, %da"
  DEF RETURN f34 := f31 <INT>
 RETURN FROM RealBinaryAsInt
 PROC LABEL RealExponent
  DEF f42 := 0 <INT>
  DEF f43 := 0 <INT>
  DEF f44 := 0 <INT>
  CALL RealBinaryAsInt([(PARAM f55) -> f33]<REAL>)
  DEF f45 := (RETURN f34) <INT>
  f43 := f45 <INT>
  DEF f46 := 23 <INT>
  DEF f47 := f43 IRSHIFT f46 <INT>
  DEF f48 := 255 <INT>
  DEF f49 := f47 IAND f48 <INT>
  f44 := f49 <INT>
  DEF f50 := f44 ISUB (GLOBAL g50) <INT>
  f42 := f50 <INT>
  DEF RETURN f54 := f42 <INT>
 RETURN FROM RealExponent
 PROC LABEL RealMantissa
  DEF f56 := 0 <INT>
  DEF f57 := 0 <INT>
  DEF f58 := 0 <INT>
  DEF f59 := 0 <INT>
  CALL RealBinaryAsInt([(PARAM f81) -> f33]<REAL>)
  DEF f60 := (RETURN f34) <INT>
  f57 := f60 <INT>
  DEF f61 := 8388607 <INT>
  DEF f62 := f57 IAND f61 <INT>
  f58 := f62 <INT>
  CALL RealIsZero([(PARAM f81) -> f75]<REAL>)
  DEF f76 := (RETURN f74) <BOOL>
  DEF f77 := TRUE <BOOL>
  IF f76 BEQ f77
  THEN IFSTAT_6_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_6_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_6_SEQ_0_LEVEL_0_0
  f56 := f58 <INT>
  GOTO IFEND_6_LEVEL_0_0
  LABEL IFNEXT_6_SEQ_0_LEVEL_0_0
  DEF f78 := 8388608 <INT>
  DEF f79 := f58 IOR f78 <INT>
  f56 := f79 <INT>
  GOTO IFEND_6_LEVEL_0_0
  LABEL IFNEXT_6_SEQ_1_LEVEL_0
  LABEL IFEND_6_LEVEL_0_0
  DEF RETURN f80 := f56 <INT>
 RETURN FROM RealMantissa
 PROC LABEL RealIsZero
  DEF f63 := FALSE <BOOL>
  DEF f64 := 0 <INT>
  DEF f65 := 0 <INT>
  CALL RealBinaryAsInt([(PARAM f75) -> f33]<REAL>)
  DEF f66 := (RETURN f34) <INT>
  f65 := f66 <INT>
  DEF f67 := 2147483647 <INT>
  DEF f68 := f65 IAND f67 <INT>
  f64 := f68 <INT>
  DEF f69 := 0 <INT>
  DEF f70 := f64 IEQ f69 <BOOL>
  DEF f71 := TRUE <BOOL>
  IF f70 BEQ f71
  THEN IFSTAT_0_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_0
  DEF f72 := TRUE <BOOL>
  f63 := f72 <BOOL>
  GOTO IFEND_0_LEVEL_0_0
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_0
  DEF f73 := FALSE <BOOL>
  f63 := f73 <BOOL>
  GOTO IFEND_0_LEVEL_0_0
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_0
  LABEL IFEND_0_LEVEL_0_0
  DEF RETURN f74 := f63 <BOOL>
 RETURN FROM RealIsZero
 PROC LABEL IntIsZero
  DEF f82 := FALSE <BOOL>
  DEF f83 := 0 <INT>
  DEF f84 := (PARAM f85) IEQ f83 <BOOL>
  DEF f86 := TRUE <BOOL>
  IF f84 BEQ f86
  THEN IFSTAT_1_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_1_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_0
  DEF f87 := TRUE <BOOL>
  f82 := f87 <BOOL>
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_0
  DEF f88 := FALSE <BOOL>
  f82 := f88 <BOOL>
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_1_LEVEL_0_0
  LABEL IFEND_1_LEVEL_0_0
  DEF RETURN f89 := f82 <BOOL>
 RETURN FROM IntIsZero
 PROC LABEL Div
  DEF f90 := 0 <INT>
  DEF f91 := 0 <INT>
  DEF f92 := 0 <INT>
  DEF f93 := 0 <INT>
  DEF f94 := 0 <INT>
  DEF f95 := 0 <INT>
  DEF f96 := 0 <INT>
  DEF f97 := 0 <INT>
  DEF f98 := 0 <INT>
  f92 := (PARAM f99) <INT>
  DEF g10 := 0 <INT>
  f95 := g10 <INT>
  DEF g11 := 0 <INT>
  f93 := g11 <INT>
  CALL IntIsZero([f92 -> f85]<INT>)
  DEF g12 := (RETURN f89) <BOOL>
  DEF g13 := BNOT g12 <BOOL>
  DEF g14 := TRUE <BOOL>
  IF g13 BEQ g14
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_0
  ELSE WHILENEXT_0_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_0_SEQ_0_LEVEL_0_0
  IF g13 BEQ g14
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_0
  ELSE WHILEEND_0_LEVEL_0_0
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0_0
  DEF g15 := 1 <INT>
  DEF g16 := f92 IAND g15 <INT>
  f94 := g16 <INT>
  DEF g17 := 1 <INT>
  DEF g18 := f94 IEQ g17 <BOOL>
  DEF g19 := TRUE <BOOL>
  IF g18 BEQ g19
  THEN IFSTAT_0_SEQ_0_LEVEL_0_1
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_1
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_1
  f93 := f95 <INT>
  GOTO IFEND_0_LEVEL_0_1
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_1
  LABEL IFEND_0_LEVEL_0_1
  DEF g20 := 1 <INT>
  DEF g21 := f95 IADD g20 <INT>
  f95 := g21 <INT>
  DEF g22 := 1 <INT>
  DEF g23 := f92 IRSHIFT g22 <INT>
  f92 := g23 <INT>
  CALL IntIsZero([f92 -> f85]<INT>)
  DEF g24 := (RETURN f89) <BOOL>
  DEF g25 := BNOT g24 <BOOL>
  g13 := g25 <BOOL>
  GOTO WHILECOND_0_SEQ_0_LEVEL_0_0
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_0_LEVEL_0_0
  f96 := f93 <INT>
  f92 := (PARAM f99) <INT>
  DEF g26 := 0 <INT>
  f98 := g26 <INT>
  DEF g27 := 0 <INT>
  f91 := g27 <INT>
  DEF g28 := 0 <INT>
  DEF g29 := f96 GE g28 <BOOL>
  DEF g30 := TRUE <BOOL>
  IF g29 BEQ g30
  THEN WHILESTAT_2_SEQ_0_LEVEL_0_0
  ELSE WHILENEXT_2_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_2_SEQ_0_LEVEL_0_0
  IF g29 BEQ g30
  THEN WHILESTAT_2_SEQ_0_LEVEL_0_0
  ELSE WHILEEND_2_LEVEL_0_0
  LABEL WHILESTAT_2_SEQ_0_LEVEL_0_0
  DEF g31 := f92 IRSHIFT f96 <INT>
  DEF g32 := 1 <INT>
  DEF g33 := g31 IAND g32 <INT>
  f97 := g33 <INT>
  DEF g34 := 1 <INT>
  DEF g35 := f98 ILSHIFT g34 <INT>
  DEF g36 := g35 IOR f97 <INT>
  f98 := g36 <INT>
  DEF g37 := f98 GE (PARAM g38) <BOOL>
  DEF g39 := TRUE <BOOL>
  IF g37 BEQ g39
  THEN IFSTAT_1_SEQ_0_LEVEL_0_1
  ELSE IFNEXT_1_SEQ_0_LEVEL_0_1
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_1
  DEF g40 := 1 <INT>
  DEF g41 := g40 ILSHIFT f96 <INT>
  DEF g42 := f91 IOR g41 <INT>
  f91 := g42 <INT>
  DEF g43 := f98 ISUB (PARAM g38) <INT>
  f98 := g43 <INT>
  GOTO IFEND_1_LEVEL_0_1
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_1
  LABEL IFEND_1_LEVEL_0_1
  DEF g44 := 1 <INT>
  DEF g45 := f96 ISUB g44 <INT>
  f96 := g45 <INT>
  DEF g46 := 0 <INT>
  DEF g47 := f96 GE g46 <BOOL>
  g29 := g47 <BOOL>
  GOTO WHILECOND_2_SEQ_0_LEVEL_0_0
  LABEL WHILENEXT_2_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_2_LEVEL_0_0
  DEF RETURN g48 := f91 <INT>
 RETURN FROM Div
 PROC LABEL IntBinaryAsReal
  DEF g51 := 0.0 <REAL>
  DEF g52 := 0 <INT>
  IPARAM g52 <INT> %dr
  IPARAM (PARAM g53) <INT> %a
  IASM "LDR %dr, %ua"
  IPARAM g52 <INT> %r
  IPARAM g51 <REAL> %da
  IASM "STR %ur, %da"
  DEF RETURN g54 := g51 <REAL>
 RETURN FROM IntBinaryAsReal
 PROC LABEL WriteReal
  DEF g59 := 0 <INT>
  IPARAM g59 <INT> %dr
  IASM "MOV %dr, R0"
  IPARAM (PARAM g60) <REAL> %a
  IASM "LDR R0, %ua"
  IASM "SWI 2"
  IPARAM g59 <INT> %r
  IASM "MOV R0, %ur"
 RETURN FROM WriteReal
