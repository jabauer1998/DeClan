SYMBOL SECTION
 ENTRY f33 CONST INTERNAL GLOBAL i1  <INT>
 ENTRY f35 CONST INTERNAL GLOBAL i2  <INT>
 ENTRY f36 INTERNAL GLOBAL result  <INT>
 ENTRY f37 INTERNAL total Div <INT>
 ENTRY f38 INTERNAL result Div <INT>
 ENTRY f39 INTERNAL tempDividend Div <INT>
 ENTRY f40 INTERNAL dividendLastOne Div <INT>
 ENTRY f41 INTERNAL dividendLastDigit Div <INT>
 ENTRY f42 INTERNAL dividendCount Div <INT>
 ENTRY f43 INTERNAL dividendIndex Div <INT>
 ENTRY f44 INTERNAL bitAtIndex Div <INT>
 ENTRY f45 INTERNAL remainder Div <INT>
 ENTRY f46 INTERNAL PARAM dividend Div 0 <INT>
 ENTRY f49 INTERNAL result IntIsZero <BOOL>
 ENTRY f52 INTERNAL PARAM n IntIsZero 0 <INT>
 ENTRY f56 INTERNAL RETURN IntIsZero <BOOL>
 ENTRY f83 INTERNAL PARAM divisor Div 1 <INT>
 ENTRY f93 INTERNAL RETURN Div <INT>
 ENTRY f95 INTERNAL tempReg WriteInt <INT>
 ENTRY f96 INTERNAL PARAM i WriteInt 0 <INT>
DATA SECTION
 DEF f32 := 30 <INT>
 DEF GLOBAL f33 := f32 <INT>
 DEF f34 := 8 <INT>
 DEF GLOBAL f35 := f34 <INT>
BSS SECTION
 DEF GLOBAL f36 := 0 <INT>
CODE SECTION
 CALL Div([(GLOBAL f33) -> f46]<INT>, [(GLOBAL f35) -> f83]<INT>) FROM CODE SECTION
 DEF f94 := (RETURN f93) <INT>
 GLOBAL f36 := f94 <INT>
 CALL WriteInt([(GLOBAL f36) -> f96]<INT>) FROM GLOBAL f36 := f94 <INT>
END
PROC SECTION
 PROC LABEL Div
  DEF f37 := 0 <INT>
  DEF f38 := 0 <INT>
  DEF f39 := 0 <INT>
  DEF f40 := 0 <INT>
  DEF f41 := 0 <INT>
  DEF f42 := 0 <INT>
  DEF f43 := 0 <INT>
  DEF f44 := 0 <INT>
  DEF f45 := 0 <INT>
  f39 := (PARAM f46) <INT>
  DEF f47 := 0 <INT>
  f42 := f47 <INT>
  DEF f48 := 0 <INT>
  f40 := f48 <INT>
  CALL IntIsZero([f39 -> f52]<INT>) FROM f40 := f48 <INT>
  DEF f57 := (RETURN f56) <BOOL>
  DEF f58 := BNOT f57 <BOOL>
  DEF f59 := TRUE <BOOL>
  IF f58 BEQ f59
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_0
  ELSE WHILENEXT_0_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_0_SEQ_0_LEVEL_0_0
  IF f58 BEQ f59
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_0
  ELSE WHILEEND_0_LEVEL_0_0
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0_0
  DEF f60 := 1 <INT>
  DEF f61 := f39 IAND f60 <INT>
  f41 := f61 <INT>
  DEF f62 := 1 <INT>
  DEF f63 := f41 IEQ f62 <BOOL>
  DEF f64 := TRUE <BOOL>
  IF f63 BEQ f64
  THEN IFSTAT_0_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_0
  f40 := f42 <INT>
  GOTO IFEND_0_LEVEL_0_0 FROM f40 := f42 <INT>
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_0
  LABEL IFEND_0_LEVEL_0_0
  DEF f65 := 1 <INT>
  DEF f66 := f42 IADD f65 <INT>
  f42 := f66 <INT>
  DEF f67 := 1 <INT>
  DEF f68 := f39 IRSHIFT f67 <INT>
  f39 := f68 <INT>
  CALL IntIsZero([f39 -> f52]<INT>) FROM f39 := f68 <INT>
  DEF f69 := (RETURN f56) <BOOL>
  DEF f70 := BNOT f69 <BOOL>
  f58 := f70 <BOOL>
  GOTO WHILECOND_0_SEQ_0_LEVEL_0_0 FROM f58 := f70 <BOOL>
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_0_LEVEL_0_0
  f43 := f40 <INT>
  f39 := (PARAM f46) <INT>
  DEF f71 := 0 <INT>
  f45 := f71 <INT>
  DEF f72 := 0 <INT>
  f38 := f72 <INT>
  DEF f73 := 0 <INT>
  DEF f74 := f43 GE f73 <BOOL>
  DEF f75 := TRUE <BOOL>
  IF f74 BEQ f75
  THEN WHILESTAT_2_SEQ_0_LEVEL_0_0
  ELSE WHILENEXT_2_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_2_SEQ_0_LEVEL_0_0
  IF f74 BEQ f75
  THEN WHILESTAT_2_SEQ_0_LEVEL_0_0
  ELSE WHILEEND_2_LEVEL_0_0
  LABEL WHILESTAT_2_SEQ_0_LEVEL_0_0
  DEF f76 := f39 IRSHIFT f43 <INT>
  DEF f77 := 1 <INT>
  DEF f78 := f76 IAND f77 <INT>
  f44 := f78 <INT>
  DEF f79 := 1 <INT>
  DEF f80 := f45 ILSHIFT f79 <INT>
  DEF f81 := f80 IOR f44 <INT>
  f45 := f81 <INT>
  DEF f82 := f45 GE (PARAM f83) <BOOL>
  DEF f84 := TRUE <BOOL>
  IF f82 BEQ f84
  THEN IFSTAT_1_SEQ_0_LEVEL_0_1
  ELSE IFNEXT_1_SEQ_0_LEVEL_0_1
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_1
  DEF f85 := 1 <INT>
  DEF f86 := f85 ILSHIFT f43 <INT>
  DEF f87 := f38 IOR f86 <INT>
  f38 := f87 <INT>
  DEF f88 := f45 ISUB (PARAM f83) <INT>
  f45 := f88 <INT>
  GOTO IFEND_1_LEVEL_0_1 FROM f45 := f88 <INT>
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_1
  LABEL IFEND_1_LEVEL_0_1
  DEF f89 := 1 <INT>
  DEF f90 := f43 ISUB f89 <INT>
  f43 := f90 <INT>
  DEF f91 := 0 <INT>
  DEF f92 := f43 GE f91 <BOOL>
  f74 := f92 <BOOL>
  GOTO WHILECOND_2_SEQ_0_LEVEL_0_0 FROM f74 := f92 <BOOL>
  LABEL WHILENEXT_2_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_2_LEVEL_0_0
  DEF RETURN f93 := f38 <INT>
 RETURN FROM Div
 PROC LABEL IntIsZero
  DEF f49 := FALSE <BOOL>
  DEF f50 := 0 <INT>
  DEF f51 := (PARAM f52) IEQ f50 <BOOL>
  DEF f53 := TRUE <BOOL>
  IF f51 BEQ f53
  THEN IFSTAT_1_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_1_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_0
  DEF f54 := TRUE <BOOL>
  f49 := f54 <BOOL>
  GOTO IFEND_1_LEVEL_0_0 FROM f49 := f54 <BOOL>
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_0
  DEF f55 := FALSE <BOOL>
  f49 := f55 <BOOL>
  GOTO IFEND_1_LEVEL_0_0 FROM f49 := f55 <BOOL>
  LABEL IFNEXT_1_SEQ_1_LEVEL_0_0
  LABEL IFEND_1_LEVEL_0_0
  DEF RETURN f56 := f49 <BOOL>
 RETURN FROM IntIsZero
 PROC LABEL WriteInt
  DEF f95 := 0 <INT>
  IPARAM f95
  IASM "MOV %r, R0"
  IPARAM (PARAM f96)
  IASM "LDR R0, %a"
  IASM "SWI 1"
  IPARAM f95
  IASM "MOV R0, %r"
 RETURN FROM WriteInt
