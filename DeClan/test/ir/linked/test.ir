SYMBOL SECTION
 ENTRY f25 INTERNAL result INeg <INT>
 ENTRY f27 INTERNAL PARAM n INeg 0 <INT>
 ENTRY f30 INTERNAL RETURN INeg <INT>
 ENTRY f32 CONST INTERNAL GLOBAL answer  <INT>
 ENTRY f33 INTERNAL GLOBAL n  <INT>
 ENTRY f43 INTERNAL total Mod <INT>
 ENTRY f44 INTERNAL result Mod <INT>
 ENTRY f45 INTERNAL PARAM dividend Mod 0 <INT>
 ENTRY f47 INTERNAL PARAM divisor Mod 1 <INT>
 ENTRY f55 INTERNAL RETURN Mod <INT>
 ENTRY f61 INTERNAL tempReg WriteInt <INT>
 ENTRY f62 INTERNAL PARAM i WriteInt 0 <INT>
 ENTRY f67 INTERNAL total Div <INT>
 ENTRY f68 INTERNAL result Div <INT>
 ENTRY f69 INTERNAL tempDividend Div <INT>
 ENTRY f70 INTERNAL dividendLastOne Div <INT>
 ENTRY f71 INTERNAL dividendLastDigit Div <INT>
 ENTRY f72 INTERNAL dividendCount Div <INT>
 ENTRY f73 INTERNAL dividendIndex Div <INT>
 ENTRY f74 INTERNAL bitAtIndex Div <INT>
 ENTRY f75 INTERNAL remainder Div <INT>
 ENTRY f76 INTERNAL PARAM dividend Div 0 <INT>
 ENTRY f79 INTERNAL result IntIsZero <BOOL>
 ENTRY f82 INTERNAL PARAM n IntIsZero 0 <INT>
 ENTRY f86 INTERNAL RETURN IntIsZero <BOOL>
 ENTRY g23 INTERNAL PARAM divisor Div 1 <INT>
 ENTRY g33 INTERNAL RETURN Div <INT>
DATA SECTION
 DEF f24 := 42 <INT>
 CALL INeg([f24 -> f27]<INT>)
 DEF f31 := (RETURN f30) <INT>
 DEF GLOBAL f32 := f31 <INT>
BSS SECTION
 DEF GLOBAL f33 := 0 <INT>
CODE SECTION
 GLOBAL f33 := (GLOBAL f32) <INT>
 DEF f34 := 0 <INT>
 DEF f35 := (GLOBAL f33) LT f34 <BOOL>
 DEF f36 := TRUE <BOOL>
 IF f35 BEQ f36
 THEN IFSTAT_0_SEQ_0_LEVEL_0_0
 ELSE IFNEXT_0_SEQ_0_LEVEL_0_0
 LABEL IFSTAT_0_SEQ_0_LEVEL_0_0
 CALL INeg([(GLOBAL f33) -> f27]<INT>)
 DEF f37 := (RETURN f30) <INT>
 GLOBAL f33 := f37 <INT>
 GOTO IFEND_0_LEVEL_0_0
 LABEL IFNEXT_0_SEQ_0_LEVEL_0_0
 DEF f38 := 0 <INT>
 DEF f39 := (GLOBAL f33) GT f38 <BOOL>
 DEF f40 := TRUE <BOOL>
 IF f39 BEQ f40
 THEN IFSTAT_0_SEQ_1_LEVEL_0_0
 ELSE IFNEXT_0_SEQ_1_LEVEL_0_0
 LABEL IFSTAT_0_SEQ_1_LEVEL_0_0
 CALL Display([(GLOBAL f33) -> f65]<INT>)
 GOTO IFEND_0_LEVEL_0_0
 LABEL IFNEXT_0_SEQ_1_LEVEL_0_0
 LABEL IFEND_0_LEVEL_0_0
END
PROC SECTION
 PROC LABEL INeg
  DEF f25 := 0 <INT>
  DEF f26 := INOT (PARAM f27) <INT>
  DEF f28 := 1 <INT>
  DEF f29 := f26 IADD f28 <INT>
  f25 := f29 <INT>
  DEF RETURN f30 := f25 <INT>
 RETURN FROM INeg
 PROC LABEL Display
  DEF f41 := FALSE <BOOL>
  DEF f42 := 2 <INT>
  CALL Mod([(PARAM f65) -> f45]<INT>, [f42 -> f47]<INT>)
  DEF f56 := (RETURN f55) <INT>
  DEF f57 := 0 <INT>
  DEF f58 := f56 INE f57 <BOOL>
  f41 := f58 <BOOL>
  DEF f59 := TRUE <BOOL>
  IF f41 BEQ f59
  THEN IFSTAT_1_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_1_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_0
  DEF f60 := 1 <INT>
  CALL WriteInt([f60 -> f62]<INT>)
  DEF f63 := 1 <INT>
  DEF f64 := (PARAM f65) ISUB f63 <INT>
  DEF f66 := 2 <INT>
  CALL Div([f64 -> f76]<INT>, [f66 -> g23]<INT>)
  DEF g34 := (RETURN g33) <INT>
  PARAM f65 := g34 <INT>
  GOTO IFEND_1_LEVEL_0_2
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_0
  DEF g35 := 0 <INT>
  DEF g36 := (PARAM f65) IEQ g35 <BOOL>
  DEF g37 := TRUE <BOOL>
  IF g36 BEQ g37
  THEN IFSTAT_1_SEQ_1_LEVEL_0_0
  ELSE IFNEXT_1_SEQ_1_LEVEL_0_1
  LABEL IFSTAT_1_SEQ_1_LEVEL_0_0
  DEF g38 := 1 <INT>
  CALL INeg([g38 -> f27]<INT>)
  DEF g39 := (RETURN f30) <INT>
  CALL WriteInt([g39 -> f62]<INT>)
  GOTO IFEND_1_LEVEL_0_2
  LABEL IFNEXT_1_SEQ_1_LEVEL_0_1
  DEF g40 := 0 <INT>
  CALL WriteInt([g40 -> f62]<INT>)
  DEF g41 := 2 <INT>
  CALL Div([(PARAM f65) -> f76]<INT>, [g41 -> g23]<INT>)
  DEF g42 := (RETURN g33) <INT>
  PARAM f65 := g42 <INT>
  GOTO IFEND_1_LEVEL_0_2
  LABEL IFNEXT_1_SEQ_2_LEVEL_0_0
  LABEL IFEND_1_LEVEL_0_2
 RETURN FROM Display
 PROC LABEL Mod
  DEF f43 := 0 <INT>
  DEF f44 := 0 <INT>
  f43 := (PARAM f45) <INT>
  DEF f46 := f43 ISUB (PARAM f47) <INT>
  DEF f48 := 0 <INT>
  DEF f49 := f46 GE f48 <BOOL>
  DEF f50 := TRUE <BOOL>
  IF f49 BEQ f50
  THEN WHILESTAT_4_SEQ_0_LEVEL_0_0
  ELSE WHILENEXT_4_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_4_SEQ_0_LEVEL_0_0
  IF f49 BEQ f50
  THEN WHILESTAT_4_SEQ_0_LEVEL_0_0
  ELSE WHILEEND_4_LEVEL_0_0
  LABEL WHILESTAT_4_SEQ_0_LEVEL_0_0
  DEF f51 := f43 ISUB (PARAM f47) <INT>
  f43 := f51 <INT>
  DEF f52 := f43 ISUB (PARAM f47) <INT>
  DEF f53 := 0 <INT>
  DEF f54 := f52 GE f53 <BOOL>
  f49 := f54 <BOOL>
  GOTO WHILECOND_4_SEQ_0_LEVEL_0_0
  LABEL WHILENEXT_4_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_4_LEVEL_0_0
  DEF RETURN f55 := f43 <INT>
 RETURN FROM Mod
 PROC LABEL WriteInt
  DEF f61 := 0 <INT>
  IPARAM f61 <INT> %dr
  IASM "MOV %dr, R0"
  IPARAM (PARAM f62) <INT> %a
  IASM "LDR R0, %ua"
  IASM "SWI 1"
  IPARAM f61 <INT> %r
  IASM "MOV R0, %ur"
 RETURN FROM WriteInt
 PROC LABEL Div
  DEF f67 := 0 <INT>
  DEF f68 := 0 <INT>
  DEF f69 := 0 <INT>
  DEF f70 := 0 <INT>
  DEF f71 := 0 <INT>
  DEF f72 := 0 <INT>
  DEF f73 := 0 <INT>
  DEF f74 := 0 <INT>
  DEF f75 := 0 <INT>
  f69 := (PARAM f76) <INT>
  DEF f77 := 0 <INT>
  f72 := f77 <INT>
  DEF f78 := 0 <INT>
  f70 := f78 <INT>
  CALL IntIsZero([f69 -> f82]<INT>)
  DEF f87 := (RETURN f86) <BOOL>
  DEF f88 := BNOT f87 <BOOL>
  DEF f89 := TRUE <BOOL>
  IF f88 BEQ f89
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_0
  ELSE WHILENEXT_0_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_0_SEQ_0_LEVEL_0_0
  IF f88 BEQ f89
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_0
  ELSE WHILEEND_0_LEVEL_0_0
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0_0
  DEF f90 := 1 <INT>
  DEF f91 := f69 IAND f90 <INT>
  f71 := f91 <INT>
  DEF f92 := 1 <INT>
  DEF f93 := f71 IEQ f92 <BOOL>
  DEF f94 := TRUE <BOOL>
  IF f93 BEQ f94
  THEN IFSTAT_0_SEQ_0_LEVEL_0_1
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_1
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_1
  f70 := f72 <INT>
  GOTO IFEND_0_LEVEL_0_1
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_1
  LABEL IFEND_0_LEVEL_0_1
  DEF f95 := 1 <INT>
  DEF f96 := f72 IADD f95 <INT>
  f72 := f96 <INT>
  DEF f97 := 1 <INT>
  DEF f98 := f69 IRSHIFT f97 <INT>
  f69 := f98 <INT>
  CALL IntIsZero([f69 -> f82]<INT>)
  DEF f99 := (RETURN f86) <BOOL>
  DEF g10 := BNOT f99 <BOOL>
  f88 := g10 <BOOL>
  GOTO WHILECOND_0_SEQ_0_LEVEL_0_0
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_0_LEVEL_0_0
  f73 := f70 <INT>
  f69 := (PARAM f76) <INT>
  DEF g11 := 0 <INT>
  f75 := g11 <INT>
  DEF g12 := 0 <INT>
  f68 := g12 <INT>
  DEF g13 := 0 <INT>
  DEF g14 := f73 GE g13 <BOOL>
  DEF g15 := TRUE <BOOL>
  IF g14 BEQ g15
  THEN WHILESTAT_2_SEQ_0_LEVEL_0_0
  ELSE WHILENEXT_2_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_2_SEQ_0_LEVEL_0_0
  IF g14 BEQ g15
  THEN WHILESTAT_2_SEQ_0_LEVEL_0_0
  ELSE WHILEEND_2_LEVEL_0_0
  LABEL WHILESTAT_2_SEQ_0_LEVEL_0_0
  DEF g16 := f69 IRSHIFT f73 <INT>
  DEF g17 := 1 <INT>
  DEF g18 := g16 IAND g17 <INT>
  f74 := g18 <INT>
  DEF g19 := 1 <INT>
  DEF g20 := f75 ILSHIFT g19 <INT>
  DEF g21 := g20 IOR f74 <INT>
  f75 := g21 <INT>
  DEF g22 := f75 GE (PARAM g23) <BOOL>
  DEF g24 := TRUE <BOOL>
  IF g22 BEQ g24
  THEN IFSTAT_1_SEQ_0_LEVEL_0_2
  ELSE IFNEXT_1_SEQ_0_LEVEL_0_2
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_2
  DEF g25 := 1 <INT>
  DEF g26 := g25 ILSHIFT f73 <INT>
  DEF g27 := f68 IOR g26 <INT>
  f68 := g27 <INT>
  DEF g28 := f75 ISUB (PARAM g23) <INT>
  f75 := g28 <INT>
  GOTO IFEND_1_LEVEL_0_1
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_2
  LABEL IFEND_1_LEVEL_0_1
  DEF g29 := 1 <INT>
  DEF g30 := f73 ISUB g29 <INT>
  f73 := g30 <INT>
  DEF g31 := 0 <INT>
  DEF g32 := f73 GE g31 <BOOL>
  g14 := g32 <BOOL>
  GOTO WHILECOND_2_SEQ_0_LEVEL_0_0
  LABEL WHILENEXT_2_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_2_LEVEL_0_0
  DEF RETURN g33 := f68 <INT>
 RETURN FROM Div
 PROC LABEL IntIsZero
  DEF f79 := FALSE <BOOL>
  DEF f80 := 0 <INT>
  DEF f81 := (PARAM f82) IEQ f80 <BOOL>
  DEF f83 := TRUE <BOOL>
  IF f81 BEQ f83
  THEN IFSTAT_1_SEQ_0_LEVEL_0_1
  ELSE IFNEXT_1_SEQ_0_LEVEL_0_1
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_1
  DEF f84 := TRUE <BOOL>
  f79 := f84 <BOOL>
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_1
  DEF f85 := FALSE <BOOL>
  f79 := f85 <BOOL>
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_1_LEVEL_0_0
  LABEL IFEND_1_LEVEL_0_0
  DEF RETURN f86 := f79 <BOOL>
 RETURN FROM IntIsZero
