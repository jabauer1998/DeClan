SYMBOL SECTION
 ENTRY f33 INTERNAL result INeg <INT>
 ENTRY f35 INTERNAL PARAM n INeg 0 <INT>
 ENTRY f38 INTERNAL RETURN INeg <INT>
 ENTRY f40 CONST INTERNAL GLOBAL answer  <INT>
 ENTRY f41 INTERNAL GLOBAL n  <INT>
 ENTRY f51 INTERNAL total Mod <INT>
 ENTRY f52 INTERNAL result Mod <INT>
 ENTRY f53 INTERNAL PARAM dividend Mod 0 <INT>
 ENTRY f55 INTERNAL PARAM divisor Mod 1 <INT>
 ENTRY f63 INTERNAL RETURN Mod <INT>
 ENTRY f69 INTERNAL tempReg WriteInt <INT>
 ENTRY f70 INTERNAL PARAM i WriteInt 0 <INT>
 ENTRY f75 INTERNAL total Div <INT>
 ENTRY f76 INTERNAL result Div <INT>
 ENTRY f77 INTERNAL tempDividend Div <INT>
 ENTRY f78 INTERNAL dividendLastOne Div <INT>
 ENTRY f79 INTERNAL dividendLastDigit Div <INT>
 ENTRY f80 INTERNAL dividendCount Div <INT>
 ENTRY f81 INTERNAL dividendIndex Div <INT>
 ENTRY f82 INTERNAL bitAtIndex Div <INT>
 ENTRY f83 INTERNAL remainder Div <INT>
 ENTRY f84 INTERNAL PARAM dividend Div 0 <INT>
 ENTRY f87 INTERNAL result IntIsZero <BOOL>
 ENTRY f90 INTERNAL PARAM n IntIsZero 0 <INT>
 ENTRY f94 INTERNAL RETURN IntIsZero <BOOL>
 ENTRY g31 INTERNAL PARAM divisor Div 1 <INT>
 ENTRY g41 INTERNAL RETURN Div <INT>
DATA SECTION
 DEF f32 := 42 <INT>
 CALL INeg([f32 -> f35]<INT>)
 DEF f39 := (RETURN f38) <INT>
 DEF GLOBAL f40 := f39 <INT>
BSS SECTION
 DEF GLOBAL f41 := 0 <INT>
CODE SECTION
 GLOBAL f41 := (GLOBAL f40) <INT>
 DEF f42 := 0 <INT>
 DEF f43 := (GLOBAL f41) LT f42 <BOOL>
 DEF f44 := TRUE <BOOL>
 IF f43 BEQ f44
 THEN IFSTAT_0_SEQ_0_LEVEL_0_0
 ELSE IFNEXT_0_SEQ_0_LEVEL_0_0
 LABEL IFSTAT_0_SEQ_0_LEVEL_0_0
 CALL INeg([(GLOBAL f41) -> f35]<INT>)
 DEF f45 := (RETURN f38) <INT>
 GLOBAL f41 := f45 <INT>
 GOTO IFEND_0_LEVEL_0_0
 LABEL IFNEXT_0_SEQ_0_LEVEL_0_0
 DEF f46 := 0 <INT>
 DEF f47 := (GLOBAL f41) GT f46 <BOOL>
 DEF f48 := TRUE <BOOL>
 IF f47 BEQ f48
 THEN IFSTAT_0_SEQ_1_LEVEL_0_0
 ELSE IFNEXT_0_SEQ_1_LEVEL_0_0
 LABEL IFSTAT_0_SEQ_1_LEVEL_0_0
 CALL Display([(GLOBAL f41) -> f73]<INT>)
 GOTO IFEND_0_LEVEL_0_0
 LABEL IFNEXT_0_SEQ_1_LEVEL_0_0
 LABEL IFEND_0_LEVEL_0_0
END
PROC SECTION
 PROC LABEL INeg
  DEF f33 := 0 <INT>
  DEF f34 := INOT (PARAM f35) <INT>
  DEF f36 := 1 <INT>
  DEF f37 := f34 IADD f36 <INT>
  f33 := f37 <INT>
  DEF RETURN f38 := f33 <INT>
 RETURN FROM INeg
 PROC LABEL Display
  DEF f49 := FALSE <BOOL>
  DEF f50 := 2 <INT>
  CALL Mod([(PARAM f73) -> f53]<INT>, [f50 -> f55]<INT>)
  DEF f64 := (RETURN f63) <INT>
  DEF f65 := 0 <INT>
  DEF f66 := f64 INE f65 <BOOL>
  f49 := f66 <BOOL>
  DEF f67 := TRUE <BOOL>
  IF f49 BEQ f67
  THEN IFSTAT_1_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_1_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_0
  DEF f68 := 1 <INT>
  CALL WriteInt([f68 -> f70]<INT>)
  DEF f71 := 1 <INT>
  DEF f72 := (PARAM f73) ISUB f71 <INT>
  DEF f74 := 2 <INT>
  CALL Div([f72 -> f84]<INT>, [f74 -> g31]<INT>)
  DEF g42 := (RETURN g41) <INT>
  PARAM f73 := g42 <INT>
  GOTO IFEND_1_LEVEL_0_2
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_0
  DEF g43 := 0 <INT>
  DEF g44 := (PARAM f73) IEQ g43 <BOOL>
  DEF g45 := TRUE <BOOL>
  IF g44 BEQ g45
  THEN IFSTAT_1_SEQ_1_LEVEL_0_0
  ELSE IFNEXT_1_SEQ_1_LEVEL_0_1
  LABEL IFSTAT_1_SEQ_1_LEVEL_0_0
  DEF g46 := 1 <INT>
  CALL INeg([g46 -> f35]<INT>)
  DEF g47 := (RETURN f38) <INT>
  CALL WriteInt([g47 -> f70]<INT>)
  GOTO IFEND_1_LEVEL_0_2
  LABEL IFNEXT_1_SEQ_1_LEVEL_0_1
  DEF g48 := 0 <INT>
  CALL WriteInt([g48 -> f70]<INT>)
  DEF g49 := 2 <INT>
  CALL Div([(PARAM f73) -> f84]<INT>, [g49 -> g31]<INT>)
  DEF g50 := (RETURN g41) <INT>
  PARAM f73 := g50 <INT>
  GOTO IFEND_1_LEVEL_0_2
  LABEL IFNEXT_1_SEQ_2_LEVEL_0_0
  LABEL IFEND_1_LEVEL_0_2
 RETURN FROM Display
 PROC LABEL Mod
  DEF f51 := 0 <INT>
  DEF f52 := 0 <INT>
  f51 := (PARAM f53) <INT>
  DEF f54 := f51 ISUB (PARAM f55) <INT>
  DEF f56 := 0 <INT>
  DEF f57 := f54 GE f56 <BOOL>
  DEF f58 := TRUE <BOOL>
  IF f57 BEQ f58
  THEN WHILESTAT_4_SEQ_0_LEVEL_0_0
  ELSE WHILENEXT_4_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_4_SEQ_0_LEVEL_0_0
  IF f57 BEQ f58
  THEN WHILESTAT_4_SEQ_0_LEVEL_0_0
  ELSE WHILEEND_4_LEVEL_0_0
  LABEL WHILESTAT_4_SEQ_0_LEVEL_0_0
  DEF f59 := f51 ISUB (PARAM f55) <INT>
  f51 := f59 <INT>
  DEF f60 := f51 ISUB (PARAM f55) <INT>
  DEF f61 := 0 <INT>
  DEF f62 := f60 GE f61 <BOOL>
  f57 := f62 <BOOL>
  GOTO WHILECOND_4_SEQ_0_LEVEL_0_0
  LABEL WHILENEXT_4_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_4_LEVEL_0_0
  DEF RETURN f63 := f51 <INT>
 RETURN FROM Mod
 PROC LABEL WriteInt
  DEF f69 := 0 <INT>
  IPARAM f69
  IASM "MOV %r, R0"
  IPARAM (PARAM f70)
  IASM "LDR R0, %a"
  IASM "SWI 1"
  IPARAM f69
  IASM "MOV R0, %r"
 RETURN FROM WriteInt
 PROC LABEL Div
  DEF f75 := 0 <INT>
  DEF f76 := 0 <INT>
  DEF f77 := 0 <INT>
  DEF f78 := 0 <INT>
  DEF f79 := 0 <INT>
  DEF f80 := 0 <INT>
  DEF f81 := 0 <INT>
  DEF f82 := 0 <INT>
  DEF f83 := 0 <INT>
  f77 := (PARAM f84) <INT>
  DEF f85 := 0 <INT>
  f80 := f85 <INT>
  DEF f86 := 0 <INT>
  f78 := f86 <INT>
  CALL IntIsZero([f77 -> f90]<INT>)
  DEF f95 := (RETURN f94) <BOOL>
  DEF f96 := BNOT f95 <BOOL>
  DEF f97 := TRUE <BOOL>
  IF f96 BEQ f97
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_0
  ELSE WHILENEXT_0_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_0_SEQ_0_LEVEL_0_0
  IF f96 BEQ f97
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_0
  ELSE WHILEEND_0_LEVEL_0_0
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0_0
  DEF f98 := 1 <INT>
  DEF f99 := f77 IAND f98 <INT>
  f79 := f99 <INT>
  DEF g10 := 1 <INT>
  DEF g11 := f79 IEQ g10 <BOOL>
  DEF g12 := TRUE <BOOL>
  IF g11 BEQ g12
  THEN IFSTAT_0_SEQ_0_LEVEL_0_1
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_1
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_1
  f78 := f80 <INT>
  GOTO IFEND_0_LEVEL_0_1
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_1
  LABEL IFEND_0_LEVEL_0_1
  DEF g13 := 1 <INT>
  DEF g14 := f80 IADD g13 <INT>
  f80 := g14 <INT>
  DEF g15 := 1 <INT>
  DEF g16 := f77 IRSHIFT g15 <INT>
  f77 := g16 <INT>
  CALL IntIsZero([f77 -> f90]<INT>)
  DEF g17 := (RETURN f94) <BOOL>
  DEF g18 := BNOT g17 <BOOL>
  f96 := g18 <BOOL>
  GOTO WHILECOND_0_SEQ_0_LEVEL_0_0
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_0_LEVEL_0_0
  f81 := f78 <INT>
  f77 := (PARAM f84) <INT>
  DEF g19 := 0 <INT>
  f83 := g19 <INT>
  DEF g20 := 0 <INT>
  f76 := g20 <INT>
  DEF g21 := 0 <INT>
  DEF g22 := f81 GE g21 <BOOL>
  DEF g23 := TRUE <BOOL>
  IF g22 BEQ g23
  THEN WHILESTAT_2_SEQ_0_LEVEL_0_0
  ELSE WHILENEXT_2_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_2_SEQ_0_LEVEL_0_0
  IF g22 BEQ g23
  THEN WHILESTAT_2_SEQ_0_LEVEL_0_0
  ELSE WHILEEND_2_LEVEL_0_0
  LABEL WHILESTAT_2_SEQ_0_LEVEL_0_0
  DEF g24 := f77 IRSHIFT f81 <INT>
  DEF g25 := 1 <INT>
  DEF g26 := g24 IAND g25 <INT>
  f82 := g26 <INT>
  DEF g27 := 1 <INT>
  DEF g28 := f83 ILSHIFT g27 <INT>
  DEF g29 := g28 IOR f82 <INT>
  f83 := g29 <INT>
  DEF g30 := f83 GE (PARAM g31) <BOOL>
  DEF g32 := TRUE <BOOL>
  IF g30 BEQ g32
  THEN IFSTAT_1_SEQ_0_LEVEL_0_2
  ELSE IFNEXT_1_SEQ_0_LEVEL_0_2
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_2
  DEF g33 := 1 <INT>
  DEF g34 := g33 ILSHIFT f81 <INT>
  DEF g35 := f76 IOR g34 <INT>
  f76 := g35 <INT>
  DEF g36 := f83 ISUB (PARAM g31) <INT>
  f83 := g36 <INT>
  GOTO IFEND_1_LEVEL_0_1
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_2
  LABEL IFEND_1_LEVEL_0_1
  DEF g37 := 1 <INT>
  DEF g38 := f81 ISUB g37 <INT>
  f81 := g38 <INT>
  DEF g39 := 0 <INT>
  DEF g40 := f81 GE g39 <BOOL>
  g22 := g40 <BOOL>
  GOTO WHILECOND_2_SEQ_0_LEVEL_0_0
  LABEL WHILENEXT_2_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_2_LEVEL_0_0
  DEF RETURN g41 := f76 <INT>
 RETURN FROM Div
 PROC LABEL IntIsZero
  DEF f87 := FALSE <BOOL>
  DEF f88 := 0 <INT>
  DEF f89 := (PARAM f90) IEQ f88 <BOOL>
  DEF f91 := TRUE <BOOL>
  IF f89 BEQ f91
  THEN IFSTAT_1_SEQ_0_LEVEL_0_1
  ELSE IFNEXT_1_SEQ_0_LEVEL_0_1
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_1
  DEF f92 := TRUE <BOOL>
  f87 := f92 <BOOL>
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_1
  DEF f93 := FALSE <BOOL>
  f87 := f93 <BOOL>
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_1_LEVEL_0_0
  LABEL IFEND_1_LEVEL_0_0
  DEF RETURN f94 := f87 <BOOL>
 RETURN FROM IntIsZero
