SYMBOL SECTION
 ENTRY f33 CONST INTERNAL GLOBAL a  <INT>
 ENTRY f35 CONST INTERNAL GLOBAL b  <INT>
 ENTRY f36 INTERNAL GLOBAL result  <REAL>
 ENTRY f37 INTERNAL GLOBAL aAsReal  <REAL>
 ENTRY f38 INTERNAL GLOBAL bAsReal  <REAL>
 ENTRY f39 INTERNAL GLOBAL bRealBinary  <INT>
 ENTRY f40 INTERNAL GLOBAL aRealBinary  <INT>
 ENTRY f41 INTERNAL result IntToReal <REAL>
 ENTRY f42 INTERNAL absN IntToReal <INT>
 ENTRY f43 INTERNAL isNeg IntToReal <BOOL>
 ENTRY f44 INTERNAL intResult IntToReal <INT>
 ENTRY f45 INTERNAL furthestOne IntToReal <INT>
 ENTRY f46 INTERNAL count IntToReal <INT>
 ENTRY f47 INTERNAL tempN IntToReal <INT>
 ENTRY f48 INTERNAL lastBit IntToReal <INT>
 ENTRY f49 INTERNAL fullExponent IntToReal <INT>
 ENTRY f50 INTERNAL exponent IntToReal <INT>
 ENTRY f51 INTERNAL mantissa IntToReal <INT>
 ENTRY f52 INTERNAL mantissaMask IntToReal <INT>
 ENTRY f53 INTERNAL toShiftOver IntToReal <INT>
 ENTRY f54 INTERNAL result Abs <INT>
 ENTRY f57 INTERNAL PARAM n Abs 0 <INT>
 ENTRY f59 INTERNAL result INeg <INT>
 ENTRY f61 INTERNAL PARAM n INeg 0 <INT>
 ENTRY f64 INTERNAL RETURN INeg <INT>
 ENTRY f66 INTERNAL RETURN Abs <INT>
 ENTRY g50 INTERNAL PARAM n IntToReal 0 <INT>
 ENTRY f69 INTERNAL result IntIsNegative <BOOL>
 ENTRY f70 INTERNAL thirtyFirstBit IntIsNegative <INT>
 ENTRY f73 INTERNAL PARAM n IntIsNegative 0 <INT>
 ENTRY f81 INTERNAL RETURN IntIsNegative <BOOL>
 ENTRY f83 INTERNAL result IntIsZero <BOOL>
 ENTRY f86 INTERNAL PARAM n IntIsZero 0 <INT>
 ENTRY f90 INTERNAL RETURN IntIsZero <BOOL>
 ENTRY h84 CONST INTERNAL GLOBAL realBias  <INT>
 ENTRY g44 INTERNAL result IntBinaryAsReal <REAL>
 ENTRY g45 INTERNAL temp IntBinaryAsReal <INT>
 ENTRY g46 INTERNAL RETURN IntBinaryAsReal <REAL>
 ENTRY g49 INTERNAL RETURN IntToReal <REAL>
 ENTRY T3 INTERNAL result RDivide <REAL>
 ENTRY T4 INTERNAL intResult RDivide <INT>
 ENTRY T5 INTERNAL n1Sign RDivide <INT>
 ENTRY T6 INTERNAL n2Sign RDivide <INT>
 ENTRY T7 INTERNAL n1Exp RDivide <INT>
 ENTRY T8 INTERNAL n2Exp RDivide <INT>
 ENTRY T9 INTERNAL n1Base RDivide <INT>
 ENTRY U0 INTERNAL n2Base RDivide <INT>
 ENTRY U1 INTERNAL resultSign RDivide <INT>
 ENTRY U2 INTERNAL resultBase RDivide <INT>
 ENTRY U3 INTERNAL resultExp RDivide <INT>
 ENTRY U4 INTERNAL n2Count RDivide <INT>
 ENTRY U5 INTERNAL n2LastDigit RDivide <INT>
 ENTRY U6 INTERNAL n2TempBase RDivide <INT>
 ENTRY U7 INTERNAL n2FirstOne RDivide <INT>
 ENTRY U8 INTERNAL n2LastOne RDivide <INT>
 ENTRY U9 INTERNAL toShiftExp RDivide <INT>
 ENTRY V0 INTERNAL toShiftBase RDivide <INT>
 ENTRY V1 INTERNAL toShiftBack RDivide <INT>
 ENTRY V2 INTERNAL resultLastOne RDivide <INT>
 ENTRY V3 INTERNAL resultLastDigit RDivide <INT>
 ENTRY V4 INTERNAL count RDivide <INT>
 ENTRY V5 INTERNAL resultTempBase RDivide <INT>
 ENTRY V6 INTERNAL n1DecimalPlace RDivide <INT>
 ENTRY V7 INTERNAL resultDecimalPlace RDivide <INT>
 ENTRY V8 INTERNAL roundIndex RDivide <INT>
 ENTRY V9 INTERNAL afterRound RDivide <INT>
 ENTRY W0 INTERNAL lowBase RDivide <INT>
 ENTRY W1 INTERNAL hiBase RDivide <INT>
 ENTRY W2 INTERNAL lowDiff RDivide <INT>
 ENTRY W3 INTERNAL hiDiff RDivide <INT>
 ENTRY W4 INTERNAL lowBit RDivide <INT>
 ENTRY W5 INTERNAL hiBit RDivide <INT>
 ENTRY W6 INTERNAL resultBitStorage RDivide <INT>
 ENTRY W7 INTERNAL lowBitStorage RDivide <INT>
 ENTRY W8 INTERNAL hiBitStorage RDivide <INT>
 ENTRY g53 INTERNAL addressHolder WriteString <INT>
 ENTRY g54 INTERNAL offsetHolder WriteString <INT>
 ENTRY g55 INTERNAL valueHolder WriteString <INT>
 ENTRY g56 INTERNAL tempHolder WriteString <INT>
 ENTRY g57 INTERNAL result StringAsAddress <INT>
 ENTRY g58 INTERNAL temp StringAsAddress <INT>
 ENTRY g59 INTERNAL PARAM s StringAsAddress 0 <STRING>
 ENTRY g60 INTERNAL RETURN StringAsAddress <INT>
 ENTRY g70 INTERNAL PARAM s WriteString 0 <STRING>
 ENTRY g71 INTERNAL result RealSign <INT>
 ENTRY g72 INTERNAL realAsInteger RealSign <INT>
 ENTRY g73 INTERNAL result RealBinaryAsInt <INT>
 ENTRY g74 INTERNAL temp RealBinaryAsInt <REAL>
 ENTRY g75 INTERNAL PARAM r RealBinaryAsInt 0 <REAL>
 ENTRY g76 INTERNAL RETURN RealBinaryAsInt <INT>
 ENTRY g83 INTERNAL PARAM r RealSign 0 <REAL>
 ENTRY g82 INTERNAL RETURN RealSign <INT>
 ENTRY h86 INTERNAL PARAM n1 RDivide 0 <REAL>
 ENTRY g84 INTERNAL tempReg WriteInt <INT>
 ENTRY g85 INTERNAL PARAM i WriteInt 0 <INT>
 ENTRY h87 INTERNAL PARAM n2 RDivide 1 <REAL>
 ENTRY g86 INTERNAL result RealExponent <INT>
 ENTRY g87 INTERNAL realAsInteger RealExponent <INT>
 ENTRY g88 INTERNAL exponent RealExponent <INT>
 ENTRY g98 INTERNAL PARAM r RealExponent 0 <REAL>
 ENTRY g97 INTERNAL RETURN RealExponent <INT>
 ENTRY g99 INTERNAL result RealMantissa <INT>
 ENTRY h10 INTERNAL realAsInt RealMantissa <INT>
 ENTRY h11 INTERNAL significand RealMantissa <INT>
 ENTRY h12 INTERNAL exp RealMantissa <INT>
 ENTRY h34 INTERNAL PARAM r RealMantissa 0 <REAL>
 ENTRY h16 INTERNAL result RealIsZero <BOOL>
 ENTRY h17 INTERNAL val RealIsZero <INT>
 ENTRY h18 INTERNAL exp RealIsZero <INT>
 ENTRY h28 INTERNAL PARAM r RealIsZero 0 <REAL>
 ENTRY h27 INTERNAL RETURN RealIsZero <BOOL>
 ENTRY h33 INTERNAL RETURN RealMantissa <INT>
 ENTRY h35 INTERNAL total Div <INT>
 ENTRY h36 INTERNAL result Div <INT>
 ENTRY h37 INTERNAL tempDividend Div <INT>
 ENTRY h38 INTERNAL dividendLastOne Div <INT>
 ENTRY h39 INTERNAL dividendLastDigit Div <INT>
 ENTRY h40 INTERNAL dividendCount Div <INT>
 ENTRY h41 INTERNAL dividendIndex Div <INT>
 ENTRY h42 INTERNAL bitAtIndex Div <INT>
 ENTRY h43 INTERNAL remainder Div <INT>
 ENTRY h44 INTERNAL PARAM dividend Div 0 <INT>
 ENTRY h73 INTERNAL PARAM divisor Div 1 <INT>
 ENTRY h83 INTERNAL RETURN Div <INT>
 ENTRY h85 INTERNAL RETURN RDivide <REAL>
 ENTRY h90 INTERNAL tempReg WriteReal <INT>
 ENTRY h91 INTERNAL PARAM r WriteReal 0 <REAL>
DATA SECTION
 DEF f32 := 355 <INT>
 DEF GLOBAL f33 := f32 <INT>
 DEF f34 := 113 <INT>
 DEF GLOBAL f35 := f34 <INT>
 DEF g31 := 127 <INT>
 DEF GLOBAL h84 := g31 <INT>
BSS SECTION
 DEF GLOBAL f36 := 0.0 <REAL>
 DEF GLOBAL f37 := 0.0 <REAL>
 DEF GLOBAL f38 := 0.0 <REAL>
 DEF GLOBAL f39 := 0 <INT>
 DEF GLOBAL f40 := 0 <INT>
CODE SECTION
 CALL IntToReal([(GLOBAL f33) -> g50]<INT>) FROM CODE SECTION
 DEF g51 := (RETURN g49) <REAL>
 GLOBAL f37 := g51 <REAL>
 CALL IntToReal([(GLOBAL f35) -> g50]<INT>) FROM GLOBAL f37 := g51 <REAL>
 DEF g52 := (RETURN g49) <REAL>
 GLOBAL f38 := g52 <REAL>
 CALL RDivide([(GLOBAL f37) -> h86]<REAL>, [(GLOBAL f38) -> h87]<REAL>) FROM GLOBAL f38 := g52 <REAL>
 DEF h88 := (RETURN h85) <REAL>
 GLOBAL f36 := h88 <REAL>
 DEF h89 := "Result as real: " <STRING>
 CALL WriteString([h89 -> g70]<STRING>) FROM DEF h89 := "Result as real: " <STRING>
 CALL WriteReal([(GLOBAL f36) -> h91]<REAL>) FROM CALL WriteString([h89 -> g70]<STRING>) FROM DEF h89 := "Result as real: " <STRING>
 CALL WriteLn() FROM CALL WriteReal([(GLOBAL f36) -> h91]<REAL>) FROM CALL WriteString([h89 -> g70]<STRING>) FROM DEF h89 := "Result as real: " <STRING>
END
PROC SECTION
 PROC LABEL IntToReal
  DEF f41 := 0.0 <REAL>
  DEF f42 := 0 <INT>
  DEF f43 := FALSE <BOOL>
  DEF f44 := 0 <INT>
  DEF f45 := 0 <INT>
  DEF f46 := 0 <INT>
  DEF f47 := 0 <INT>
  DEF f48 := 0 <INT>
  DEF f49 := 0 <INT>
  DEF f50 := 0 <INT>
  DEF f51 := 0 <INT>
  DEF f52 := 0 <INT>
  DEF f53 := 0 <INT>
  CALL Abs([(PARAM g50) -> f57]<INT>) FROM DEF f53 := 0 <INT>
  DEF f67 := (RETURN f66) <INT>
  f42 := f67 <INT>
  f47 := f42 <INT>
  DEF f68 := 0 <INT>
  f46 := f68 <INT>
  CALL IntIsNegative([(PARAM g50) -> f73]<INT>) FROM f46 := f68 <INT>
  DEF f82 := (RETURN f81) <BOOL>
  f43 := f82 <BOOL>
  CALL IntIsZero([f47 -> f86]<INT>) FROM f43 := f82 <BOOL>
  DEF f91 := (RETURN f90) <BOOL>
  DEF f92 := TRUE <BOOL>
  IF f91 BEQ f92
  THEN IFSTAT_0_SEQ_0_LEVEL_0_1
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_1
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_1
  DEF f93 := 0 <INT>
  f44 := f93 <INT>
  GOTO IFEND_0_LEVEL_0_1 FROM f44 := f93 <INT>
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_1
  CALL IntIsZero([f47 -> f86]<INT>) FROM LABEL IFNEXT_0_SEQ_0_LEVEL_0_1
  DEF f94 := (RETURN f90) <BOOL>
  DEF f95 := BNOT f94 <BOOL>
  DEF f96 := TRUE <BOOL>
  IF f95 BEQ f96
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_0
  ELSE WHILENEXT_0_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_0_SEQ_0_LEVEL_0_0
  IF f95 BEQ f96
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_0
  ELSE WHILEEND_0_LEVEL_0_0
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0_0
  DEF f97 := 1 <INT>
  DEF f98 := f47 IAND f97 <INT>
  f48 := f98 <INT>
  DEF f99 := 1 <INT>
  DEF g10 := f48 IEQ f99 <BOOL>
  DEF g11 := TRUE <BOOL>
  IF g10 BEQ g11
  THEN IFSTAT_1_SEQ_0_LEVEL_1
  ELSE IFNEXT_1_SEQ_0_LEVEL_1
  LABEL IFSTAT_1_SEQ_0_LEVEL_1
  f45 := f46 <INT>
  GOTO IFEND_1_LEVEL_1 FROM f45 := f46 <INT>
  LABEL IFNEXT_1_SEQ_0_LEVEL_1
  LABEL IFEND_1_LEVEL_1
  DEF g12 := 1 <INT>
  DEF g13 := f46 IADD g12 <INT>
  f46 := g13 <INT>
  DEF g14 := 1 <INT>
  DEF g15 := f47 IRSHIFT g14 <INT>
  f47 := g15 <INT>
  CALL IntIsZero([f47 -> f86]<INT>) FROM f47 := g15 <INT>
  DEF g16 := (RETURN f90) <BOOL>
  DEF g17 := BNOT g16 <BOOL>
  f95 := g17 <BOOL>
  GOTO WHILECOND_0_SEQ_0_LEVEL_0_0 FROM f95 := g17 <BOOL>
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_0_LEVEL_0_0
  DEF g18 := 23 <INT>
  DEF g19 := f45 GT g18 <BOOL>
  DEF g20 := TRUE <BOOL>
  IF g19 BEQ g20
  THEN IFSTAT_2_SEQ_0_LEVEL_1_0
  ELSE IFNEXT_2_SEQ_0_LEVEL_1_0
  LABEL IFSTAT_2_SEQ_0_LEVEL_1_0
  DEF g21 := 23 <INT>
  DEF g22 := f45 ISUB g21 <INT>
  DEF g23 := f42 IRSHIFT g22 <INT>
  f42 := g23 <INT>
  GOTO IFEND_2_LEVEL_1_0 FROM f42 := g23 <INT>
  LABEL IFNEXT_2_SEQ_0_LEVEL_1_0
  DEF g24 := 23 <INT>
  DEF g25 := f45 LT g24 <BOOL>
  DEF g26 := TRUE <BOOL>
  IF g25 BEQ g26
  THEN IFSTAT_2_SEQ_1_LEVEL_1_0
  ELSE IFNEXT_2_SEQ_1_LEVEL_1_0
  LABEL IFSTAT_2_SEQ_1_LEVEL_1_0
  DEF g27 := 23 <INT>
  DEF g28 := g27 ISUB f45 <INT>
  DEF g29 := f42 ILSHIFT g28 <INT>
  f42 := g29 <INT>
  GOTO IFEND_2_LEVEL_1_0 FROM f42 := g29 <INT>
  LABEL IFNEXT_2_SEQ_1_LEVEL_1_0
  LABEL IFEND_2_LEVEL_1_0
  DEF g30 := f45 IADD (GLOBAL h84) <INT>
  f50 := g30 <INT>
  DEF g34 := 8388607 <INT>
  f52 := g34 <INT>
  DEF g35 := f42 IAND f52 <INT>
  f51 := g35 <INT>
  f44 := f51 <INT>
  DEF g36 := 23 <INT>
  DEF g37 := f50 ILSHIFT g36 <INT>
  DEF g38 := f44 IOR g37 <INT>
  f44 := g38 <INT>
  DEF g39 := TRUE <BOOL>
  IF f43 BEQ g39
  THEN IFSTAT_3_SEQ_0_LEVEL_1
  ELSE IFNEXT_3_SEQ_0_LEVEL_1
  LABEL IFSTAT_3_SEQ_0_LEVEL_1
  DEF g40 := 1 <INT>
  DEF g41 := 31 <INT>
  DEF g42 := g40 ILSHIFT g41 <INT>
  DEF g43 := f44 IOR g42 <INT>
  f44 := g43 <INT>
  GOTO IFEND_3_LEVEL_1 FROM f44 := g43 <INT>
  LABEL IFNEXT_3_SEQ_0_LEVEL_1
  LABEL IFEND_3_LEVEL_1
  GOTO IFEND_0_LEVEL_0_1 FROM LABEL IFEND_3_LEVEL_1
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_1
  LABEL IFEND_0_LEVEL_0_1
  CALL IntBinaryAsReal([f44 -> g47]<INT>) FROM LABEL IFEND_0_LEVEL_0_1
  DEF g48 := (RETURN g46) <REAL>
  f41 := g48 <REAL>
  DEF RETURN g49 := f41 <REAL>
 RETURN FROM IntToReal
 PROC LABEL Abs
  DEF f54 := 0 <INT>
  DEF f55 := 0 <INT>
  DEF f56 := (PARAM f57) GE f55 <BOOL>
  DEF f58 := TRUE <BOOL>
  IF f56 BEQ f58
  THEN IFSTAT_0_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_0
  f54 := (PARAM f57) <INT>
  GOTO IFEND_0_LEVEL_0_0 FROM f54 := (PARAM f57) <INT>
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_0
  CALL INeg([(PARAM f57) -> f61]<INT>) FROM LABEL IFNEXT_0_SEQ_0_LEVEL_0_0
  DEF f65 := (RETURN f64) <INT>
  f54 := f65 <INT>
  GOTO IFEND_0_LEVEL_0_0 FROM f54 := f65 <INT>
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_0
  LABEL IFEND_0_LEVEL_0_0
  DEF RETURN f66 := f54 <INT>
 RETURN FROM Abs
 PROC LABEL INeg
  DEF f59 := 0 <INT>
  DEF f60 := INOT (PARAM f61) <INT>
  DEF f62 := 1 <INT>
  DEF f63 := f60 IADD f62 <INT>
  f59 := f63 <INT>
  DEF RETURN f64 := f59 <INT>
 RETURN FROM INeg
 PROC LABEL IntIsNegative
  DEF f69 := FALSE <BOOL>
  DEF f70 := 0 <INT>
  DEF f71 := 31 <INT>
  DEF f72 := (PARAM f73) IRSHIFT f71 <INT>
  DEF f74 := 1 <INT>
  DEF f75 := f72 IAND f74 <INT>
  f70 := f75 <INT>
  DEF f76 := 0 <INT>
  DEF f77 := f70 IEQ f76 <BOOL>
  DEF f78 := TRUE <BOOL>
  IF f77 BEQ f78
  THEN IFSTAT_2_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_2_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_2_SEQ_0_LEVEL_0_0
  DEF f79 := FALSE <BOOL>
  f69 := f79 <BOOL>
  GOTO IFEND_2_LEVEL_0_0 FROM f69 := f79 <BOOL>
  LABEL IFNEXT_2_SEQ_0_LEVEL_0_0
  DEF f80 := TRUE <BOOL>
  f69 := f80 <BOOL>
  GOTO IFEND_2_LEVEL_0_0 FROM f69 := f80 <BOOL>
  LABEL IFNEXT_2_SEQ_1_LEVEL_0_0
  LABEL IFEND_2_LEVEL_0_0
  DEF RETURN f81 := f69 <BOOL>
 RETURN FROM IntIsNegative
 PROC LABEL IntIsZero
  DEF f83 := FALSE <BOOL>
  DEF f84 := 0 <INT>
  DEF f85 := (PARAM f86) IEQ f84 <BOOL>
  DEF f87 := TRUE <BOOL>
  IF f85 BEQ f87
  THEN IFSTAT_1_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_1_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_0
  DEF f88 := TRUE <BOOL>
  f83 := f88 <BOOL>
  GOTO IFEND_1_LEVEL_0_0 FROM f83 := f88 <BOOL>
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_0
  DEF f89 := FALSE <BOOL>
  f83 := f89 <BOOL>
  GOTO IFEND_1_LEVEL_0_0 FROM f83 := f89 <BOOL>
  LABEL IFNEXT_1_SEQ_1_LEVEL_0_0
  LABEL IFEND_1_LEVEL_0_0
  DEF RETURN f90 := f83 <BOOL>
 RETURN FROM IntIsZero
 PROC LABEL IntBinaryAsReal
  DEF g44 := 0.0 <REAL>
  DEF g45 := 0 <INT>
  IPARAM g45
  IPARAM (PARAM g47)
  IASM "LDR %r, %a"
  IPARAM g45
  IPARAM g44
  IASM "STR %r, %a"
  DEF RETURN g46 := g44 <REAL>
 RETURN FROM IntBinaryAsReal
 PROC LABEL RDivide
  DEF T3 := 0.0 <REAL>
  DEF T4 := 0 <INT>
  DEF T5 := 0 <INT>
  DEF T6 := 0 <INT>
  DEF T7 := 0 <INT>
  DEF T8 := 0 <INT>
  DEF T9 := 0 <INT>
  DEF U0 := 0 <INT>
  DEF U1 := 0 <INT>
  DEF U2 := 0 <INT>
  DEF U3 := 0 <INT>
  DEF U4 := 0 <INT>
  DEF U5 := 0 <INT>
  DEF U6 := 0 <INT>
  DEF U7 := 0 <INT>
  DEF U8 := 0 <INT>
  DEF U9 := 0 <INT>
  DEF V0 := 0 <INT>
  DEF V1 := 0 <INT>
  DEF V2 := 0 <INT>
  DEF V3 := 0 <INT>
  DEF V4 := 0 <INT>
  DEF V5 := 0 <INT>
  DEF V6 := 0 <INT>
  DEF V7 := 0 <INT>
  DEF V8 := 0 <INT>
  DEF V9 := 0 <INT>
  DEF W0 := 0 <INT>
  DEF W1 := 0 <INT>
  DEF W2 := 0 <INT>
  DEF W3 := 0 <INT>
  DEF W4 := 0 <INT>
  DEF W5 := 0 <INT>
  DEF W6 := 0 <INT>
  DEF W7 := 0 <INT>
  DEF W8 := 0 <INT>
  DEF W9 := "n1SignIs: " <STRING>
  CALL WriteString([W9 -> g70]<STRING>) FROM DEF W9 := "n1SignIs: " <STRING>
  CALL RealSign([(PARAM h86) -> g83]<REAL>) FROM CALL WriteString([W9 -> g70]<STRING>) FROM DEF W9 := "n1SignIs: " <STRING>
  DEF X1 := (RETURN g82) <INT>
  T5 := X1 <INT>
  CALL WriteInt([T5 -> g85]<INT>) FROM T5 := X1 <INT>
  CALL WriteLn() FROM CALL WriteInt([T5 -> g85]<INT>) FROM T5 := X1 <INT>
  DEF X3 := "n2SignIs: " <STRING>
  CALL WriteString([X3 -> g70]<STRING>) FROM DEF X3 := "n2SignIs: " <STRING>
  CALL RealSign([(PARAM h87) -> g83]<REAL>) FROM CALL WriteString([X3 -> g70]<STRING>) FROM DEF X3 := "n2SignIs: " <STRING>
  DEF X4 := (RETURN g82) <INT>
  T6 := X4 <INT>
  CALL WriteInt([T6 -> g85]<INT>) FROM T6 := X4 <INT>
  CALL WriteLn() FROM CALL WriteInt([T6 -> g85]<INT>) FROM T6 := X4 <INT>
  DEF X5 := "n1ExponentIs: " <STRING>
  CALL WriteString([X5 -> g70]<STRING>) FROM DEF X5 := "n1ExponentIs: " <STRING>
  CALL RealExponent([(PARAM h86) -> g98]<REAL>) FROM CALL WriteString([X5 -> g70]<STRING>) FROM DEF X5 := "n1ExponentIs: " <STRING>
  DEF X6 := (RETURN g97) <INT>
  T7 := X6 <INT>
  CALL WriteInt([T7 -> g85]<INT>) FROM T7 := X6 <INT>
  CALL WriteLn() FROM CALL WriteInt([T7 -> g85]<INT>) FROM T7 := X6 <INT>
  DEF X7 := "n2ExpIs: " <STRING>
  CALL WriteString([X7 -> g70]<STRING>) FROM DEF X7 := "n2ExpIs: " <STRING>
  CALL RealExponent([(PARAM h87) -> g98]<REAL>) FROM CALL WriteString([X7 -> g70]<STRING>) FROM DEF X7 := "n2ExpIs: " <STRING>
  DEF X8 := (RETURN g97) <INT>
  T8 := X8 <INT>
  CALL WriteInt([T8 -> g85]<INT>) FROM T8 := X8 <INT>
  CALL WriteLn() FROM CALL WriteInt([T8 -> g85]<INT>) FROM T8 := X8 <INT>
  DEF X9 := "n1Base is: " <STRING>
  CALL WriteString([X9 -> g70]<STRING>) FROM DEF X9 := "n1Base is: " <STRING>
  CALL RealMantissa([(PARAM h86) -> h34]<REAL>) FROM CALL WriteString([X9 -> g70]<STRING>) FROM DEF X9 := "n1Base is: " <STRING>
  DEF Y0 := (RETURN h33) <INT>
  T9 := Y0 <INT>
  CALL WriteInt([T9 -> g85]<INT>) FROM T9 := Y0 <INT>
  CALL WriteLn() FROM CALL WriteInt([T9 -> g85]<INT>) FROM T9 := Y0 <INT>
  DEF Y1 := "n2BaseIs: " <STRING>
  CALL WriteString([Y1 -> g70]<STRING>) FROM DEF Y1 := "n2BaseIs: " <STRING>
  CALL RealMantissa([(PARAM h87) -> h34]<REAL>) FROM CALL WriteString([Y1 -> g70]<STRING>) FROM DEF Y1 := "n2BaseIs: " <STRING>
  DEF Y2 := (RETURN h33) <INT>
  U0 := Y2 <INT>
  CALL WriteLn() FROM U0 := Y2 <INT>
  CALL WriteInt([U0 -> g85]<INT>) FROM CALL WriteLn() FROM U0 := Y2 <INT>
  CALL IntIsZero([T9 -> f86]<INT>) FROM CALL WriteInt([U0 -> g85]<INT>) FROM CALL WriteLn() FROM U0 := Y2 <INT>
  DEF Y3 := (RETURN f90) <BOOL>
  CALL IntIsZero([U0 -> f86]<INT>) FROM DEF Y3 := (RETURN f90) <BOOL>
  DEF Y4 := (RETURN f90) <BOOL>
  DEF Y5 := Y3 LAND Y4 <BOOL>
  DEF Y6 := TRUE <BOOL>
  IF Y5 BEQ Y6
  THEN IFSTAT_30_SEQ_0_LEVEL_0
  ELSE IFNEXT_30_SEQ_0_LEVEL_0
  LABEL IFSTAT_30_SEQ_0_LEVEL_0
  DEF Y7 := 1065353216 <INT>
  T4 := Y7 <INT>
  GOTO IFEND_30_LEVEL_0 FROM T4 := Y7 <INT>
  LABEL IFNEXT_30_SEQ_0_LEVEL_0
  CALL IntIsZero([T9 -> f86]<INT>) FROM LABEL IFNEXT_30_SEQ_0_LEVEL_0
  DEF Y8 := (RETURN f90) <BOOL>
  DEF Y9 := BNOT Y8 <BOOL>
  CALL IntIsZero([U0 -> f86]<INT>) FROM DEF Y9 := BNOT Y8 <BOOL>
  DEF Z0 := (RETURN f90) <BOOL>
  DEF Z1 := Y9 LAND Z0 <BOOL>
  DEF Z2 := TRUE <BOOL>
  IF Z1 BEQ Z2
  THEN IFSTAT_30_SEQ_1_LEVEL_0
  ELSE IFNEXT_30_SEQ_1_LEVEL_0
  LABEL IFSTAT_30_SEQ_1_LEVEL_0
  DEF Z3 := 2139095040 <INT>
  T4 := Z3 <INT>
  GOTO IFEND_30_LEVEL_0 FROM T4 := Z3 <INT>
  LABEL IFNEXT_30_SEQ_1_LEVEL_0
  CALL IntIsZero([T9 -> f86]<INT>) FROM LABEL IFNEXT_30_SEQ_1_LEVEL_0
  DEF Z4 := (RETURN f90) <BOOL>
  CALL IntIsZero([U0 -> f86]<INT>) FROM DEF Z4 := (RETURN f90) <BOOL>
  DEF Z5 := (RETURN f90) <BOOL>
  DEF Z6 := BNOT Z5 <BOOL>
  DEF Z7 := Z4 LAND Z6 <BOOL>
  DEF Z8 := TRUE <BOOL>
  IF Z7 BEQ Z8
  THEN IFSTAT_30_SEQ_2_LEVEL_0
  ELSE IFNEXT_30_SEQ_2_LEVEL_0
  LABEL IFSTAT_30_SEQ_2_LEVEL_0
  DEF Z9 := 0 <INT>
  T4 := Z9 <INT>
  GOTO IFEND_30_LEVEL_0 FROM T4 := Z9 <INT>
  LABEL IFNEXT_30_SEQ_2_LEVEL_0
  DEF a10 := 30 <INT>
  DEF a11 := 23 <INT>
  DEF a12 := a10 ISUB a11 <INT>
  V0 := a12 <INT>
  DEF a13 := T9 ILSHIFT V0 <INT>
  T9 := a13 <INT>
  DEF a14 := 0 <INT>
  U4 := a14 <INT>
  U6 := U0 <INT>
  DEF a15 := 1 <INT>
  DEF a16 := U6 IAND a15 <INT>
  DEF a17 := 0 <INT>
  DEF a18 := a16 IEQ a17 <BOOL>
  DEF a19 := TRUE <BOOL>
  IF a18 BEQ a19
  THEN WHILESTAT_18_SEQ_0_LEVEL_0
  ELSE WHILENEXT_18_SEQ_0_LEVEL_0
  LABEL WHILECOND_18_SEQ_0_LEVEL_0
  IF a18 BEQ a19
  THEN WHILESTAT_18_SEQ_0_LEVEL_0
  ELSE WHILEEND_18_LEVEL_0
  LABEL WHILESTAT_18_SEQ_0_LEVEL_0
  DEF a20 := 1 <INT>
  DEF a21 := U6 IRSHIFT a20 <INT>
  U6 := a21 <INT>
  DEF a22 := 1 <INT>
  DEF a23 := U4 IADD a22 <INT>
  U4 := a23 <INT>
  DEF a24 := 1 <INT>
  DEF a25 := U6 IAND a24 <INT>
  DEF a26 := 0 <INT>
  DEF a27 := a25 IEQ a26 <BOOL>
  a18 := a27 <BOOL>
  GOTO WHILECOND_18_SEQ_0_LEVEL_0 FROM a18 := a27 <BOOL>
  LABEL WHILENEXT_18_SEQ_0_LEVEL_0
  LABEL WHILEEND_18_LEVEL_0
  U7 := U4 <INT>
  V0 := U7 <INT>
  DEF a28 := U0 IRSHIFT V0 <INT>
  U0 := a28 <INT>
  DEF a29 := 0 <INT>
  U4 := a29 <INT>
  U6 := U0 <INT>
  CALL IntIsZero([U6 -> f86]<INT>) FROM U6 := U0 <INT>
  DEF a30 := (RETURN f90) <BOOL>
  DEF a31 := BNOT a30 <BOOL>
  DEF a32 := TRUE <BOOL>
  IF a31 BEQ a32
  THEN WHILESTAT_20_SEQ_0_LEVEL_0
  ELSE WHILENEXT_20_SEQ_0_LEVEL_0
  LABEL WHILECOND_20_SEQ_0_LEVEL_0
  IF a31 BEQ a32
  THEN WHILESTAT_20_SEQ_0_LEVEL_0
  ELSE WHILEEND_20_LEVEL_0
  LABEL WHILESTAT_20_SEQ_0_LEVEL_0
  DEF a33 := 1 <INT>
  DEF a34 := U6 IAND a33 <INT>
  U5 := a34 <INT>
  DEF a35 := 1 <INT>
  DEF a36 := U5 IEQ a35 <BOOL>
  DEF a37 := TRUE <BOOL>
  IF a36 BEQ a37
  THEN IFSTAT_31_SEQ_0_LEVEL_1
  ELSE IFNEXT_31_SEQ_0_LEVEL_1
  LABEL IFSTAT_31_SEQ_0_LEVEL_1
  U8 := U4 <INT>
  GOTO IFEND_31_LEVEL_1 FROM U8 := U4 <INT>
  LABEL IFNEXT_31_SEQ_0_LEVEL_1
  LABEL IFEND_31_LEVEL_1
  DEF a38 := 1 <INT>
  DEF a39 := U4 IADD a38 <INT>
  U4 := a39 <INT>
  DEF a40 := 1 <INT>
  DEF a41 := U6 IRSHIFT a40 <INT>
  U6 := a41 <INT>
  CALL IntIsZero([U6 -> f86]<INT>) FROM U6 := a41 <INT>
  DEF a42 := (RETURN f90) <BOOL>
  DEF a43 := BNOT a42 <BOOL>
  a31 := a43 <BOOL>
  GOTO WHILECOND_20_SEQ_0_LEVEL_0 FROM a31 := a43 <BOOL>
  LABEL WHILENEXT_20_SEQ_0_LEVEL_0
  LABEL WHILEEND_20_LEVEL_0
  U9 := U8 <INT>
  DEF a44 := T7 ISUB U9 <INT>
  T7 := a44 <INT>
  DEF a45 := T8 ISUB U9 <INT>
  T8 := a45 <INT>
  DEF a46 := 30 <INT>
  DEF a47 := a46 ISUB U9 <INT>
  V6 := a47 <INT>
  V7 := V6 <INT>
  DEF a48 := T5 INE T6 <BOOL>
  DEF a49 := TRUE <BOOL>
  IF a48 BEQ a49
  THEN IFSTAT_32_SEQ_0_LEVEL_1
  ELSE IFNEXT_32_SEQ_0_LEVEL_1
  LABEL IFSTAT_32_SEQ_0_LEVEL_1
  DEF a50 := 1 <INT>
  U1 := a50 <INT>
  GOTO IFEND_32_LEVEL_1 FROM U1 := a50 <INT>
  LABEL IFNEXT_32_SEQ_0_LEVEL_1
  DEF a51 := 0 <INT>
  U1 := a51 <INT>
  GOTO IFEND_32_LEVEL_1 FROM U1 := a51 <INT>
  LABEL IFNEXT_32_SEQ_1_LEVEL_1
  LABEL IFEND_32_LEVEL_1
  DEF a52 := T7 ISUB T8 <INT>
  U3 := a52 <INT>
  CALL Div([T9 -> h44]<INT>, [U0 -> h73]<INT>) FROM U3 := a52 <INT>
  DEF a56 := (RETURN h83) <INT>
  U2 := a56 <INT>
  DEF a57 := 23 <INT>
  DEF a58 := V7 GT a57 <BOOL>
  DEF a59 := TRUE <BOOL>
  IF a58 BEQ a59
  THEN IFSTAT_33_SEQ_0_LEVEL_1
  ELSE IFNEXT_33_SEQ_0_LEVEL_1
  LABEL IFSTAT_33_SEQ_0_LEVEL_1
  DEF a60 := 23 <INT>
  DEF a61 := V7 ISUB a60 <INT>
  V1 := a61 <INT>
  DEF a62 := 1 <INT>
  DEF a63 := a62 ILSHIFT V1 <INT>
  DEF a64 := 1 <INT>
  DEF a65 := a63 ISUB a64 <INT>
  DEF a66 := U2 IAND a65 <INT>
  W6 := a66 <INT>
  DEF a67 := U2 IRSHIFT V1 <INT>
  U2 := a67 <INT>
  GOTO IFEND_33_LEVEL_1 FROM U2 := a67 <INT>
  LABEL IFNEXT_33_SEQ_0_LEVEL_1
  DEF a68 := 23 <INT>
  DEF a69 := V7 LT a68 <BOOL>
  DEF a70 := TRUE <BOOL>
  IF a69 BEQ a70
  THEN IFSTAT_33_SEQ_1_LEVEL_1
  ELSE IFNEXT_33_SEQ_1_LEVEL_1
  LABEL IFSTAT_33_SEQ_1_LEVEL_1
  DEF a71 := 23 <INT>
  DEF a72 := a71 ISUB V7 <INT>
  V1 := a72 <INT>
  DEF a73 := U2 ILSHIFT V1 <INT>
  U2 := a73 <INT>
  DEF a74 := 0 <INT>
  W6 := a74 <INT>
  GOTO IFEND_33_LEVEL_1 FROM W6 := a74 <INT>
  LABEL IFNEXT_33_SEQ_1_LEVEL_1
  LABEL IFEND_33_LEVEL_1
  DEF a75 := 0 <INT>
  V4 := a75 <INT>
  V5 := U2 <INT>
  DEF a76 := 0 <INT>
  V2 := a76 <INT>
  CALL IntIsZero([V5 -> f86]<INT>) FROM V2 := a76 <INT>
  DEF a77 := (RETURN f90) <BOOL>
  DEF a78 := BNOT a77 <BOOL>
  DEF a79 := TRUE <BOOL>
  IF a78 BEQ a79
  THEN WHILESTAT_22_SEQ_0_LEVEL_0
  ELSE WHILENEXT_22_SEQ_0_LEVEL_0
  LABEL WHILECOND_22_SEQ_0_LEVEL_0
  IF a78 BEQ a79
  THEN WHILESTAT_22_SEQ_0_LEVEL_0
  ELSE WHILEEND_22_LEVEL_0
  LABEL WHILESTAT_22_SEQ_0_LEVEL_0
  DEF a80 := 1 <INT>
  DEF a81 := V5 IAND a80 <INT>
  V3 := a81 <INT>
  DEF a82 := 1 <INT>
  DEF a83 := V3 IEQ a82 <BOOL>
  DEF a84 := TRUE <BOOL>
  IF a83 BEQ a84
  THEN IFSTAT_34_SEQ_0_LEVEL_1
  ELSE IFNEXT_34_SEQ_0_LEVEL_1
  LABEL IFSTAT_34_SEQ_0_LEVEL_1
  V2 := V4 <INT>
  GOTO IFEND_34_LEVEL_1 FROM V2 := V4 <INT>
  LABEL IFNEXT_34_SEQ_0_LEVEL_1
  LABEL IFEND_34_LEVEL_1
  DEF a85 := 1 <INT>
  DEF a86 := V4 IADD a85 <INT>
  V4 := a86 <INT>
  DEF a87 := 1 <INT>
  DEF a88 := V5 IRSHIFT a87 <INT>
  V5 := a88 <INT>
  CALL IntIsZero([V5 -> f86]<INT>) FROM V5 := a88 <INT>
  DEF a89 := (RETURN f90) <BOOL>
  DEF a90 := BNOT a89 <BOOL>
  a78 := a90 <BOOL>
  GOTO WHILECOND_22_SEQ_0_LEVEL_0 FROM a78 := a90 <BOOL>
  LABEL WHILENEXT_22_SEQ_0_LEVEL_0
  LABEL WHILEEND_22_LEVEL_0
  DEF a91 := 23 <INT>
  DEF a92 := V2 LT a91 <BOOL>
  DEF a93 := TRUE <BOOL>
  IF a92 BEQ a93
  THEN IFSTAT_35_SEQ_0_LEVEL_1
  ELSE IFNEXT_35_SEQ_0_LEVEL_1
  LABEL IFSTAT_35_SEQ_0_LEVEL_1
  DEF a94 := 23 <INT>
  DEF a95 := a94 ISUB V2 <INT>
  V0 := a95 <INT>
  DEF a96 := U2 ILSHIFT V0 <INT>
  U2 := a96 <INT>
  DEF a97 := V1 ISUB V0 <INT>
  DEF a98 := W6 IRSHIFT a97 <INT>
  DEF a99 := U2 IOR a98 <INT>
  U2 := a99 <INT>
  DEF b10 := U3 ISUB V0 <INT>
  U3 := b10 <INT>
  GOTO IFEND_35_LEVEL_1 FROM U3 := b10 <INT>
  LABEL IFNEXT_35_SEQ_0_LEVEL_1
  LABEL IFEND_35_LEVEL_1
  DEF b11 := 1 <INT>
  DEF b12 := U2 IADD b11 <INT>
  W1 := b12 <INT>
  DEF b13 := 0 <INT>
  W8 := b13 <INT>
  W0 := U2 <INT>
  DEF b14 := 0 <INT>
  W7 := b14 <INT>
  DEF b15 := 1 <INT>
  DEF b16 := V1 ISUB b15 <INT>
  DEF b17 := W6 IRSHIFT b16 <INT>
  V2 := b17 <INT>
  DEF b18 := 1 <INT>
  DEF b19 := V2 IEQ b18 <BOOL>
  DEF b20 := TRUE <BOOL>
  IF b19 BEQ b20
  THEN IFSTAT_36_SEQ_0_LEVEL_1
  ELSE IFNEXT_36_SEQ_0_LEVEL_1
  LABEL IFSTAT_36_SEQ_0_LEVEL_1
  U2 := W1 <INT>
  W6 := W8 <INT>
  GOTO IFEND_36_LEVEL_1 FROM W6 := W8 <INT>
  LABEL IFNEXT_36_SEQ_0_LEVEL_1
  DEF b21 := W2 GT W3 <BOOL>
  DEF b22 := TRUE <BOOL>
  IF b21 BEQ b22
  THEN IFSTAT_36_SEQ_1_LEVEL_1
  ELSE IFNEXT_36_SEQ_1_LEVEL_1
  LABEL IFSTAT_36_SEQ_1_LEVEL_1
  U2 := W0 <INT>
  W6 := W7 <INT>
  GOTO IFEND_36_LEVEL_1 FROM W6 := W7 <INT>
  LABEL IFNEXT_36_SEQ_1_LEVEL_1
  DEF b23 := 1 <INT>
  DEF b24 := W0 IAND b23 <INT>
  W4 := b24 <INT>
  DEF b25 := 1 <INT>
  DEF b26 := W1 IAND b25 <INT>
  W5 := b26 <INT>
  DEF b27 := 0 <INT>
  DEF b28 := W5 IEQ b27 <BOOL>
  DEF b29 := TRUE <BOOL>
  IF b28 BEQ b29
  THEN IFSTAT_37_SEQ_0_LEVEL_2
  ELSE IFNEXT_37_SEQ_0_LEVEL_2
  LABEL IFSTAT_37_SEQ_0_LEVEL_2
  U2 := W1 <INT>
  W6 := W8 <INT>
  GOTO IFEND_37_LEVEL_2 FROM W6 := W8 <INT>
  LABEL IFNEXT_37_SEQ_0_LEVEL_2
  U2 := W0 <INT>
  W6 := W7 <INT>
  GOTO IFEND_37_LEVEL_2 FROM W6 := W7 <INT>
  LABEL IFNEXT_37_SEQ_1_LEVEL_2
  LABEL IFEND_37_LEVEL_2
  GOTO IFEND_36_LEVEL_1 FROM LABEL IFEND_37_LEVEL_2
  LABEL IFNEXT_36_SEQ_2_LEVEL_1
  LABEL IFEND_36_LEVEL_1
  DEF b30 := U3 IADD (GLOBAL h84) <INT>
  U3 := b30 <INT>
  DEF b31 := 255 <INT>
  DEF b32 := U3 IAND b31 <INT>
  DEF b33 := 23 <INT>
  DEF b34 := b32 ILSHIFT b33 <INT>
  T4 := b34 <INT>
  DEF b35 := 31 <INT>
  DEF b36 := U1 ILSHIFT b35 <INT>
  DEF b37 := T4 IOR b36 <INT>
  T4 := b37 <INT>
  DEF b38 := 8388607 <INT>
  DEF b39 := U2 IAND b38 <INT>
  DEF b40 := T4 IOR b39 <INT>
  T4 := b40 <INT>
  GOTO IFEND_30_LEVEL_0 FROM T4 := b40 <INT>
  LABEL IFNEXT_30_SEQ_3_LEVEL_0
  LABEL IFEND_30_LEVEL_0
  CALL IntBinaryAsReal([T4 -> g47]<INT>) FROM LABEL IFEND_30_LEVEL_0
  DEF b41 := (RETURN g46) <REAL>
  T3 := b41 <REAL>
  DEF RETURN h85 := T3 <REAL>
 RETURN FROM RDivide
 PROC LABEL WriteString
  DEF g53 := 0 <INT>
  DEF g54 := 0 <INT>
  DEF g55 := 0 <INT>
  DEF g56 := 0 <INT>
  CALL StringAsAddress([(PARAM g70) -> g59]<STRING>) FROM DEF g56 := 0 <INT>
  DEF g61 := (RETURN g60) <INT>
  g53 := g61 <INT>
  DEF g62 := 0 <INT>
  g54 := g62 <INT>
  IPARAM g55
  IPARAM g53
  IPARAM g54
  IASM "LDRB %r, [%r, +%r]"
  IPARAM g55
  IPARAM g55
  IASM "STR %r, %a"
  CALL IntIsZero([g55 -> f86]<INT>) FROM IPARAM g55
  IPARAM g55
  IASM "STR %r, %a"
  DEF g63 := (RETURN f90) <BOOL>
  DEF g64 := BNOT g63 <BOOL>
  DEF g65 := TRUE <BOOL>
  IF g64 BEQ g65
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_1
  ELSE WHILENEXT_0_SEQ_0_LEVEL_0_1
  LABEL WHILECOND_0_SEQ_0_LEVEL_0_1
  IF g64 BEQ g65
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_1
  ELSE WHILEEND_0_LEVEL_0_1
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0_1
  IPARAM g56
  IASM "MOV %r, R0"
  IPARAM g55
  IASM "MOV R0, %r"
  IASM "SWI 6"
  DEF g66 := 1 <INT>
  DEF g67 := g54 IADD g66 <INT>
  g54 := g67 <INT>
  IPARAM g55
  IPARAM g53
  IPARAM g54
  IASM "LDRB %r, [%r, +%r]"
  IPARAM g55
  IPARAM g55
  IASM "STR %r, %a"
  IPARAM g56
  IASM "MOV R0, %r"
  CALL IntIsZero([g55 -> f86]<INT>) FROM IPARAM g56
  IASM "MOV R0, %r"
  DEF g68 := (RETURN f90) <BOOL>
  DEF g69 := BNOT g68 <BOOL>
  g64 := g69 <BOOL>
  GOTO WHILECOND_0_SEQ_0_LEVEL_0_1 FROM g64 := g69 <BOOL>
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0_1
  LABEL WHILEEND_0_LEVEL_0_1
 RETURN FROM WriteString
 PROC LABEL StringAsAddress
  DEF g57 := 0 <INT>
  DEF g58 := 0 <INT>
  IPARAM g58
  IPARAM (PARAM g59)
  IASM "LDR %r, %a"
  IPARAM g58
  IPARAM g57
  IASM "STR %r, %a"
  DEF RETURN g60 := g57 <INT>
 RETURN FROM StringAsAddress
 PROC LABEL RealSign
  DEF g71 := 0 <INT>
  DEF g72 := 0 <INT>
  CALL RealBinaryAsInt([(PARAM g83) -> g75]<REAL>) FROM DEF g72 := 0 <INT>
  DEF g77 := (RETURN g76) <INT>
  g72 := g77 <INT>
  DEF g78 := 31 <INT>
  DEF g79 := g72 IRSHIFT g78 <INT>
  DEF g80 := 1 <INT>
  DEF g81 := g79 IAND g80 <INT>
  g71 := g81 <INT>
  DEF RETURN g82 := g71 <INT>
 RETURN FROM RealSign
 PROC LABEL RealBinaryAsInt
  DEF g73 := 0 <INT>
  DEF g74 := 0.0 <REAL>
  IPARAM g74
  IPARAM (PARAM g75)
  IASM "LDR %r, %a"
  IPARAM g74
  IPARAM g73
  IASM "STR %r, %a"
  DEF RETURN g76 := g73 <INT>
 RETURN FROM RealBinaryAsInt
 PROC LABEL WriteInt
  DEF g84 := 0 <INT>
  IPARAM g84
  IASM "MOV %r, R0"
  IPARAM (PARAM g85)
  IASM "LDR R0, %a"
  IASM "SWI 1"
  IPARAM g84
  IASM "MOV R0, %r"
 RETURN FROM WriteInt
 PROC LABEL WriteLn
  IASM "SWI 4"
 RETURN FROM WriteLn
 PROC LABEL RealExponent
  DEF g86 := 0 <INT>
  DEF g87 := 0 <INT>
  DEF g88 := 0 <INT>
  CALL RealBinaryAsInt([(PARAM g98) -> g75]<REAL>) FROM DEF g88 := 0 <INT>
  DEF g89 := (RETURN g76) <INT>
  g87 := g89 <INT>
  DEF g90 := 23 <INT>
  DEF g91 := g87 IRSHIFT g90 <INT>
  DEF g92 := 255 <INT>
  DEF g93 := g91 IAND g92 <INT>
  g88 := g93 <INT>
  DEF g94 := g88 ISUB (GLOBAL h84) <INT>
  g86 := g94 <INT>
  DEF RETURN g97 := g86 <INT>
 RETURN FROM RealExponent
 PROC LABEL RealMantissa
  DEF g99 := 0 <INT>
  DEF h10 := 0 <INT>
  DEF h11 := 0 <INT>
  DEF h12 := 0 <INT>
  CALL RealBinaryAsInt([(PARAM h34) -> g75]<REAL>) FROM DEF h12 := 0 <INT>
  DEF h13 := (RETURN g76) <INT>
  h10 := h13 <INT>
  DEF h14 := 8388607 <INT>
  DEF h15 := h10 IAND h14 <INT>
  h11 := h15 <INT>
  CALL RealIsZero([(PARAM h34) -> h28]<REAL>) FROM h11 := h15 <INT>
  DEF h29 := (RETURN h27) <BOOL>
  DEF h30 := TRUE <BOOL>
  IF h29 BEQ h30
  THEN IFSTAT_6_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_6_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_6_SEQ_0_LEVEL_0_0
  g99 := h11 <INT>
  GOTO IFEND_6_LEVEL_0_0 FROM g99 := h11 <INT>
  LABEL IFNEXT_6_SEQ_0_LEVEL_0_0
  DEF h31 := 8388608 <INT>
  DEF h32 := h11 IOR h31 <INT>
  g99 := h32 <INT>
  GOTO IFEND_6_LEVEL_0_0 FROM g99 := h32 <INT>
  LABEL IFNEXT_6_SEQ_1_LEVEL_0
  LABEL IFEND_6_LEVEL_0_0
  DEF RETURN h33 := g99 <INT>
 RETURN FROM RealMantissa
 PROC LABEL RealIsZero
  DEF h16 := FALSE <BOOL>
  DEF h17 := 0 <INT>
  DEF h18 := 0 <INT>
  CALL RealBinaryAsInt([(PARAM h28) -> g75]<REAL>) FROM DEF h18 := 0 <INT>
  DEF h19 := (RETURN g76) <INT>
  h18 := h19 <INT>
  DEF h20 := 2147483647 <INT>
  DEF h21 := h18 IAND h20 <INT>
  h17 := h21 <INT>
  DEF h22 := 0 <INT>
  DEF h23 := h17 IEQ h22 <BOOL>
  DEF h24 := TRUE <BOOL>
  IF h23 BEQ h24
  THEN IFSTAT_0_SEQ_0_LEVEL_0_2
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_2
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_2
  DEF h25 := TRUE <BOOL>
  h16 := h25 <BOOL>
  GOTO IFEND_0_LEVEL_0_2 FROM h16 := h25 <BOOL>
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_2
  DEF h26 := FALSE <BOOL>
  h16 := h26 <BOOL>
  GOTO IFEND_0_LEVEL_0_2 FROM h16 := h26 <BOOL>
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_2
  LABEL IFEND_0_LEVEL_0_2
  DEF RETURN h27 := h16 <BOOL>
 RETURN FROM RealIsZero
 PROC LABEL Div
  DEF h35 := 0 <INT>
  DEF h36 := 0 <INT>
  DEF h37 := 0 <INT>
  DEF h38 := 0 <INT>
  DEF h39 := 0 <INT>
  DEF h40 := 0 <INT>
  DEF h41 := 0 <INT>
  DEF h42 := 0 <INT>
  DEF h43 := 0 <INT>
  h37 := (PARAM h44) <INT>
  DEF h45 := 0 <INT>
  h40 := h45 <INT>
  DEF h46 := 0 <INT>
  h38 := h46 <INT>
  CALL IntIsZero([h37 -> f86]<INT>) FROM h38 := h46 <INT>
  DEF h47 := (RETURN f90) <BOOL>
  DEF h48 := BNOT h47 <BOOL>
  DEF h49 := TRUE <BOOL>
  IF h48 BEQ h49
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_2
  ELSE WHILENEXT_0_SEQ_0_LEVEL_0_2
  LABEL WHILECOND_0_SEQ_0_LEVEL_0_2
  IF h48 BEQ h49
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_2
  ELSE WHILEEND_0_LEVEL_0_2
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0_2
  DEF h50 := 1 <INT>
  DEF h51 := h37 IAND h50 <INT>
  h39 := h51 <INT>
  DEF h52 := 1 <INT>
  DEF h53 := h39 IEQ h52 <BOOL>
  DEF h54 := TRUE <BOOL>
  IF h53 BEQ h54
  THEN IFSTAT_0_SEQ_0_LEVEL_0_3
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_3
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_3
  h38 := h40 <INT>
  GOTO IFEND_0_LEVEL_0_3 FROM h38 := h40 <INT>
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_3
  LABEL IFEND_0_LEVEL_0_3
  DEF h55 := 1 <INT>
  DEF h56 := h40 IADD h55 <INT>
  h40 := h56 <INT>
  DEF h57 := 1 <INT>
  DEF h58 := h37 IRSHIFT h57 <INT>
  h37 := h58 <INT>
  CALL IntIsZero([h37 -> f86]<INT>) FROM h37 := h58 <INT>
  DEF h59 := (RETURN f90) <BOOL>
  DEF h60 := BNOT h59 <BOOL>
  h48 := h60 <BOOL>
  GOTO WHILECOND_0_SEQ_0_LEVEL_0_2 FROM h48 := h60 <BOOL>
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0_2
  LABEL WHILEEND_0_LEVEL_0_2
  h41 := h38 <INT>
  h37 := (PARAM h44) <INT>
  DEF h61 := 0 <INT>
  h43 := h61 <INT>
  DEF h62 := 0 <INT>
  h36 := h62 <INT>
  DEF h63 := 0 <INT>
  DEF h64 := h41 GE h63 <BOOL>
  DEF h65 := TRUE <BOOL>
  IF h64 BEQ h65
  THEN WHILESTAT_2_SEQ_0_LEVEL_0_0
  ELSE WHILENEXT_2_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_2_SEQ_0_LEVEL_0_0
  IF h64 BEQ h65
  THEN WHILESTAT_2_SEQ_0_LEVEL_0_0
  ELSE WHILEEND_2_LEVEL_0_0
  LABEL WHILESTAT_2_SEQ_0_LEVEL_0_0
  DEF h66 := h37 IRSHIFT h41 <INT>
  DEF h67 := 1 <INT>
  DEF h68 := h66 IAND h67 <INT>
  h42 := h68 <INT>
  DEF h69 := 1 <INT>
  DEF h70 := h43 ILSHIFT h69 <INT>
  DEF h71 := h70 IOR h42 <INT>
  h43 := h71 <INT>
  DEF h72 := h43 GE (PARAM h73) <BOOL>
  DEF h74 := TRUE <BOOL>
  IF h72 BEQ h74
  THEN IFSTAT_1_SEQ_0_LEVEL_0_1
  ELSE IFNEXT_1_SEQ_0_LEVEL_0_1
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_1
  DEF h75 := 1 <INT>
  DEF h76 := h75 ILSHIFT h41 <INT>
  DEF h77 := h36 IOR h76 <INT>
  h36 := h77 <INT>
  DEF h78 := h43 ISUB (PARAM h73) <INT>
  h43 := h78 <INT>
  GOTO IFEND_1_LEVEL_0_1 FROM h43 := h78 <INT>
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_1
  LABEL IFEND_1_LEVEL_0_1
  DEF h79 := 1 <INT>
  DEF h80 := h41 ISUB h79 <INT>
  h41 := h80 <INT>
  DEF h81 := 0 <INT>
  DEF h82 := h41 GE h81 <BOOL>
  h64 := h82 <BOOL>
  GOTO WHILECOND_2_SEQ_0_LEVEL_0_0 FROM h64 := h82 <BOOL>
  LABEL WHILENEXT_2_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_2_LEVEL_0_0
  DEF RETURN h83 := h36 <INT>
 RETURN FROM Div
 PROC LABEL WriteReal
  DEF h90 := 0 <INT>
  IPARAM h90
  IASM "MOV %r, R0"
  IPARAM (PARAM h91)
  IASM "LDR R0, %a"
  IASM "SWI 2"
  IPARAM h90
  IASM "MOV R0, %r"
 RETURN FROM WriteReal
