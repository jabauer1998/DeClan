SYMBOL SECTION
 ENTRY f25 CONST INTERNAL GLOBAL a  <INT>
 ENTRY f27 CONST INTERNAL GLOBAL b  <INT>
 ENTRY f28 INTERNAL GLOBAL result  <REAL>
 ENTRY f29 INTERNAL GLOBAL aAsReal  <REAL>
 ENTRY f30 INTERNAL GLOBAL bAsReal  <REAL>
 ENTRY f31 INTERNAL GLOBAL bRealBinary  <INT>
 ENTRY f32 INTERNAL GLOBAL aRealBinary  <INT>
 ENTRY f33 INTERNAL result IntToReal <REAL>
 ENTRY f34 INTERNAL absN IntToReal <INT>
 ENTRY f35 INTERNAL isNeg IntToReal <BOOL>
 ENTRY f36 INTERNAL intResult IntToReal <INT>
 ENTRY f37 INTERNAL furthestOne IntToReal <INT>
 ENTRY f38 INTERNAL count IntToReal <INT>
 ENTRY f39 INTERNAL tempN IntToReal <INT>
 ENTRY f40 INTERNAL lastBit IntToReal <INT>
 ENTRY f41 INTERNAL fullExponent IntToReal <INT>
 ENTRY f42 INTERNAL exponent IntToReal <INT>
 ENTRY f43 INTERNAL mantissa IntToReal <INT>
 ENTRY f44 INTERNAL mantissaMask IntToReal <INT>
 ENTRY f45 INTERNAL toShiftOver IntToReal <INT>
 ENTRY f46 INTERNAL result Abs <INT>
 ENTRY f49 INTERNAL PARAM n Abs 0 <INT>
 ENTRY f51 INTERNAL result INeg <INT>
 ENTRY f53 INTERNAL PARAM n INeg 0 <INT>
 ENTRY f56 INTERNAL RETURN INeg <INT>
 ENTRY f58 INTERNAL RETURN Abs <INT>
 ENTRY g42 INTERNAL PARAM n IntToReal 0 <INT>
 ENTRY f61 INTERNAL result IntIsNegative <BOOL>
 ENTRY f62 INTERNAL thirtyFirstBit IntIsNegative <INT>
 ENTRY f65 INTERNAL PARAM n IntIsNegative 0 <INT>
 ENTRY f73 INTERNAL RETURN IntIsNegative <BOOL>
 ENTRY f75 INTERNAL result IntIsZero <BOOL>
 ENTRY f78 INTERNAL PARAM n IntIsZero 0 <INT>
 ENTRY f82 INTERNAL RETURN IntIsZero <BOOL>
 ENTRY h56 CONST INTERNAL GLOBAL realBias  <INT>
 ENTRY g36 INTERNAL result IntBinaryAsReal <REAL>
 ENTRY g37 INTERNAL temp IntBinaryAsReal <INT>
 ENTRY g38 INTERNAL RETURN IntBinaryAsReal <REAL>
 ENTRY g41 INTERNAL RETURN IntToReal <REAL>
 ENTRY T3 INTERNAL result RDivide <REAL>
 ENTRY T4 INTERNAL intResult RDivide <INT>
 ENTRY T5 INTERNAL n1Sign RDivide <INT>
 ENTRY T6 INTERNAL n2Sign RDivide <INT>
 ENTRY T7 INTERNAL n1Exp RDivide <INT>
 ENTRY T8 INTERNAL n2Exp RDivide <INT>
 ENTRY T9 INTERNAL n1Base RDivide <INT>
 ENTRY U0 INTERNAL n2Base RDivide <INT>
 ENTRY U1 INTERNAL resultSign RDivide <INT>
 ENTRY U2 INTERNAL resultBase RDivide <INT>
 ENTRY U3 INTERNAL resultExp RDivide <INT>
 ENTRY U4 INTERNAL n2Count RDivide <INT>
 ENTRY U5 INTERNAL n2LastDigit RDivide <INT>
 ENTRY U6 INTERNAL n2TempBase RDivide <INT>
 ENTRY U7 INTERNAL n2FirstOne RDivide <INT>
 ENTRY U8 INTERNAL n2LastOne RDivide <INT>
 ENTRY U9 INTERNAL toShiftExp RDivide <INT>
 ENTRY V0 INTERNAL toShiftBase RDivide <INT>
 ENTRY V1 INTERNAL toShiftBack RDivide <INT>
 ENTRY V2 INTERNAL resultLastOne RDivide <INT>
 ENTRY V3 INTERNAL resultLastDigit RDivide <INT>
 ENTRY V4 INTERNAL count RDivide <INT>
 ENTRY V5 INTERNAL resultTempBase RDivide <INT>
 ENTRY V6 INTERNAL n1DecimalPlace RDivide <INT>
 ENTRY V7 INTERNAL resultDecimalPlace RDivide <INT>
 ENTRY V8 INTERNAL roundIndex RDivide <INT>
 ENTRY V9 INTERNAL afterRound RDivide <INT>
 ENTRY W0 INTERNAL lowBase RDivide <INT>
 ENTRY W1 INTERNAL hiBase RDivide <INT>
 ENTRY W2 INTERNAL lowDiff RDivide <INT>
 ENTRY W3 INTERNAL hiDiff RDivide <INT>
 ENTRY W4 INTERNAL lowBit RDivide <INT>
 ENTRY W5 INTERNAL hiBit RDivide <INT>
 ENTRY W6 INTERNAL resultBitStorage RDivide <INT>
 ENTRY W7 INTERNAL lowBitStorage RDivide <INT>
 ENTRY W8 INTERNAL hiBitStorage RDivide <INT>
 ENTRY g45 INTERNAL result RealSign <INT>
 ENTRY g46 INTERNAL realAsInteger RealSign <INT>
 ENTRY g47 INTERNAL result RealBinaryAsInt <INT>
 ENTRY g48 INTERNAL temp RealBinaryAsInt <REAL>
 ENTRY g49 INTERNAL PARAM r RealBinaryAsInt 0 <REAL>
 ENTRY g50 INTERNAL RETURN RealBinaryAsInt <INT>
 ENTRY g57 INTERNAL PARAM r RealSign 0 <REAL>
 ENTRY g56 INTERNAL RETURN RealSign <INT>
 ENTRY h58 INTERNAL PARAM n1 RDivide 0 <REAL>
 ENTRY h59 INTERNAL PARAM n2 RDivide 1 <REAL>
 ENTRY g58 INTERNAL result RealExponent <INT>
 ENTRY g59 INTERNAL realAsInteger RealExponent <INT>
 ENTRY g60 INTERNAL exponent RealExponent <INT>
 ENTRY g70 INTERNAL PARAM r RealExponent 0 <REAL>
 ENTRY g69 INTERNAL RETURN RealExponent <INT>
 ENTRY g71 INTERNAL result RealMantissa <INT>
 ENTRY g72 INTERNAL realAsInt RealMantissa <INT>
 ENTRY g73 INTERNAL significand RealMantissa <INT>
 ENTRY g74 INTERNAL exp RealMantissa <INT>
 ENTRY g96 INTERNAL PARAM r RealMantissa 0 <REAL>
 ENTRY g78 INTERNAL result RealIsZero <BOOL>
 ENTRY g79 INTERNAL val RealIsZero <INT>
 ENTRY g80 INTERNAL exp RealIsZero <INT>
 ENTRY g90 INTERNAL PARAM r RealIsZero 0 <REAL>
 ENTRY g89 INTERNAL RETURN RealIsZero <BOOL>
 ENTRY g95 INTERNAL RETURN RealMantissa <INT>
 ENTRY g97 INTERNAL total Div <INT>
 ENTRY g98 INTERNAL result Div <INT>
 ENTRY g99 INTERNAL tempDividend Div <INT>
 ENTRY h10 INTERNAL dividendLastOne Div <INT>
 ENTRY h11 INTERNAL dividendLastDigit Div <INT>
 ENTRY h12 INTERNAL dividendCount Div <INT>
 ENTRY h13 INTERNAL dividendIndex Div <INT>
 ENTRY h14 INTERNAL bitAtIndex Div <INT>
 ENTRY h15 INTERNAL remainder Div <INT>
 ENTRY h16 INTERNAL PARAM dividend Div 0 <INT>
 ENTRY h45 INTERNAL PARAM divisor Div 1 <INT>
 ENTRY h55 INTERNAL RETURN Div <INT>
 ENTRY h57 INTERNAL RETURN RDivide <REAL>
 ENTRY h62 INTERNAL addressHolder WriteString <INT>
 ENTRY h63 INTERNAL offsetHolder WriteString <INT>
 ENTRY h64 INTERNAL valueHolder WriteString <INT>
 ENTRY h65 INTERNAL tempHolder WriteString <INT>
 ENTRY h66 INTERNAL result StringAsAddress <INT>
 ENTRY h67 INTERNAL temp StringAsAddress <INT>
 ENTRY h68 INTERNAL PARAM s StringAsAddress 0 <STRING>
 ENTRY h69 INTERNAL RETURN StringAsAddress <INT>
 ENTRY h79 INTERNAL PARAM s WriteString 0 <STRING>
 ENTRY h80 INTERNAL tempReg WriteReal <INT>
 ENTRY h81 INTERNAL PARAM r WriteReal 0 <REAL>
DATA SECTION
 DEF f24 := 355 <INT>
 DEF GLOBAL f25 := f24 <INT>
 DEF f26 := 113 <INT>
 DEF GLOBAL f27 := f26 <INT>
 DEF g23 := 127 <INT>
 DEF GLOBAL h56 := g23 <INT>
BSS SECTION
 DEF GLOBAL f28 := 0.0 <REAL>
 DEF GLOBAL f29 := 0.0 <REAL>
 DEF GLOBAL f30 := 0.0 <REAL>
 DEF GLOBAL f31 := 0 <INT>
 DEF GLOBAL f32 := 0 <INT>
CODE SECTION
 CALL IntToReal([(GLOBAL f25) -> g42]<INT>)
 DEF g43 := (RETURN g41) <REAL>
 GLOBAL f29 := g43 <REAL>
 CALL IntToReal([(GLOBAL f27) -> g42]<INT>)
 DEF g44 := (RETURN g41) <REAL>
 GLOBAL f30 := g44 <REAL>
 CALL RDivide([(GLOBAL f29) -> h58]<REAL>, [(GLOBAL f30) -> h59]<REAL>)
 DEF h60 := (RETURN h57) <REAL>
 GLOBAL f28 := h60 <REAL>
 DEF h61 := "Result as real: " <STRING>
 CALL WriteString([h61 -> h79]<STRING>)
 CALL WriteReal([(GLOBAL f28) -> h81]<REAL>)
 CALL WriteLn()
END
PROC SECTION
 PROC LABEL IntToReal
  DEF f33 := 0.0 <REAL>
  DEF f34 := 0 <INT>
  DEF f35 := FALSE <BOOL>
  DEF f36 := 0 <INT>
  DEF f37 := 0 <INT>
  DEF f38 := 0 <INT>
  DEF f39 := 0 <INT>
  DEF f40 := 0 <INT>
  DEF f41 := 0 <INT>
  DEF f42 := 0 <INT>
  DEF f43 := 0 <INT>
  DEF f44 := 0 <INT>
  DEF f45 := 0 <INT>
  CALL Abs([(PARAM g42) -> f49]<INT>)
  DEF f59 := (RETURN f58) <INT>
  f34 := f59 <INT>
  f39 := f34 <INT>
  DEF f60 := 0 <INT>
  f38 := f60 <INT>
  CALL IntIsNegative([(PARAM g42) -> f65]<INT>)
  DEF f74 := (RETURN f73) <BOOL>
  f35 := f74 <BOOL>
  CALL IntIsZero([f39 -> f78]<INT>)
  DEF f83 := (RETURN f82) <BOOL>
  DEF f84 := TRUE <BOOL>
  IF f83 BEQ f84
  THEN IFSTAT_0_SEQ_0_LEVEL_0_1
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_1
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_1
  DEF f85 := 0 <INT>
  f36 := f85 <INT>
  GOTO IFEND_0_LEVEL_0_1
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_1
  CALL IntIsZero([f39 -> f78]<INT>)
  DEF f86 := (RETURN f82) <BOOL>
  DEF f87 := BNOT f86 <BOOL>
  DEF f88 := TRUE <BOOL>
  IF f87 BEQ f88
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_0
  ELSE WHILENEXT_0_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_0_SEQ_0_LEVEL_0_0
  IF f87 BEQ f88
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_0
  ELSE WHILEEND_0_LEVEL_0_0
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0_0
  DEF f89 := 1 <INT>
  DEF f90 := f39 IAND f89 <INT>
  f40 := f90 <INT>
  DEF f91 := 1 <INT>
  DEF f92 := f40 IEQ f91 <BOOL>
  DEF f93 := TRUE <BOOL>
  IF f92 BEQ f93
  THEN IFSTAT_1_SEQ_0_LEVEL_1
  ELSE IFNEXT_1_SEQ_0_LEVEL_1
  LABEL IFSTAT_1_SEQ_0_LEVEL_1
  f37 := f38 <INT>
  GOTO IFEND_1_LEVEL_1
  LABEL IFNEXT_1_SEQ_0_LEVEL_1
  LABEL IFEND_1_LEVEL_1
  DEF f94 := 1 <INT>
  DEF f95 := f38 IADD f94 <INT>
  f38 := f95 <INT>
  DEF f96 := 1 <INT>
  DEF f97 := f39 IRSHIFT f96 <INT>
  f39 := f97 <INT>
  CALL IntIsZero([f39 -> f78]<INT>)
  DEF f98 := (RETURN f82) <BOOL>
  DEF f99 := BNOT f98 <BOOL>
  f87 := f99 <BOOL>
  GOTO WHILECOND_0_SEQ_0_LEVEL_0_0
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_0_LEVEL_0_0
  DEF g10 := 23 <INT>
  DEF g11 := f37 GT g10 <BOOL>
  DEF g12 := TRUE <BOOL>
  IF g11 BEQ g12
  THEN IFSTAT_2_SEQ_0_LEVEL_1_0
  ELSE IFNEXT_2_SEQ_0_LEVEL_1_0
  LABEL IFSTAT_2_SEQ_0_LEVEL_1_0
  DEF g13 := 23 <INT>
  DEF g14 := f37 ISUB g13 <INT>
  DEF g15 := f34 IRSHIFT g14 <INT>
  f34 := g15 <INT>
  GOTO IFEND_2_LEVEL_1_0
  LABEL IFNEXT_2_SEQ_0_LEVEL_1_0
  DEF g16 := 23 <INT>
  DEF g17 := f37 LT g16 <BOOL>
  DEF g18 := TRUE <BOOL>
  IF g17 BEQ g18
  THEN IFSTAT_2_SEQ_1_LEVEL_1_0
  ELSE IFNEXT_2_SEQ_1_LEVEL_1_0
  LABEL IFSTAT_2_SEQ_1_LEVEL_1_0
  DEF g19 := 23 <INT>
  DEF g20 := g19 ISUB f37 <INT>
  DEF g21 := f34 ILSHIFT g20 <INT>
  f34 := g21 <INT>
  GOTO IFEND_2_LEVEL_1_0
  LABEL IFNEXT_2_SEQ_1_LEVEL_1_0
  LABEL IFEND_2_LEVEL_1_0
  DEF g22 := f37 IADD (GLOBAL h56) <INT>
  f42 := g22 <INT>
  DEF g26 := 8388607 <INT>
  f44 := g26 <INT>
  DEF g27 := f34 IAND f44 <INT>
  f43 := g27 <INT>
  f36 := f43 <INT>
  DEF g28 := 23 <INT>
  DEF g29 := f42 ILSHIFT g28 <INT>
  DEF g30 := f36 IOR g29 <INT>
  f36 := g30 <INT>
  DEF g31 := TRUE <BOOL>
  IF f35 BEQ g31
  THEN IFSTAT_3_SEQ_0_LEVEL_1
  ELSE IFNEXT_3_SEQ_0_LEVEL_1
  LABEL IFSTAT_3_SEQ_0_LEVEL_1
  DEF g32 := 1 <INT>
  DEF g33 := 31 <INT>
  DEF g34 := g32 ILSHIFT g33 <INT>
  DEF g35 := f36 IOR g34 <INT>
  f36 := g35 <INT>
  GOTO IFEND_3_LEVEL_1
  LABEL IFNEXT_3_SEQ_0_LEVEL_1
  LABEL IFEND_3_LEVEL_1
  GOTO IFEND_0_LEVEL_0_1
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_1
  LABEL IFEND_0_LEVEL_0_1
  CALL IntBinaryAsReal([f36 -> g39]<INT>)
  DEF g40 := (RETURN g38) <REAL>
  f33 := g40 <REAL>
  DEF RETURN g41 := f33 <REAL>
 RETURN FROM IntToReal
 PROC LABEL Abs
  DEF f46 := 0 <INT>
  DEF f47 := 0 <INT>
  DEF f48 := (PARAM f49) GE f47 <BOOL>
  DEF f50 := TRUE <BOOL>
  IF f48 BEQ f50
  THEN IFSTAT_0_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_0
  f46 := (PARAM f49) <INT>
  GOTO IFEND_0_LEVEL_0_0
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_0
  CALL INeg([(PARAM f49) -> f53]<INT>)
  DEF f57 := (RETURN f56) <INT>
  f46 := f57 <INT>
  GOTO IFEND_0_LEVEL_0_0
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_0
  LABEL IFEND_0_LEVEL_0_0
  DEF RETURN f58 := f46 <INT>
 RETURN FROM Abs
 PROC LABEL INeg
  DEF f51 := 0 <INT>
  DEF f52 := INOT (PARAM f53) <INT>
  DEF f54 := 1 <INT>
  DEF f55 := f52 IADD f54 <INT>
  f51 := f55 <INT>
  DEF RETURN f56 := f51 <INT>
 RETURN FROM INeg
 PROC LABEL IntIsNegative
  DEF f61 := FALSE <BOOL>
  DEF f62 := 0 <INT>
  DEF f63 := 31 <INT>
  DEF f64 := (PARAM f65) IRSHIFT f63 <INT>
  DEF f66 := 1 <INT>
  DEF f67 := f64 IAND f66 <INT>
  f62 := f67 <INT>
  DEF f68 := 0 <INT>
  DEF f69 := f62 IEQ f68 <BOOL>
  DEF f70 := TRUE <BOOL>
  IF f69 BEQ f70
  THEN IFSTAT_2_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_2_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_2_SEQ_0_LEVEL_0_0
  DEF f71 := FALSE <BOOL>
  f61 := f71 <BOOL>
  GOTO IFEND_2_LEVEL_0_0
  LABEL IFNEXT_2_SEQ_0_LEVEL_0_0
  DEF f72 := TRUE <BOOL>
  f61 := f72 <BOOL>
  GOTO IFEND_2_LEVEL_0_0
  LABEL IFNEXT_2_SEQ_1_LEVEL_0_0
  LABEL IFEND_2_LEVEL_0_0
  DEF RETURN f73 := f61 <BOOL>
 RETURN FROM IntIsNegative
 PROC LABEL IntIsZero
  DEF f75 := FALSE <BOOL>
  DEF f76 := 0 <INT>
  DEF f77 := (PARAM f78) IEQ f76 <BOOL>
  DEF f79 := TRUE <BOOL>
  IF f77 BEQ f79
  THEN IFSTAT_1_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_1_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_0
  DEF f80 := TRUE <BOOL>
  f75 := f80 <BOOL>
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_0
  DEF f81 := FALSE <BOOL>
  f75 := f81 <BOOL>
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_1_LEVEL_0_0
  LABEL IFEND_1_LEVEL_0_0
  DEF RETURN f82 := f75 <BOOL>
 RETURN FROM IntIsZero
 PROC LABEL IntBinaryAsReal
  DEF g36 := 0.0 <REAL>
  DEF g37 := 0 <INT>
  IPARAM g37 <INT> %dr
  IPARAM (PARAM g39) <INT> %a
  IASM "LDR %dr, %ua"
  IPARAM g37 <INT> %r
  IPARAM g36 <REAL> %da
  IASM "STR %ur, %da"
  DEF RETURN g38 := g36 <REAL>
 RETURN FROM IntBinaryAsReal
 PROC LABEL RDivide
  DEF T3 := 0.0 <REAL>
  DEF T4 := 0 <INT>
  DEF T5 := 0 <INT>
  DEF T6 := 0 <INT>
  DEF T7 := 0 <INT>
  DEF T8 := 0 <INT>
  DEF T9 := 0 <INT>
  DEF U0 := 0 <INT>
  DEF U1 := 0 <INT>
  DEF U2 := 0 <INT>
  DEF U3 := 0 <INT>
  DEF U4 := 0 <INT>
  DEF U5 := 0 <INT>
  DEF U6 := 0 <INT>
  DEF U7 := 0 <INT>
  DEF U8 := 0 <INT>
  DEF U9 := 0 <INT>
  DEF V0 := 0 <INT>
  DEF V1 := 0 <INT>
  DEF V2 := 0 <INT>
  DEF V3 := 0 <INT>
  DEF V4 := 0 <INT>
  DEF V5 := 0 <INT>
  DEF V6 := 0 <INT>
  DEF V7 := 0 <INT>
  DEF V8 := 0 <INT>
  DEF V9 := 0 <INT>
  DEF W0 := 0 <INT>
  DEF W1 := 0 <INT>
  DEF W2 := 0 <INT>
  DEF W3 := 0 <INT>
  DEF W4 := 0 <INT>
  DEF W5 := 0 <INT>
  DEF W6 := 0 <INT>
  DEF W7 := 0 <INT>
  DEF W8 := 0 <INT>
  CALL RealSign([(PARAM h58) -> g57]<REAL>)
  DEF W9 := (RETURN g56) <INT>
  T5 := W9 <INT>
  CALL RealSign([(PARAM h59) -> g57]<REAL>)
  DEF X0 := (RETURN g56) <INT>
  T6 := X0 <INT>
  CALL RealExponent([(PARAM h58) -> g70]<REAL>)
  DEF X1 := (RETURN g69) <INT>
  T7 := X1 <INT>
  CALL RealExponent([(PARAM h59) -> g70]<REAL>)
  DEF X2 := (RETURN g69) <INT>
  T8 := X2 <INT>
  CALL RealMantissa([(PARAM h58) -> g96]<REAL>)
  DEF X3 := (RETURN g95) <INT>
  T9 := X3 <INT>
  CALL RealMantissa([(PARAM h59) -> g96]<REAL>)
  DEF X4 := (RETURN g95) <INT>
  U0 := X4 <INT>
  CALL IntIsZero([T9 -> f78]<INT>)
  DEF X5 := (RETURN f82) <BOOL>
  CALL IntIsZero([U0 -> f78]<INT>)
  DEF X6 := (RETURN f82) <BOOL>
  DEF X7 := X5 LAND X6 <BOOL>
  DEF X8 := TRUE <BOOL>
  IF X7 BEQ X8
  THEN IFSTAT_30_SEQ_0_LEVEL_0
  ELSE IFNEXT_30_SEQ_0_LEVEL_0
  LABEL IFSTAT_30_SEQ_0_LEVEL_0
  DEF X9 := 1065353216 <INT>
  T4 := X9 <INT>
  GOTO IFEND_30_LEVEL_0
  LABEL IFNEXT_30_SEQ_0_LEVEL_0
  CALL IntIsZero([T9 -> f78]<INT>)
  DEF Y0 := (RETURN f82) <BOOL>
  DEF Y1 := BNOT Y0 <BOOL>
  CALL IntIsZero([U0 -> f78]<INT>)
  DEF Y2 := (RETURN f82) <BOOL>
  DEF Y3 := Y1 LAND Y2 <BOOL>
  DEF Y4 := TRUE <BOOL>
  IF Y3 BEQ Y4
  THEN IFSTAT_30_SEQ_1_LEVEL_0
  ELSE IFNEXT_30_SEQ_1_LEVEL_0
  LABEL IFSTAT_30_SEQ_1_LEVEL_0
  DEF Y5 := 2139095040 <INT>
  T4 := Y5 <INT>
  GOTO IFEND_30_LEVEL_0
  LABEL IFNEXT_30_SEQ_1_LEVEL_0
  CALL IntIsZero([T9 -> f78]<INT>)
  DEF Y6 := (RETURN f82) <BOOL>
  CALL IntIsZero([U0 -> f78]<INT>)
  DEF Y7 := (RETURN f82) <BOOL>
  DEF Y8 := BNOT Y7 <BOOL>
  DEF Y9 := Y6 LAND Y8 <BOOL>
  DEF Z0 := TRUE <BOOL>
  IF Y9 BEQ Z0
  THEN IFSTAT_30_SEQ_2_LEVEL_0
  ELSE IFNEXT_30_SEQ_2_LEVEL_0
  LABEL IFSTAT_30_SEQ_2_LEVEL_0
  DEF Z1 := 0 <INT>
  T4 := Z1 <INT>
  GOTO IFEND_30_LEVEL_0
  LABEL IFNEXT_30_SEQ_2_LEVEL_0
  DEF Z2 := 30 <INT>
  DEF Z3 := 23 <INT>
  DEF Z4 := Z2 ISUB Z3 <INT>
  V0 := Z4 <INT>
  DEF Z5 := T9 ILSHIFT V0 <INT>
  T9 := Z5 <INT>
  DEF Z6 := 0 <INT>
  U4 := Z6 <INT>
  U6 := U0 <INT>
  DEF Z7 := 1 <INT>
  DEF Z8 := U6 IAND Z7 <INT>
  DEF Z9 := 0 <INT>
  DEF a10 := Z8 IEQ Z9 <BOOL>
  DEF a11 := TRUE <BOOL>
  IF a10 BEQ a11
  THEN WHILESTAT_18_SEQ_0_LEVEL_0
  ELSE WHILENEXT_18_SEQ_0_LEVEL_0
  LABEL WHILECOND_18_SEQ_0_LEVEL_0
  IF a10 BEQ a11
  THEN WHILESTAT_18_SEQ_0_LEVEL_0
  ELSE WHILEEND_18_LEVEL_0
  LABEL WHILESTAT_18_SEQ_0_LEVEL_0
  DEF a12 := 1 <INT>
  DEF a13 := U6 IRSHIFT a12 <INT>
  U6 := a13 <INT>
  DEF a14 := 1 <INT>
  DEF a15 := U4 IADD a14 <INT>
  U4 := a15 <INT>
  DEF a16 := 1 <INT>
  DEF a17 := U6 IAND a16 <INT>
  DEF a18 := 0 <INT>
  DEF a19 := a17 IEQ a18 <BOOL>
  a10 := a19 <BOOL>
  GOTO WHILECOND_18_SEQ_0_LEVEL_0
  LABEL WHILENEXT_18_SEQ_0_LEVEL_0
  LABEL WHILEEND_18_LEVEL_0
  U7 := U4 <INT>
  V0 := U7 <INT>
  DEF a20 := U0 IRSHIFT V0 <INT>
  U0 := a20 <INT>
  DEF a21 := 0 <INT>
  U4 := a21 <INT>
  U6 := U0 <INT>
  CALL IntIsZero([U6 -> f78]<INT>)
  DEF a22 := (RETURN f82) <BOOL>
  DEF a23 := BNOT a22 <BOOL>
  DEF a24 := TRUE <BOOL>
  IF a23 BEQ a24
  THEN WHILESTAT_20_SEQ_0_LEVEL_0
  ELSE WHILENEXT_20_SEQ_0_LEVEL_0
  LABEL WHILECOND_20_SEQ_0_LEVEL_0
  IF a23 BEQ a24
  THEN WHILESTAT_20_SEQ_0_LEVEL_0
  ELSE WHILEEND_20_LEVEL_0
  LABEL WHILESTAT_20_SEQ_0_LEVEL_0
  DEF a25 := 1 <INT>
  DEF a26 := U6 IAND a25 <INT>
  U5 := a26 <INT>
  DEF a27 := 1 <INT>
  DEF a28 := U5 IEQ a27 <BOOL>
  DEF a29 := TRUE <BOOL>
  IF a28 BEQ a29
  THEN IFSTAT_31_SEQ_0_LEVEL_1
  ELSE IFNEXT_31_SEQ_0_LEVEL_1
  LABEL IFSTAT_31_SEQ_0_LEVEL_1
  U8 := U4 <INT>
  GOTO IFEND_31_LEVEL_1
  LABEL IFNEXT_31_SEQ_0_LEVEL_1
  LABEL IFEND_31_LEVEL_1
  DEF a30 := 1 <INT>
  DEF a31 := U4 IADD a30 <INT>
  U4 := a31 <INT>
  DEF a32 := 1 <INT>
  DEF a33 := U6 IRSHIFT a32 <INT>
  U6 := a33 <INT>
  CALL IntIsZero([U6 -> f78]<INT>)
  DEF a34 := (RETURN f82) <BOOL>
  DEF a35 := BNOT a34 <BOOL>
  a23 := a35 <BOOL>
  GOTO WHILECOND_20_SEQ_0_LEVEL_0
  LABEL WHILENEXT_20_SEQ_0_LEVEL_0
  LABEL WHILEEND_20_LEVEL_0
  U9 := U8 <INT>
  DEF a36 := T7 ISUB U9 <INT>
  T7 := a36 <INT>
  DEF a37 := T8 ISUB U9 <INT>
  T8 := a37 <INT>
  DEF a38 := 30 <INT>
  DEF a39 := a38 ISUB U9 <INT>
  V6 := a39 <INT>
  V7 := V6 <INT>
  DEF a40 := T5 INE T6 <BOOL>
  DEF a41 := TRUE <BOOL>
  IF a40 BEQ a41
  THEN IFSTAT_32_SEQ_0_LEVEL_1
  ELSE IFNEXT_32_SEQ_0_LEVEL_1
  LABEL IFSTAT_32_SEQ_0_LEVEL_1
  DEF a42 := 1 <INT>
  U1 := a42 <INT>
  GOTO IFEND_32_LEVEL_1
  LABEL IFNEXT_32_SEQ_0_LEVEL_1
  DEF a43 := 0 <INT>
  U1 := a43 <INT>
  GOTO IFEND_32_LEVEL_1
  LABEL IFNEXT_32_SEQ_1_LEVEL_1
  LABEL IFEND_32_LEVEL_1
  DEF a44 := T7 ISUB T8 <INT>
  U3 := a44 <INT>
  CALL Div([T9 -> h16]<INT>, [U0 -> h45]<INT>)
  DEF a48 := (RETURN h55) <INT>
  U2 := a48 <INT>
  DEF a49 := 23 <INT>
  DEF a50 := V7 GT a49 <BOOL>
  DEF a51 := TRUE <BOOL>
  IF a50 BEQ a51
  THEN IFSTAT_33_SEQ_0_LEVEL_1
  ELSE IFNEXT_33_SEQ_0_LEVEL_1
  LABEL IFSTAT_33_SEQ_0_LEVEL_1
  DEF a52 := 23 <INT>
  DEF a53 := V7 ISUB a52 <INT>
  V1 := a53 <INT>
  DEF a54 := 1 <INT>
  DEF a55 := a54 ILSHIFT V1 <INT>
  DEF a56 := 1 <INT>
  DEF a57 := a55 ISUB a56 <INT>
  DEF a58 := U2 IAND a57 <INT>
  W6 := a58 <INT>
  DEF a59 := U2 IRSHIFT V1 <INT>
  U2 := a59 <INT>
  GOTO IFEND_33_LEVEL_1
  LABEL IFNEXT_33_SEQ_0_LEVEL_1
  DEF a60 := 23 <INT>
  DEF a61 := V7 LT a60 <BOOL>
  DEF a62 := TRUE <BOOL>
  IF a61 BEQ a62
  THEN IFSTAT_33_SEQ_1_LEVEL_1
  ELSE IFNEXT_33_SEQ_1_LEVEL_1
  LABEL IFSTAT_33_SEQ_1_LEVEL_1
  DEF a63 := 23 <INT>
  DEF a64 := a63 ISUB V7 <INT>
  V1 := a64 <INT>
  DEF a65 := U2 ILSHIFT V1 <INT>
  U2 := a65 <INT>
  DEF a66 := 0 <INT>
  W6 := a66 <INT>
  GOTO IFEND_33_LEVEL_1
  LABEL IFNEXT_33_SEQ_1_LEVEL_1
  LABEL IFEND_33_LEVEL_1
  DEF a67 := 0 <INT>
  V4 := a67 <INT>
  V5 := U2 <INT>
  DEF a68 := 0 <INT>
  V2 := a68 <INT>
  CALL IntIsZero([V5 -> f78]<INT>)
  DEF a69 := (RETURN f82) <BOOL>
  DEF a70 := BNOT a69 <BOOL>
  DEF a71 := TRUE <BOOL>
  IF a70 BEQ a71
  THEN WHILESTAT_22_SEQ_0_LEVEL_0
  ELSE WHILENEXT_22_SEQ_0_LEVEL_0
  LABEL WHILECOND_22_SEQ_0_LEVEL_0
  IF a70 BEQ a71
  THEN WHILESTAT_22_SEQ_0_LEVEL_0
  ELSE WHILEEND_22_LEVEL_0
  LABEL WHILESTAT_22_SEQ_0_LEVEL_0
  DEF a72 := 1 <INT>
  DEF a73 := V5 IAND a72 <INT>
  V3 := a73 <INT>
  DEF a74 := 1 <INT>
  DEF a75 := V3 IEQ a74 <BOOL>
  DEF a76 := TRUE <BOOL>
  IF a75 BEQ a76
  THEN IFSTAT_34_SEQ_0_LEVEL_1
  ELSE IFNEXT_34_SEQ_0_LEVEL_1
  LABEL IFSTAT_34_SEQ_0_LEVEL_1
  V2 := V4 <INT>
  GOTO IFEND_34_LEVEL_1
  LABEL IFNEXT_34_SEQ_0_LEVEL_1
  LABEL IFEND_34_LEVEL_1
  DEF a77 := 1 <INT>
  DEF a78 := V4 IADD a77 <INT>
  V4 := a78 <INT>
  DEF a79 := 1 <INT>
  DEF a80 := V5 IRSHIFT a79 <INT>
  V5 := a80 <INT>
  CALL IntIsZero([V5 -> f78]<INT>)
  DEF a81 := (RETURN f82) <BOOL>
  DEF a82 := BNOT a81 <BOOL>
  a70 := a82 <BOOL>
  GOTO WHILECOND_22_SEQ_0_LEVEL_0
  LABEL WHILENEXT_22_SEQ_0_LEVEL_0
  LABEL WHILEEND_22_LEVEL_0
  DEF a83 := 23 <INT>
  DEF a84 := V2 LT a83 <BOOL>
  DEF a85 := TRUE <BOOL>
  IF a84 BEQ a85
  THEN IFSTAT_35_SEQ_0_LEVEL_1
  ELSE IFNEXT_35_SEQ_0_LEVEL_1
  LABEL IFSTAT_35_SEQ_0_LEVEL_1
  DEF a86 := 23 <INT>
  DEF a87 := a86 ISUB V2 <INT>
  V0 := a87 <INT>
  DEF a88 := U2 ILSHIFT V0 <INT>
  U2 := a88 <INT>
  DEF a89 := V1 ISUB V0 <INT>
  DEF a90 := W6 IRSHIFT a89 <INT>
  DEF a91 := U2 IOR a90 <INT>
  U2 := a91 <INT>
  DEF a92 := U3 ISUB V0 <INT>
  U3 := a92 <INT>
  GOTO IFEND_35_LEVEL_1
  LABEL IFNEXT_35_SEQ_0_LEVEL_1
  LABEL IFEND_35_LEVEL_1
  DEF a93 := 1 <INT>
  DEF a94 := U2 IADD a93 <INT>
  W1 := a94 <INT>
  DEF a95 := 0 <INT>
  W8 := a95 <INT>
  W0 := U2 <INT>
  DEF a96 := 0 <INT>
  W7 := a96 <INT>
  DEF a97 := 1 <INT>
  DEF a98 := V1 ISUB a97 <INT>
  DEF a99 := W6 IRSHIFT a98 <INT>
  V2 := a99 <INT>
  DEF b10 := 1 <INT>
  DEF b11 := V2 IEQ b10 <BOOL>
  DEF b12 := TRUE <BOOL>
  IF b11 BEQ b12
  THEN IFSTAT_36_SEQ_0_LEVEL_1
  ELSE IFNEXT_36_SEQ_0_LEVEL_1
  LABEL IFSTAT_36_SEQ_0_LEVEL_1
  U2 := W1 <INT>
  W6 := W8 <INT>
  GOTO IFEND_36_LEVEL_1
  LABEL IFNEXT_36_SEQ_0_LEVEL_1
  DEF b13 := W2 GT W3 <BOOL>
  DEF b14 := TRUE <BOOL>
  IF b13 BEQ b14
  THEN IFSTAT_36_SEQ_1_LEVEL_1
  ELSE IFNEXT_36_SEQ_1_LEVEL_1
  LABEL IFSTAT_36_SEQ_1_LEVEL_1
  U2 := W0 <INT>
  W6 := W7 <INT>
  GOTO IFEND_36_LEVEL_1
  LABEL IFNEXT_36_SEQ_1_LEVEL_1
  DEF b15 := 1 <INT>
  DEF b16 := W0 IAND b15 <INT>
  W4 := b16 <INT>
  DEF b17 := 1 <INT>
  DEF b18 := W1 IAND b17 <INT>
  W5 := b18 <INT>
  DEF b19 := 0 <INT>
  DEF b20 := W5 IEQ b19 <BOOL>
  DEF b21 := TRUE <BOOL>
  IF b20 BEQ b21
  THEN IFSTAT_37_SEQ_0_LEVEL_2
  ELSE IFNEXT_37_SEQ_0_LEVEL_2
  LABEL IFSTAT_37_SEQ_0_LEVEL_2
  U2 := W1 <INT>
  W6 := W8 <INT>
  GOTO IFEND_37_LEVEL_2
  LABEL IFNEXT_37_SEQ_0_LEVEL_2
  U2 := W0 <INT>
  W6 := W7 <INT>
  GOTO IFEND_37_LEVEL_2
  LABEL IFNEXT_37_SEQ_1_LEVEL_2
  LABEL IFEND_37_LEVEL_2
  GOTO IFEND_36_LEVEL_1
  LABEL IFNEXT_36_SEQ_2_LEVEL_1
  LABEL IFEND_36_LEVEL_1
  DEF b22 := U3 IADD (GLOBAL h56) <INT>
  U3 := b22 <INT>
  DEF b23 := 255 <INT>
  DEF b24 := U3 IAND b23 <INT>
  DEF b25 := 23 <INT>
  DEF b26 := b24 ILSHIFT b25 <INT>
  T4 := b26 <INT>
  DEF b27 := 31 <INT>
  DEF b28 := U1 ILSHIFT b27 <INT>
  DEF b29 := T4 IOR b28 <INT>
  T4 := b29 <INT>
  DEF b30 := 8388607 <INT>
  DEF b31 := U2 IAND b30 <INT>
  DEF b32 := T4 IOR b31 <INT>
  T4 := b32 <INT>
  GOTO IFEND_30_LEVEL_0
  LABEL IFNEXT_30_SEQ_3_LEVEL_0
  LABEL IFEND_30_LEVEL_0
  CALL IntBinaryAsReal([T4 -> g39]<INT>)
  DEF b33 := (RETURN g38) <REAL>
  T3 := b33 <REAL>
  DEF RETURN h57 := T3 <REAL>
 RETURN FROM RDivide
 PROC LABEL RealSign
  DEF g45 := 0 <INT>
  DEF g46 := 0 <INT>
  CALL RealBinaryAsInt([(PARAM g57) -> g49]<REAL>)
  DEF g51 := (RETURN g50) <INT>
  g46 := g51 <INT>
  DEF g52 := 31 <INT>
  DEF g53 := g46 IRSHIFT g52 <INT>
  DEF g54 := 1 <INT>
  DEF g55 := g53 IAND g54 <INT>
  g45 := g55 <INT>
  DEF RETURN g56 := g45 <INT>
 RETURN FROM RealSign
 PROC LABEL RealBinaryAsInt
  DEF g47 := 0 <INT>
  DEF g48 := 0.0 <REAL>
  IPARAM g48 <REAL> %dr
  IPARAM (PARAM g49) <REAL> %a
  IASM "LDR %dr, %ua"
  IPARAM g48 <REAL> %r
  IPARAM g47 <INT> %da
  IASM "STR %ur, %da"
  DEF RETURN g50 := g47 <INT>
 RETURN FROM RealBinaryAsInt
 PROC LABEL RealExponent
  DEF g58 := 0 <INT>
  DEF g59 := 0 <INT>
  DEF g60 := 0 <INT>
  CALL RealBinaryAsInt([(PARAM g70) -> g49]<REAL>)
  DEF g61 := (RETURN g50) <INT>
  g59 := g61 <INT>
  DEF g62 := 23 <INT>
  DEF g63 := g59 IRSHIFT g62 <INT>
  DEF g64 := 255 <INT>
  DEF g65 := g63 IAND g64 <INT>
  g60 := g65 <INT>
  DEF g66 := g60 ISUB (GLOBAL h56) <INT>
  g58 := g66 <INT>
  DEF RETURN g69 := g58 <INT>
 RETURN FROM RealExponent
 PROC LABEL RealMantissa
  DEF g71 := 0 <INT>
  DEF g72 := 0 <INT>
  DEF g73 := 0 <INT>
  DEF g74 := 0 <INT>
  CALL RealBinaryAsInt([(PARAM g96) -> g49]<REAL>)
  DEF g75 := (RETURN g50) <INT>
  g72 := g75 <INT>
  DEF g76 := 8388607 <INT>
  DEF g77 := g72 IAND g76 <INT>
  g73 := g77 <INT>
  CALL RealIsZero([(PARAM g96) -> g90]<REAL>)
  DEF g91 := (RETURN g89) <BOOL>
  DEF g92 := TRUE <BOOL>
  IF g91 BEQ g92
  THEN IFSTAT_6_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_6_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_6_SEQ_0_LEVEL_0_0
  g71 := g73 <INT>
  GOTO IFEND_6_LEVEL_0_0
  LABEL IFNEXT_6_SEQ_0_LEVEL_0_0
  DEF g93 := 8388608 <INT>
  DEF g94 := g73 IOR g93 <INT>
  g71 := g94 <INT>
  GOTO IFEND_6_LEVEL_0_0
  LABEL IFNEXT_6_SEQ_1_LEVEL_0
  LABEL IFEND_6_LEVEL_0_0
  DEF RETURN g95 := g71 <INT>
 RETURN FROM RealMantissa
 PROC LABEL RealIsZero
  DEF g78 := FALSE <BOOL>
  DEF g79 := 0 <INT>
  DEF g80 := 0 <INT>
  CALL RealBinaryAsInt([(PARAM g90) -> g49]<REAL>)
  DEF g81 := (RETURN g50) <INT>
  g80 := g81 <INT>
  DEF g82 := 2147483647 <INT>
  DEF g83 := g80 IAND g82 <INT>
  g79 := g83 <INT>
  DEF g84 := 0 <INT>
  DEF g85 := g79 IEQ g84 <BOOL>
  DEF g86 := TRUE <BOOL>
  IF g85 BEQ g86
  THEN IFSTAT_0_SEQ_0_LEVEL_0_2
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_2
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_2
  DEF g87 := TRUE <BOOL>
  g78 := g87 <BOOL>
  GOTO IFEND_0_LEVEL_0_2
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_2
  DEF g88 := FALSE <BOOL>
  g78 := g88 <BOOL>
  GOTO IFEND_0_LEVEL_0_2
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_2
  LABEL IFEND_0_LEVEL_0_2
  DEF RETURN g89 := g78 <BOOL>
 RETURN FROM RealIsZero
 PROC LABEL Div
  DEF g97 := 0 <INT>
  DEF g98 := 0 <INT>
  DEF g99 := 0 <INT>
  DEF h10 := 0 <INT>
  DEF h11 := 0 <INT>
  DEF h12 := 0 <INT>
  DEF h13 := 0 <INT>
  DEF h14 := 0 <INT>
  DEF h15 := 0 <INT>
  g99 := (PARAM h16) <INT>
  DEF h17 := 0 <INT>
  h12 := h17 <INT>
  DEF h18 := 0 <INT>
  h10 := h18 <INT>
  CALL IntIsZero([g99 -> f78]<INT>)
  DEF h19 := (RETURN f82) <BOOL>
  DEF h20 := BNOT h19 <BOOL>
  DEF h21 := TRUE <BOOL>
  IF h20 BEQ h21
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_1
  ELSE WHILENEXT_0_SEQ_0_LEVEL_0_1
  LABEL WHILECOND_0_SEQ_0_LEVEL_0_1
  IF h20 BEQ h21
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_1
  ELSE WHILEEND_0_LEVEL_0_1
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0_1
  DEF h22 := 1 <INT>
  DEF h23 := g99 IAND h22 <INT>
  h11 := h23 <INT>
  DEF h24 := 1 <INT>
  DEF h25 := h11 IEQ h24 <BOOL>
  DEF h26 := TRUE <BOOL>
  IF h25 BEQ h26
  THEN IFSTAT_0_SEQ_0_LEVEL_0_3
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_3
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_3
  h10 := h12 <INT>
  GOTO IFEND_0_LEVEL_0_3
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_3
  LABEL IFEND_0_LEVEL_0_3
  DEF h27 := 1 <INT>
  DEF h28 := h12 IADD h27 <INT>
  h12 := h28 <INT>
  DEF h29 := 1 <INT>
  DEF h30 := g99 IRSHIFT h29 <INT>
  g99 := h30 <INT>
  CALL IntIsZero([g99 -> f78]<INT>)
  DEF h31 := (RETURN f82) <BOOL>
  DEF h32 := BNOT h31 <BOOL>
  h20 := h32 <BOOL>
  GOTO WHILECOND_0_SEQ_0_LEVEL_0_1
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0_1
  LABEL WHILEEND_0_LEVEL_0_1
  h13 := h10 <INT>
  g99 := (PARAM h16) <INT>
  DEF h33 := 0 <INT>
  h15 := h33 <INT>
  DEF h34 := 0 <INT>
  g98 := h34 <INT>
  DEF h35 := 0 <INT>
  DEF h36 := h13 GE h35 <BOOL>
  DEF h37 := TRUE <BOOL>
  IF h36 BEQ h37
  THEN WHILESTAT_2_SEQ_0_LEVEL_0_0
  ELSE WHILENEXT_2_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_2_SEQ_0_LEVEL_0_0
  IF h36 BEQ h37
  THEN WHILESTAT_2_SEQ_0_LEVEL_0_0
  ELSE WHILEEND_2_LEVEL_0_0
  LABEL WHILESTAT_2_SEQ_0_LEVEL_0_0
  DEF h38 := g99 IRSHIFT h13 <INT>
  DEF h39 := 1 <INT>
  DEF h40 := h38 IAND h39 <INT>
  h14 := h40 <INT>
  DEF h41 := 1 <INT>
  DEF h42 := h15 ILSHIFT h41 <INT>
  DEF h43 := h42 IOR h14 <INT>
  h15 := h43 <INT>
  DEF h44 := h15 GE (PARAM h45) <BOOL>
  DEF h46 := TRUE <BOOL>
  IF h44 BEQ h46
  THEN IFSTAT_1_SEQ_0_LEVEL_0_1
  ELSE IFNEXT_1_SEQ_0_LEVEL_0_1
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_1
  DEF h47 := 1 <INT>
  DEF h48 := h47 ILSHIFT h13 <INT>
  DEF h49 := g98 IOR h48 <INT>
  g98 := h49 <INT>
  DEF h50 := h15 ISUB (PARAM h45) <INT>
  h15 := h50 <INT>
  GOTO IFEND_1_LEVEL_0_1
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_1
  LABEL IFEND_1_LEVEL_0_1
  DEF h51 := 1 <INT>
  DEF h52 := h13 ISUB h51 <INT>
  h13 := h52 <INT>
  DEF h53 := 0 <INT>
  DEF h54 := h13 GE h53 <BOOL>
  h36 := h54 <BOOL>
  GOTO WHILECOND_2_SEQ_0_LEVEL_0_0
  LABEL WHILENEXT_2_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_2_LEVEL_0_0
  DEF RETURN h55 := g98 <INT>
 RETURN FROM Div
 PROC LABEL WriteString
  DEF h62 := 0 <INT>
  DEF h63 := 0 <INT>
  DEF h64 := 0 <INT>
  DEF h65 := 0 <INT>
  CALL StringAsAddress([(PARAM h79) -> h68]<STRING>)
  DEF h70 := (RETURN h69) <INT>
  h62 := h70 <INT>
  DEF h71 := 0 <INT>
  h63 := h71 <INT>
  IPARAM h64 <INT> %dr
  IASM "LDRB %dr, [%ur, +%ur]"
  IPARAM h64 <INT> %r
  IPARAM h64 <INT> %da
  IASM "STR %ur, %da"
  CALL IntIsZero([h64 -> f78]<INT>)
  DEF h72 := (RETURN f82) <BOOL>
  DEF h73 := BNOT h72 <BOOL>
  DEF h74 := TRUE <BOOL>
  IF h73 BEQ h74
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_2
  ELSE WHILENEXT_0_SEQ_0_LEVEL_0_2
  LABEL WHILECOND_0_SEQ_0_LEVEL_0_2
  IF h73 BEQ h74
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_2
  ELSE WHILEEND_0_LEVEL_0_2
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0_2
  IPARAM h65 <INT> %dr
  IASM "MOV %dr, R0"
  IPARAM h64 <INT> %r
  IASM "MOV R0, %ur"
  IASM "SWI 6"
  DEF h75 := 1 <INT>
  DEF h76 := h63 IADD h75 <INT>
  h63 := h76 <INT>
  IPARAM h64 <INT> %dr
  IASM "LDRB %dr, [%ur, +%ur]"
  IPARAM h64 <INT> %r
  IPARAM h64 <INT> %da
  IASM "STR %ur, %da"
  IPARAM h65 <INT> %r
  IASM "MOV R0, %ur"
  CALL IntIsZero([h64 -> f78]<INT>)
  DEF h77 := (RETURN f82) <BOOL>
  DEF h78 := BNOT h77 <BOOL>
  h73 := h78 <BOOL>
  GOTO WHILECOND_0_SEQ_0_LEVEL_0_2
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0_2
  LABEL WHILEEND_0_LEVEL_0_2
 RETURN FROM WriteString
 PROC LABEL StringAsAddress
  DEF h66 := 0 <INT>
  DEF h67 := 0 <INT>
  IPARAM h67 <INT> %dr
  IPARAM (PARAM h68) <STRING> %a
  IASM "LDR %dr, %ua"
  IPARAM h67 <INT> %r
  IPARAM h66 <INT> %da
  IASM "STR %ur, %da"
  DEF RETURN h69 := h66 <INT>
 RETURN FROM StringAsAddress
 PROC LABEL WriteReal
  DEF h80 := 0 <INT>
  IPARAM h80 <INT> %dr
  IASM "MOV %dr, R0"
  IPARAM (PARAM h81) <REAL> %a
  IASM "LDR R0, %ua"
  IASM "SWI 2"
  IPARAM h80 <INT> %r
  IASM "MOV R0, %ur"
 RETURN FROM WriteReal
 PROC LABEL WriteLn
  IASM "SWI 4"
 RETURN FROM WriteLn
