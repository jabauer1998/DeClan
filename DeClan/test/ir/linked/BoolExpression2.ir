SYMBOL SECTION
 ENTRY f25 CONST INTERNAL GLOBAL a  <INT>
 ENTRY f27 CONST INTERNAL GLOBAL e  <BOOL>
 ENTRY f29 CONST INTERNAL GLOBAL x  <REAL>
 ENTRY f30 INTERNAL GLOBAL result  <BOOL>
 ENTRY f32 INTERNAL addressHolder WriteString <INT>
 ENTRY f33 INTERNAL offsetHolder WriteString <INT>
 ENTRY f34 INTERNAL valueHolder WriteString <INT>
 ENTRY f35 INTERNAL tempHolder WriteString <INT>
 ENTRY f36 INTERNAL result StringAsAddress <INT>
 ENTRY f37 INTERNAL temp StringAsAddress <INT>
 ENTRY f38 INTERNAL PARAM s StringAsAddress 0 <STRING>
 ENTRY f39 INTERNAL RETURN StringAsAddress <INT>
 ENTRY f57 INTERNAL PARAM s WriteString 0 <STRING>
 ENTRY f42 INTERNAL result IntIsZero <BOOL>
 ENTRY f45 INTERNAL PARAM n IntIsZero 0 <INT>
 ENTRY f49 INTERNAL RETURN IntIsZero <BOOL>
 ENTRY f58 INTERNAL tempReg WriteBool <INT>
 ENTRY f59 INTERNAL PARAM b WriteBool 0 <BOOL>
 ENTRY f61 INTERNAL result IntToReal <REAL>
 ENTRY f62 INTERNAL absN IntToReal <INT>
 ENTRY f63 INTERNAL isNeg IntToReal <BOOL>
 ENTRY f64 INTERNAL intResult IntToReal <INT>
 ENTRY f65 INTERNAL furthestOne IntToReal <INT>
 ENTRY f66 INTERNAL count IntToReal <INT>
 ENTRY f67 INTERNAL tempN IntToReal <INT>
 ENTRY f68 INTERNAL lastBit IntToReal <INT>
 ENTRY f69 INTERNAL fullExponent IntToReal <INT>
 ENTRY f70 INTERNAL exponent IntToReal <INT>
 ENTRY f71 INTERNAL mantissa IntToReal <INT>
 ENTRY f72 INTERNAL mantissaMask IntToReal <INT>
 ENTRY f73 INTERNAL toShiftOver IntToReal <INT>
 ENTRY f74 INTERNAL result Abs <INT>
 ENTRY f77 INTERNAL PARAM n Abs 0 <INT>
 ENTRY f79 INTERNAL result INeg <INT>
 ENTRY f81 INTERNAL PARAM n INeg 0 <INT>
 ENTRY f84 INTERNAL RETURN INeg <INT>
 ENTRY f86 INTERNAL RETURN Abs <INT>
 ENTRY g62 INTERNAL PARAM n IntToReal 0 <INT>
 ENTRY f89 INTERNAL result IntIsNegative <BOOL>
 ENTRY f90 INTERNAL thirtyFirstBit IntIsNegative <INT>
 ENTRY f93 INTERNAL PARAM n IntIsNegative 0 <INT>
 ENTRY g11 INTERNAL RETURN IntIsNegative <BOOL>
 ENTRY h44 CONST INTERNAL GLOBAL realBias  <INT>
 ENTRY g56 INTERNAL result IntBinaryAsReal <REAL>
 ENTRY g57 INTERNAL temp IntBinaryAsReal <INT>
 ENTRY g58 INTERNAL RETURN IntBinaryAsReal <REAL>
 ENTRY g61 INTERNAL RETURN IntToReal <REAL>
 ENTRY d96 INTERNAL result RGreaterThanOrEqualTo <BOOL>
 ENTRY d97 INTERNAL n1IsZero RGreaterThanOrEqualTo <BOOL>
 ENTRY d98 INTERNAL n2IsZero RGreaterThanOrEqualTo <BOOL>
 ENTRY d99 INTERNAL n1IsNegative RGreaterThanOrEqualTo <BOOL>
 ENTRY e10 INTERNAL n2IsNegative RGreaterThanOrEqualTo <BOOL>
 ENTRY e11 INTERNAL n1IsPositive RGreaterThanOrEqualTo <BOOL>
 ENTRY e12 INTERNAL n2IsPositive RGreaterThanOrEqualTo <BOOL>
 ENTRY e13 INTERNAL n1Exp RGreaterThanOrEqualTo <INT>
 ENTRY e14 INTERNAL n2Exp RGreaterThanOrEqualTo <INT>
 ENTRY e15 INTERNAL n1Value RGreaterThanOrEqualTo <INT>
 ENTRY e16 INTERNAL n2Value RGreaterThanOrEqualTo <INT>
 ENTRY g64 INTERNAL result RealIsZero <BOOL>
 ENTRY g65 INTERNAL val RealIsZero <INT>
 ENTRY g66 INTERNAL exp RealIsZero <INT>
 ENTRY g67 INTERNAL result RealBinaryAsInt <INT>
 ENTRY g68 INTERNAL temp RealBinaryAsInt <REAL>
 ENTRY g69 INTERNAL PARAM r RealBinaryAsInt 0 <REAL>
 ENTRY g70 INTERNAL RETURN RealBinaryAsInt <INT>
 ENTRY g80 INTERNAL PARAM r RealIsZero 0 <REAL>
 ENTRY g79 INTERNAL RETURN RealIsZero <BOOL>
 ENTRY h61 INTERNAL PARAM n1 RGreaterThanOrEqualTo 0 <REAL>
 ENTRY h62 INTERNAL PARAM n2 RGreaterThanOrEqualTo 1 <REAL>
 ENTRY g81 INTERNAL result RealIsNegative <BOOL>
 ENTRY g82 INTERNAL rest RealIsNegative <INT>
 ENTRY g83 INTERNAL thirtyFirstBit RealIsNegative <INT>
 ENTRY g84 INTERNAL result RealSign <INT>
 ENTRY g85 INTERNAL realAsInteger RealSign <INT>
 ENTRY g92 INTERNAL PARAM r RealSign 0 <REAL>
 ENTRY g91 INTERNAL RETURN RealSign <INT>
 ENTRY h16 INTERNAL PARAM r RealIsNegative 0 <REAL>
 ENTRY h15 INTERNAL RETURN RealIsNegative <BOOL>
 ENTRY h17 INTERNAL result RealIsPositive <BOOL>
 ENTRY h18 INTERNAL realAsInteger RealIsPositive <INT>
 ENTRY h19 INTERNAL thirtyFirstBit RealIsPositive <INT>
 ENTRY h33 INTERNAL PARAM r RealIsPositive 0 <REAL>
 ENTRY h32 INTERNAL RETURN RealIsPositive <BOOL>
 ENTRY h34 INTERNAL result RealExponent <INT>
 ENTRY h35 INTERNAL realAsInteger RealExponent <INT>
 ENTRY h36 INTERNAL exponent RealExponent <INT>
 ENTRY h46 INTERNAL PARAM r RealExponent 0 <REAL>
 ENTRY h45 INTERNAL RETURN RealExponent <INT>
 ENTRY h47 INTERNAL result RealMantissa <INT>
 ENTRY h48 INTERNAL realAsInt RealMantissa <INT>
 ENTRY h49 INTERNAL significand RealMantissa <INT>
 ENTRY h50 INTERNAL exp RealMantissa <INT>
 ENTRY h59 INTERNAL PARAM r RealMantissa 0 <REAL>
 ENTRY h58 INTERNAL RETURN RealMantissa <INT>
 ENTRY h60 INTERNAL RETURN RGreaterThanOrEqualTo <BOOL>
DATA SECTION
 DEF f24 := 0 <INT>
 DEF GLOBAL f25 := f24 <INT>
 DEF f26 := TRUE <BOOL>
 DEF GLOBAL f27 := f26 <BOOL>
 DEF f28 := 1.0 <REAL>
 DEF GLOBAL f29 := f28 <REAL>
 DEF g43 := 127 <INT>
 DEF GLOBAL h44 := g43 <INT>
BSS SECTION
 DEF GLOBAL f30 := FALSE <BOOL>
CODE SECTION
 DEF f31 := "e is " <STRING>
 CALL WriteString([f31 -> f57]<STRING>)
 CALL WriteBool([(GLOBAL f27) -> f59]<BOOL>)
 CALL WriteLn()
 DEF f60 := BNOT (GLOBAL f27) <BOOL>
 CALL IntToReal([(GLOBAL f25) -> g62]<INT>)
 DEF g63 := (RETURN g61) <REAL>
 CALL RGreaterThanOrEqualTo([(GLOBAL f29) -> h61]<REAL>, [g63 -> h62]<REAL>)
 DEF h63 := (RETURN h60) <BOOL>
 DEF h64 := f60 LOR h63 <BOOL>
 GLOBAL f30 := h64 <BOOL>
 CALL WriteBool([(GLOBAL f30) -> f59]<BOOL>)
END
PROC SECTION
 PROC LABEL WriteString
  DEF f32 := 0 <INT>
  DEF f33 := 0 <INT>
  DEF f34 := 0 <INT>
  DEF f35 := 0 <INT>
  CALL StringAsAddress([(PARAM f57) -> f38]<STRING>)
  DEF f40 := (RETURN f39) <INT>
  f32 := f40 <INT>
  DEF f41 := 0 <INT>
  f33 := f41 <INT>
  IPARAM f34 <INT> %dr
  IASM "LDRB %dr, [%ur, +%ur]"
  IPARAM f34 <INT> %r
  IPARAM f34 <INT> %da
  IASM "STR %ur, %da"
  CALL IntIsZero([f34 -> f45]<INT>)
  DEF f50 := (RETURN f49) <BOOL>
  DEF f51 := BNOT f50 <BOOL>
  DEF f52 := TRUE <BOOL>
  IF f51 BEQ f52
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_0
  ELSE WHILENEXT_0_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_0_SEQ_0_LEVEL_0_0
  IF f51 BEQ f52
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_0
  ELSE WHILEEND_0_LEVEL_0_0
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0_0
  IPARAM f35 <INT> %dr
  IASM "MOV %dr, R0"
  IPARAM f34 <INT> %r
  IASM "MOV R0, %ur"
  IASM "SWI 6"
  DEF f53 := 1 <INT>
  DEF f54 := f33 IADD f53 <INT>
  f33 := f54 <INT>
  IPARAM f34 <INT> %dr
  IASM "LDRB %dr, [%ur, +%ur]"
  IPARAM f34 <INT> %r
  IPARAM f34 <INT> %da
  IASM "STR %ur, %da"
  IPARAM f35 <INT> %r
  IASM "MOV R0, %ur"
  CALL IntIsZero([f34 -> f45]<INT>)
  DEF f55 := (RETURN f49) <BOOL>
  DEF f56 := BNOT f55 <BOOL>
  f51 := f56 <BOOL>
  GOTO WHILECOND_0_SEQ_0_LEVEL_0_0
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_0_LEVEL_0_0
 RETURN FROM WriteString
 PROC LABEL StringAsAddress
  DEF f36 := 0 <INT>
  DEF f37 := 0 <INT>
  IPARAM f37 <INT> %dr
  IPARAM (PARAM f38) <STRING> %a
  IASM "LDR %dr, %ua"
  IPARAM f37 <INT> %r
  IPARAM f36 <INT> %da
  IASM "STR %ur, %da"
  DEF RETURN f39 := f36 <INT>
 RETURN FROM StringAsAddress
 PROC LABEL IntIsZero
  DEF f42 := FALSE <BOOL>
  DEF f43 := 0 <INT>
  DEF f44 := (PARAM f45) IEQ f43 <BOOL>
  DEF f46 := TRUE <BOOL>
  IF f44 BEQ f46
  THEN IFSTAT_1_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_1_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_0
  DEF f47 := TRUE <BOOL>
  f42 := f47 <BOOL>
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_0
  DEF f48 := FALSE <BOOL>
  f42 := f48 <BOOL>
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_1_LEVEL_0_0
  LABEL IFEND_1_LEVEL_0_0
  DEF RETURN f49 := f42 <BOOL>
 RETURN FROM IntIsZero
 PROC LABEL WriteBool
  DEF f58 := 0 <INT>
  IPARAM f58 <INT> %dr
  IASM "MOV %dr, R0"
  IPARAM (PARAM f59) <BOOL> %a
  IASM "LDRB R0, %ua"
  IASM "SWI 6"
  IPARAM f58 <INT> %r
  IASM "MOV R0, %ur"
 RETURN FROM WriteBool
 PROC LABEL WriteLn
  IASM "SWI 4"
 RETURN FROM WriteLn
 PROC LABEL IntToReal
  DEF f61 := 0.0 <REAL>
  DEF f62 := 0 <INT>
  DEF f63 := FALSE <BOOL>
  DEF f64 := 0 <INT>
  DEF f65 := 0 <INT>
  DEF f66 := 0 <INT>
  DEF f67 := 0 <INT>
  DEF f68 := 0 <INT>
  DEF f69 := 0 <INT>
  DEF f70 := 0 <INT>
  DEF f71 := 0 <INT>
  DEF f72 := 0 <INT>
  DEF f73 := 0 <INT>
  CALL Abs([(PARAM g62) -> f77]<INT>)
  DEF f87 := (RETURN f86) <INT>
  f62 := f87 <INT>
  f67 := f62 <INT>
  DEF f88 := 0 <INT>
  f66 := f88 <INT>
  CALL IntIsNegative([(PARAM g62) -> f93]<INT>)
  DEF g12 := (RETURN g11) <BOOL>
  f63 := g12 <BOOL>
  CALL IntIsZero([f67 -> f45]<INT>)
  DEF g13 := (RETURN f49) <BOOL>
  DEF g14 := TRUE <BOOL>
  IF g13 BEQ g14
  THEN IFSTAT_0_SEQ_0_LEVEL_0_1
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_1
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_1
  DEF g15 := 0 <INT>
  f64 := g15 <INT>
  GOTO IFEND_0_LEVEL_0_1
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_1
  CALL IntIsZero([f67 -> f45]<INT>)
  DEF g16 := (RETURN f49) <BOOL>
  DEF g17 := BNOT g16 <BOOL>
  DEF g18 := TRUE <BOOL>
  IF g17 BEQ g18
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_1
  ELSE WHILENEXT_0_SEQ_0_LEVEL_0_1
  LABEL WHILECOND_0_SEQ_0_LEVEL_0_1
  IF g17 BEQ g18
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_1
  ELSE WHILEEND_0_LEVEL_0_1
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0_1
  DEF g19 := 1 <INT>
  DEF g20 := f67 IAND g19 <INT>
  f68 := g20 <INT>
  DEF g21 := 1 <INT>
  DEF g22 := f68 IEQ g21 <BOOL>
  DEF g23 := TRUE <BOOL>
  IF g22 BEQ g23
  THEN IFSTAT_1_SEQ_0_LEVEL_1
  ELSE IFNEXT_1_SEQ_0_LEVEL_1
  LABEL IFSTAT_1_SEQ_0_LEVEL_1
  f65 := f66 <INT>
  GOTO IFEND_1_LEVEL_1
  LABEL IFNEXT_1_SEQ_0_LEVEL_1
  LABEL IFEND_1_LEVEL_1
  DEF g24 := 1 <INT>
  DEF g25 := f66 IADD g24 <INT>
  f66 := g25 <INT>
  DEF g26 := 1 <INT>
  DEF g27 := f67 IRSHIFT g26 <INT>
  f67 := g27 <INT>
  CALL IntIsZero([f67 -> f45]<INT>)
  DEF g28 := (RETURN f49) <BOOL>
  DEF g29 := BNOT g28 <BOOL>
  g17 := g29 <BOOL>
  GOTO WHILECOND_0_SEQ_0_LEVEL_0_1
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0_1
  LABEL WHILEEND_0_LEVEL_0_1
  DEF g30 := 23 <INT>
  DEF g31 := f65 GT g30 <BOOL>
  DEF g32 := TRUE <BOOL>
  IF g31 BEQ g32
  THEN IFSTAT_2_SEQ_0_LEVEL_1_0
  ELSE IFNEXT_2_SEQ_0_LEVEL_1_0
  LABEL IFSTAT_2_SEQ_0_LEVEL_1_0
  DEF g33 := 23 <INT>
  DEF g34 := f65 ISUB g33 <INT>
  DEF g35 := f62 IRSHIFT g34 <INT>
  f62 := g35 <INT>
  GOTO IFEND_2_LEVEL_1_0
  LABEL IFNEXT_2_SEQ_0_LEVEL_1_0
  DEF g36 := 23 <INT>
  DEF g37 := f65 LT g36 <BOOL>
  DEF g38 := TRUE <BOOL>
  IF g37 BEQ g38
  THEN IFSTAT_2_SEQ_1_LEVEL_1_0
  ELSE IFNEXT_2_SEQ_1_LEVEL_1_0
  LABEL IFSTAT_2_SEQ_1_LEVEL_1_0
  DEF g39 := 23 <INT>
  DEF g40 := g39 ISUB f65 <INT>
  DEF g41 := f62 ILSHIFT g40 <INT>
  f62 := g41 <INT>
  GOTO IFEND_2_LEVEL_1_0
  LABEL IFNEXT_2_SEQ_1_LEVEL_1_0
  LABEL IFEND_2_LEVEL_1_0
  DEF g42 := f65 IADD (GLOBAL h44) <INT>
  f70 := g42 <INT>
  DEF g46 := 8388607 <INT>
  f72 := g46 <INT>
  DEF g47 := f62 IAND f72 <INT>
  f71 := g47 <INT>
  f64 := f71 <INT>
  DEF g48 := 23 <INT>
  DEF g49 := f70 ILSHIFT g48 <INT>
  DEF g50 := f64 IOR g49 <INT>
  f64 := g50 <INT>
  DEF g51 := TRUE <BOOL>
  IF f63 BEQ g51
  THEN IFSTAT_3_SEQ_0_LEVEL_1
  ELSE IFNEXT_3_SEQ_0_LEVEL_1
  LABEL IFSTAT_3_SEQ_0_LEVEL_1
  DEF g52 := 1 <INT>
  DEF g53 := 31 <INT>
  DEF g54 := g52 ILSHIFT g53 <INT>
  DEF g55 := f64 IOR g54 <INT>
  f64 := g55 <INT>
  GOTO IFEND_3_LEVEL_1
  LABEL IFNEXT_3_SEQ_0_LEVEL_1
  LABEL IFEND_3_LEVEL_1
  GOTO IFEND_0_LEVEL_0_1
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_1
  LABEL IFEND_0_LEVEL_0_1
  CALL IntBinaryAsReal([f64 -> g59]<INT>)
  DEF g60 := (RETURN g58) <REAL>
  f61 := g60 <REAL>
  DEF RETURN g61 := f61 <REAL>
 RETURN FROM IntToReal
 PROC LABEL Abs
  DEF f74 := 0 <INT>
  DEF f75 := 0 <INT>
  DEF f76 := (PARAM f77) GE f75 <BOOL>
  DEF f78 := TRUE <BOOL>
  IF f76 BEQ f78
  THEN IFSTAT_0_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_0
  f74 := (PARAM f77) <INT>
  GOTO IFEND_0_LEVEL_0_0
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_0
  CALL INeg([(PARAM f77) -> f81]<INT>)
  DEF f85 := (RETURN f84) <INT>
  f74 := f85 <INT>
  GOTO IFEND_0_LEVEL_0_0
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_0
  LABEL IFEND_0_LEVEL_0_0
  DEF RETURN f86 := f74 <INT>
 RETURN FROM Abs
 PROC LABEL INeg
  DEF f79 := 0 <INT>
  DEF f80 := INOT (PARAM f81) <INT>
  DEF f82 := 1 <INT>
  DEF f83 := f80 IADD f82 <INT>
  f79 := f83 <INT>
  DEF RETURN f84 := f79 <INT>
 RETURN FROM INeg
 PROC LABEL IntIsNegative
  DEF f89 := FALSE <BOOL>
  DEF f90 := 0 <INT>
  DEF f91 := 31 <INT>
  DEF f92 := (PARAM f93) IRSHIFT f91 <INT>
  DEF f94 := 1 <INT>
  DEF f95 := f92 IAND f94 <INT>
  f90 := f95 <INT>
  DEF f96 := 0 <INT>
  DEF f97 := f90 IEQ f96 <BOOL>
  DEF f98 := TRUE <BOOL>
  IF f97 BEQ f98
  THEN IFSTAT_2_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_2_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_2_SEQ_0_LEVEL_0_0
  DEF f99 := FALSE <BOOL>
  f89 := f99 <BOOL>
  GOTO IFEND_2_LEVEL_0_0
  LABEL IFNEXT_2_SEQ_0_LEVEL_0_0
  DEF g10 := TRUE <BOOL>
  f89 := g10 <BOOL>
  GOTO IFEND_2_LEVEL_0_0
  LABEL IFNEXT_2_SEQ_1_LEVEL_0_0
  LABEL IFEND_2_LEVEL_0_0
  DEF RETURN g11 := f89 <BOOL>
 RETURN FROM IntIsNegative
 PROC LABEL IntBinaryAsReal
  DEF g56 := 0.0 <REAL>
  DEF g57 := 0 <INT>
  IPARAM g57 <INT> %dr
  IPARAM (PARAM g59) <INT> %a
  IASM "LDR %dr, %ua"
  IPARAM g57 <INT> %r
  IPARAM g56 <REAL> %da
  IASM "STR %ur, %da"
  DEF RETURN g58 := g56 <REAL>
 RETURN FROM IntBinaryAsReal
 PROC LABEL RGreaterThanOrEqualTo
  DEF d96 := FALSE <BOOL>
  DEF d97 := FALSE <BOOL>
  DEF d98 := FALSE <BOOL>
  DEF d99 := FALSE <BOOL>
  DEF e10 := FALSE <BOOL>
  DEF e11 := FALSE <BOOL>
  DEF e12 := FALSE <BOOL>
  DEF e13 := 0 <INT>
  DEF e14 := 0 <INT>
  DEF e15 := 0 <INT>
  DEF e16 := 0 <INT>
  CALL RealIsZero([(PARAM h61) -> g80]<REAL>)
  DEF e17 := (RETURN g79) <BOOL>
  d97 := e17 <BOOL>
  CALL RealIsZero([(PARAM h62) -> g80]<REAL>)
  DEF e18 := (RETURN g79) <BOOL>
  d98 := e18 <BOOL>
  CALL RealIsNegative([(PARAM h61) -> h16]<REAL>)
  DEF e19 := (RETURN h15) <BOOL>
  d99 := e19 <BOOL>
  CALL RealIsNegative([(PARAM h62) -> h16]<REAL>)
  DEF e20 := (RETURN h15) <BOOL>
  e10 := e20 <BOOL>
  CALL RealIsPositive([(PARAM h61) -> h33]<REAL>)
  DEF e21 := (RETURN h32) <BOOL>
  e11 := e21 <BOOL>
  CALL RealIsPositive([(PARAM h62) -> h33]<REAL>)
  DEF e22 := (RETURN h32) <BOOL>
  e12 := e22 <BOOL>
  DEF e23 := d97 LAND d98 <BOOL>
  DEF e24 := TRUE <BOOL>
  IF e23 BEQ e24
  THEN IFSTAT_73_SEQ_0_LEVEL_0
  ELSE IFNEXT_73_SEQ_0_LEVEL_0
  LABEL IFSTAT_73_SEQ_0_LEVEL_0
  DEF e25 := TRUE <BOOL>
  d96 := e25 <BOOL>
  GOTO IFEND_73_LEVEL_0
  LABEL IFNEXT_73_SEQ_0_LEVEL_0
  DEF e26 := d99 LAND d98 <BOOL>
  DEF e27 := TRUE <BOOL>
  IF e26 BEQ e27
  THEN IFSTAT_73_SEQ_1_LEVEL_0
  ELSE IFNEXT_73_SEQ_1_LEVEL_0
  LABEL IFSTAT_73_SEQ_1_LEVEL_0
  DEF e28 := FALSE <BOOL>
  d96 := e28 <BOOL>
  GOTO IFEND_73_LEVEL_0
  LABEL IFNEXT_73_SEQ_1_LEVEL_0
  DEF e29 := d99 LAND e12 <BOOL>
  DEF e30 := TRUE <BOOL>
  IF e29 BEQ e30
  THEN IFSTAT_73_SEQ_2_LEVEL_0
  ELSE IFNEXT_73_SEQ_2_LEVEL_0
  LABEL IFSTAT_73_SEQ_2_LEVEL_0
  DEF e31 := FALSE <BOOL>
  d96 := e31 <BOOL>
  GOTO IFEND_73_LEVEL_0
  LABEL IFNEXT_73_SEQ_2_LEVEL_0
  DEF e32 := e11 LAND d98 <BOOL>
  DEF e33 := TRUE <BOOL>
  IF e32 BEQ e33
  THEN IFSTAT_73_SEQ_3_LEVEL_0
  ELSE IFNEXT_73_SEQ_3_LEVEL_0
  LABEL IFSTAT_73_SEQ_3_LEVEL_0
  DEF e34 := TRUE <BOOL>
  d96 := e34 <BOOL>
  GOTO IFEND_73_LEVEL_0
  LABEL IFNEXT_73_SEQ_3_LEVEL_0
  DEF e35 := e11 LAND e10 <BOOL>
  DEF e36 := TRUE <BOOL>
  IF e35 BEQ e36
  THEN IFSTAT_73_SEQ_4_LEVEL_0
  ELSE IFNEXT_73_SEQ_4_LEVEL_0
  LABEL IFSTAT_73_SEQ_4_LEVEL_0
  DEF e37 := TRUE <BOOL>
  d96 := e37 <BOOL>
  GOTO IFEND_73_LEVEL_0
  LABEL IFNEXT_73_SEQ_4_LEVEL_0
  DEF e38 := d97 LAND e12 <BOOL>
  DEF e39 := TRUE <BOOL>
  IF e38 BEQ e39
  THEN IFSTAT_73_SEQ_5_LEVEL_0
  ELSE IFNEXT_73_SEQ_5_LEVEL_0
  LABEL IFSTAT_73_SEQ_5_LEVEL_0
  DEF e40 := FALSE <BOOL>
  d96 := e40 <BOOL>
  GOTO IFEND_73_LEVEL_0
  LABEL IFNEXT_73_SEQ_5_LEVEL_0
  DEF e41 := d97 LAND e10 <BOOL>
  DEF e42 := TRUE <BOOL>
  IF e41 BEQ e42
  THEN IFSTAT_73_SEQ_6_LEVEL_0
  ELSE IFNEXT_73_SEQ_6_LEVEL_0
  LABEL IFSTAT_73_SEQ_6_LEVEL_0
  DEF e43 := TRUE <BOOL>
  d96 := e43 <BOOL>
  GOTO IFEND_73_LEVEL_0
  LABEL IFNEXT_73_SEQ_6_LEVEL_0
  DEF e44 := d99 LAND e10 <BOOL>
  DEF e45 := TRUE <BOOL>
  IF e44 BEQ e45
  THEN IFSTAT_73_SEQ_7_LEVEL_0
  ELSE IFNEXT_73_SEQ_7_LEVEL_0
  LABEL IFSTAT_73_SEQ_7_LEVEL_0
  CALL RealExponent([(PARAM h61) -> h46]<REAL>)
  DEF e46 := (RETURN h45) <INT>
  e13 := e46 <INT>
  CALL RealExponent([(PARAM h62) -> h46]<REAL>)
  DEF e47 := (RETURN h45) <INT>
  e14 := e47 <INT>
  DEF e48 := e13 LT e14 <BOOL>
  DEF e49 := TRUE <BOOL>
  IF e48 BEQ e49
  THEN IFSTAT_74_SEQ_0_LEVEL_1
  ELSE IFNEXT_74_SEQ_0_LEVEL_1
  LABEL IFSTAT_74_SEQ_0_LEVEL_1
  DEF e50 := TRUE <BOOL>
  d96 := e50 <BOOL>
  GOTO IFEND_74_LEVEL_1
  LABEL IFNEXT_74_SEQ_0_LEVEL_1
  DEF e51 := e13 IEQ e14 <BOOL>
  DEF e52 := TRUE <BOOL>
  IF e51 BEQ e52
  THEN IFSTAT_74_SEQ_1_LEVEL_1
  ELSE IFNEXT_74_SEQ_1_LEVEL_1
  LABEL IFSTAT_74_SEQ_1_LEVEL_1
  CALL RealMantissa([(PARAM h61) -> h59]<REAL>)
  DEF e53 := (RETURN h58) <INT>
  e15 := e53 <INT>
  CALL RealMantissa([(PARAM h62) -> h59]<REAL>)
  DEF e54 := (RETURN h58) <INT>
  e16 := e54 <INT>
  DEF e55 := e15 LE e16 <BOOL>
  DEF e56 := TRUE <BOOL>
  IF e55 BEQ e56
  THEN IFSTAT_75_SEQ_0_LEVEL_2
  ELSE IFNEXT_75_SEQ_0_LEVEL_2
  LABEL IFSTAT_75_SEQ_0_LEVEL_2
  DEF e57 := TRUE <BOOL>
  d96 := e57 <BOOL>
  GOTO IFEND_75_LEVEL_2
  LABEL IFNEXT_75_SEQ_0_LEVEL_2
  DEF e58 := FALSE <BOOL>
  d96 := e58 <BOOL>
  GOTO IFEND_75_LEVEL_2
  LABEL IFNEXT_75_SEQ_1_LEVEL_2
  LABEL IFEND_75_LEVEL_2
  GOTO IFEND_74_LEVEL_1
  LABEL IFNEXT_74_SEQ_1_LEVEL_1
  DEF e59 := FALSE <BOOL>
  d96 := e59 <BOOL>
  GOTO IFEND_74_LEVEL_1
  LABEL IFNEXT_74_SEQ_2_LEVEL_1
  LABEL IFEND_74_LEVEL_1
  GOTO IFEND_73_LEVEL_0
  LABEL IFNEXT_73_SEQ_7_LEVEL_0
  DEF e60 := e11 LAND e12 <BOOL>
  DEF e61 := TRUE <BOOL>
  IF e60 BEQ e61
  THEN IFSTAT_73_SEQ_8_LEVEL_0
  ELSE IFNEXT_73_SEQ_8_LEVEL_0
  LABEL IFSTAT_73_SEQ_8_LEVEL_0
  CALL RealExponent([(PARAM h61) -> h46]<REAL>)
  DEF e62 := (RETURN h45) <INT>
  e13 := e62 <INT>
  CALL RealExponent([(PARAM h62) -> h46]<REAL>)
  DEF e63 := (RETURN h45) <INT>
  e13 := e63 <INT>
  DEF e64 := e13 GT e14 <BOOL>
  DEF e65 := TRUE <BOOL>
  IF e64 BEQ e65
  THEN IFSTAT_79_SEQ_0_LEVEL_1
  ELSE IFNEXT_79_SEQ_0_LEVEL_1
  LABEL IFSTAT_79_SEQ_0_LEVEL_1
  DEF e66 := TRUE <BOOL>
  d96 := e66 <BOOL>
  GOTO IFEND_79_LEVEL_1
  LABEL IFNEXT_79_SEQ_0_LEVEL_1
  DEF e67 := e13 IEQ e14 <BOOL>
  DEF e68 := TRUE <BOOL>
  IF e67 BEQ e68
  THEN IFSTAT_79_SEQ_1_LEVEL_1
  ELSE IFNEXT_79_SEQ_1_LEVEL_1
  LABEL IFSTAT_79_SEQ_1_LEVEL_1
  CALL RealMantissa([(PARAM h61) -> h59]<REAL>)
  DEF e69 := (RETURN h58) <INT>
  e15 := e69 <INT>
  CALL RealMantissa([(PARAM h62) -> h59]<REAL>)
  DEF e70 := (RETURN h58) <INT>
  e16 := e70 <INT>
  DEF e71 := e15 GE e16 <BOOL>
  DEF e72 := TRUE <BOOL>
  IF e71 BEQ e72
  THEN IFSTAT_80_SEQ_0_LEVEL_2
  ELSE IFNEXT_80_SEQ_0_LEVEL_2
  LABEL IFSTAT_80_SEQ_0_LEVEL_2
  DEF e73 := TRUE <BOOL>
  d96 := e73 <BOOL>
  GOTO IFEND_80_LEVEL_2
  LABEL IFNEXT_80_SEQ_0_LEVEL_2
  DEF e74 := FALSE <BOOL>
  d96 := e74 <BOOL>
  GOTO IFEND_80_LEVEL_2
  LABEL IFNEXT_80_SEQ_1_LEVEL_2
  LABEL IFEND_80_LEVEL_2
  GOTO IFEND_79_LEVEL_1
  LABEL IFNEXT_79_SEQ_1_LEVEL_1
  DEF e75 := FALSE <BOOL>
  d96 := e75 <BOOL>
  GOTO IFEND_79_LEVEL_1
  LABEL IFNEXT_79_SEQ_2_LEVEL_1
  LABEL IFEND_79_LEVEL_1
  GOTO IFEND_73_LEVEL_0
  LABEL IFNEXT_73_SEQ_8_LEVEL_0
  LABEL IFEND_73_LEVEL_0
  DEF RETURN h60 := d96 <BOOL>
 RETURN FROM RGreaterThanOrEqualTo
 PROC LABEL RealIsZero
  DEF g64 := FALSE <BOOL>
  DEF g65 := 0 <INT>
  DEF g66 := 0 <INT>
  CALL RealBinaryAsInt([(PARAM g80) -> g69]<REAL>)
  DEF g71 := (RETURN g70) <INT>
  g66 := g71 <INT>
  DEF g72 := 2147483647 <INT>
  DEF g73 := g66 IAND g72 <INT>
  g65 := g73 <INT>
  DEF g74 := 0 <INT>
  DEF g75 := g65 IEQ g74 <BOOL>
  DEF g76 := TRUE <BOOL>
  IF g75 BEQ g76
  THEN IFSTAT_0_SEQ_0_LEVEL_0_2
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_2
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_2
  DEF g77 := TRUE <BOOL>
  g64 := g77 <BOOL>
  GOTO IFEND_0_LEVEL_0_2
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_2
  DEF g78 := FALSE <BOOL>
  g64 := g78 <BOOL>
  GOTO IFEND_0_LEVEL_0_2
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_2
  LABEL IFEND_0_LEVEL_0_2
  DEF RETURN g79 := g64 <BOOL>
 RETURN FROM RealIsZero
 PROC LABEL RealBinaryAsInt
  DEF g67 := 0 <INT>
  DEF g68 := 0.0 <REAL>
  IPARAM g68 <REAL> %dr
  IPARAM (PARAM g69) <REAL> %a
  IASM "LDR %dr, %ua"
  IPARAM g68 <REAL> %r
  IPARAM g67 <INT> %da
  IASM "STR %ur, %da"
  DEF RETURN g70 := g67 <INT>
 RETURN FROM RealBinaryAsInt
 PROC LABEL RealIsNegative
  DEF g81 := FALSE <BOOL>
  DEF g82 := 0 <INT>
  DEF g83 := 0 <INT>
  CALL RealSign([(PARAM h16) -> g92]<REAL>)
  DEF g93 := (RETURN g91) <INT>
  g83 := g93 <INT>
  CALL RealBinaryAsInt([(PARAM h16) -> g69]<REAL>)
  DEF g94 := (RETURN g70) <INT>
  DEF g95 := 2147483647 <INT>
  DEF g96 := g94 IAND g95 <INT>
  g82 := g96 <INT>
  DEF g97 := 1 <INT>
  DEF g98 := g83 IEQ g97 <BOOL>
  CALL IntIsZero([g82 -> f45]<INT>)
  DEF g99 := (RETURN f49) <BOOL>
  DEF h10 := BNOT g99 <BOOL>
  DEF h11 := g98 LAND h10 <BOOL>
  DEF h12 := TRUE <BOOL>
  IF h11 BEQ h12
  THEN IFSTAT_3_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_3_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_3_SEQ_0_LEVEL_0_0
  DEF h13 := TRUE <BOOL>
  g81 := h13 <BOOL>
  GOTO IFEND_3_LEVEL_0_0
  LABEL IFNEXT_3_SEQ_0_LEVEL_0_0
  DEF h14 := FALSE <BOOL>
  g81 := h14 <BOOL>
  GOTO IFEND_3_LEVEL_0_0
  LABEL IFNEXT_3_SEQ_1_LEVEL_0_0
  LABEL IFEND_3_LEVEL_0_0
  DEF RETURN h15 := g81 <BOOL>
 RETURN FROM RealIsNegative
 PROC LABEL RealSign
  DEF g84 := 0 <INT>
  DEF g85 := 0 <INT>
  CALL RealBinaryAsInt([(PARAM g92) -> g69]<REAL>)
  DEF g86 := (RETURN g70) <INT>
  g85 := g86 <INT>
  DEF g87 := 31 <INT>
  DEF g88 := g85 IRSHIFT g87 <INT>
  DEF g89 := 1 <INT>
  DEF g90 := g88 IAND g89 <INT>
  g84 := g90 <INT>
  DEF RETURN g91 := g84 <INT>
 RETURN FROM RealSign
 PROC LABEL RealIsPositive
  DEF h17 := FALSE <BOOL>
  DEF h18 := 0 <INT>
  DEF h19 := 0 <INT>
  CALL RealSign([(PARAM h33) -> g92]<REAL>)
  DEF h20 := (RETURN g91) <INT>
  h19 := h20 <INT>
  CALL RealBinaryAsInt([(PARAM h33) -> g69]<REAL>)
  DEF h21 := (RETURN g70) <INT>
  DEF h22 := 2147483647 <INT>
  DEF h23 := h21 IAND h22 <INT>
  h18 := h23 <INT>
  DEF h24 := 0 <INT>
  DEF h25 := h19 IEQ h24 <BOOL>
  CALL IntIsZero([h18 -> f45]<INT>)
  DEF h26 := (RETURN f49) <BOOL>
  DEF h27 := BNOT h26 <BOOL>
  DEF h28 := h25 LAND h27 <BOOL>
  DEF h29 := TRUE <BOOL>
  IF h28 BEQ h29
  THEN IFSTAT_5_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_5_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_5_SEQ_0_LEVEL_0_0
  DEF h30 := TRUE <BOOL>
  h17 := h30 <BOOL>
  GOTO IFEND_5_LEVEL_0_0
  LABEL IFNEXT_5_SEQ_0_LEVEL_0_0
  DEF h31 := FALSE <BOOL>
  h17 := h31 <BOOL>
  GOTO IFEND_5_LEVEL_0_0
  LABEL IFNEXT_5_SEQ_1_LEVEL_0_0
  LABEL IFEND_5_LEVEL_0_0
  DEF RETURN h32 := h17 <BOOL>
 RETURN FROM RealIsPositive
 PROC LABEL RealExponent
  DEF h34 := 0 <INT>
  DEF h35 := 0 <INT>
  DEF h36 := 0 <INT>
  CALL RealBinaryAsInt([(PARAM h46) -> g69]<REAL>)
  DEF h37 := (RETURN g70) <INT>
  h35 := h37 <INT>
  DEF h38 := 23 <INT>
  DEF h39 := h35 IRSHIFT h38 <INT>
  DEF h40 := 255 <INT>
  DEF h41 := h39 IAND h40 <INT>
  h36 := h41 <INT>
  DEF h42 := h36 ISUB (GLOBAL h44) <INT>
  h34 := h42 <INT>
  DEF RETURN h45 := h34 <INT>
 RETURN FROM RealExponent
 PROC LABEL RealMantissa
  DEF h47 := 0 <INT>
  DEF h48 := 0 <INT>
  DEF h49 := 0 <INT>
  DEF h50 := 0 <INT>
  CALL RealBinaryAsInt([(PARAM h59) -> g69]<REAL>)
  DEF h51 := (RETURN g70) <INT>
  h48 := h51 <INT>
  DEF h52 := 8388607 <INT>
  DEF h53 := h48 IAND h52 <INT>
  h49 := h53 <INT>
  CALL RealIsZero([(PARAM h59) -> g80]<REAL>)
  DEF h54 := (RETURN g79) <BOOL>
  DEF h55 := TRUE <BOOL>
  IF h54 BEQ h55
  THEN IFSTAT_6_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_6_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_6_SEQ_0_LEVEL_0_0
  h47 := h49 <INT>
  GOTO IFEND_6_LEVEL_0_0
  LABEL IFNEXT_6_SEQ_0_LEVEL_0_0
  DEF h56 := 8388608 <INT>
  DEF h57 := h49 IOR h56 <INT>
  h47 := h57 <INT>
  GOTO IFEND_6_LEVEL_0_0
  LABEL IFNEXT_6_SEQ_1_LEVEL_0
  LABEL IFEND_6_LEVEL_0_0
  DEF RETURN h58 := h47 <INT>
 RETURN FROM RealMantissa
