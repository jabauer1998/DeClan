SYMBOL SECTION
 ENTRY f33 CONST INTERNAL GLOBAL a  <INT>
 ENTRY f35 CONST INTERNAL GLOBAL e  <BOOL>
 ENTRY f37 CONST INTERNAL GLOBAL x  <REAL>
 ENTRY f38 INTERNAL GLOBAL result  <BOOL>
 ENTRY f40 INTERNAL addressHolder WriteString <INT>
 ENTRY f41 INTERNAL offsetHolder WriteString <INT>
 ENTRY f42 INTERNAL valueHolder WriteString <INT>
 ENTRY f43 INTERNAL tempHolder WriteString <INT>
 ENTRY f44 INTERNAL result StringAsAddress <INT>
 ENTRY f45 INTERNAL temp StringAsAddress <INT>
 ENTRY f46 INTERNAL PARAM s StringAsAddress 0 <STRING>
 ENTRY f47 INTERNAL RETURN StringAsAddress <INT>
 ENTRY f65 INTERNAL PARAM s WriteString 0 <STRING>
 ENTRY f50 INTERNAL result IntIsZero <BOOL>
 ENTRY f53 INTERNAL PARAM n IntIsZero 0 <INT>
 ENTRY f57 INTERNAL RETURN IntIsZero <BOOL>
 ENTRY f66 INTERNAL tempReg WriteBool <INT>
 ENTRY f67 INTERNAL PARAM b WriteBool 0 <BOOL>
 ENTRY f69 INTERNAL result IntToReal <REAL>
 ENTRY f70 INTERNAL absN IntToReal <INT>
 ENTRY f71 INTERNAL isNeg IntToReal <BOOL>
 ENTRY f72 INTERNAL intResult IntToReal <INT>
 ENTRY f73 INTERNAL furthestOne IntToReal <INT>
 ENTRY f74 INTERNAL count IntToReal <INT>
 ENTRY f75 INTERNAL tempN IntToReal <INT>
 ENTRY f76 INTERNAL lastBit IntToReal <INT>
 ENTRY f77 INTERNAL fullExponent IntToReal <INT>
 ENTRY f78 INTERNAL exponent IntToReal <INT>
 ENTRY f79 INTERNAL mantissa IntToReal <INT>
 ENTRY f80 INTERNAL mantissaMask IntToReal <INT>
 ENTRY f81 INTERNAL toShiftOver IntToReal <INT>
 ENTRY f82 INTERNAL result Abs <INT>
 ENTRY f85 INTERNAL PARAM n Abs 0 <INT>
 ENTRY f87 INTERNAL result INeg <INT>
 ENTRY f89 INTERNAL PARAM n INeg 0 <INT>
 ENTRY f92 INTERNAL RETURN INeg <INT>
 ENTRY f94 INTERNAL RETURN Abs <INT>
 ENTRY g70 INTERNAL PARAM n IntToReal 0 <INT>
 ENTRY f97 INTERNAL result IntIsNegative <BOOL>
 ENTRY f98 INTERNAL thirtyFirstBit IntIsNegative <INT>
 ENTRY g11 INTERNAL PARAM n IntIsNegative 0 <INT>
 ENTRY g19 INTERNAL RETURN IntIsNegative <BOOL>
 ENTRY h52 CONST INTERNAL GLOBAL realBias  <INT>
 ENTRY g64 INTERNAL result IntBinaryAsReal <REAL>
 ENTRY g65 INTERNAL temp IntBinaryAsReal <INT>
 ENTRY g66 INTERNAL RETURN IntBinaryAsReal <REAL>
 ENTRY g69 INTERNAL RETURN IntToReal <REAL>
 ENTRY e14 INTERNAL result RGreaterThanOrEqualTo <BOOL>
 ENTRY e15 INTERNAL n1IsZero RGreaterThanOrEqualTo <BOOL>
 ENTRY e16 INTERNAL n2IsZero RGreaterThanOrEqualTo <BOOL>
 ENTRY e17 INTERNAL n1IsNegative RGreaterThanOrEqualTo <BOOL>
 ENTRY e18 INTERNAL n2IsNegative RGreaterThanOrEqualTo <BOOL>
 ENTRY e19 INTERNAL n1IsPositive RGreaterThanOrEqualTo <BOOL>
 ENTRY e20 INTERNAL n2IsPositive RGreaterThanOrEqualTo <BOOL>
 ENTRY e21 INTERNAL n1Exp RGreaterThanOrEqualTo <INT>
 ENTRY e22 INTERNAL n2Exp RGreaterThanOrEqualTo <INT>
 ENTRY e23 INTERNAL n1Value RGreaterThanOrEqualTo <INT>
 ENTRY e24 INTERNAL n2Value RGreaterThanOrEqualTo <INT>
 ENTRY g72 INTERNAL result RealIsZero <BOOL>
 ENTRY g73 INTERNAL val RealIsZero <INT>
 ENTRY g74 INTERNAL exp RealIsZero <INT>
 ENTRY g75 INTERNAL result RealBinaryAsInt <INT>
 ENTRY g76 INTERNAL temp RealBinaryAsInt <REAL>
 ENTRY g77 INTERNAL PARAM r RealBinaryAsInt 0 <REAL>
 ENTRY g78 INTERNAL RETURN RealBinaryAsInt <INT>
 ENTRY g88 INTERNAL PARAM r RealIsZero 0 <REAL>
 ENTRY g87 INTERNAL RETURN RealIsZero <BOOL>
 ENTRY h69 INTERNAL PARAM n1 RGreaterThanOrEqualTo 0 <REAL>
 ENTRY h70 INTERNAL PARAM n2 RGreaterThanOrEqualTo 1 <REAL>
 ENTRY g89 INTERNAL result RealIsNegative <BOOL>
 ENTRY g90 INTERNAL rest RealIsNegative <INT>
 ENTRY g91 INTERNAL thirtyFirstBit RealIsNegative <INT>
 ENTRY g92 INTERNAL result RealSign <INT>
 ENTRY g93 INTERNAL realAsInteger RealSign <INT>
 ENTRY h10 INTERNAL PARAM r RealSign 0 <REAL>
 ENTRY g99 INTERNAL RETURN RealSign <INT>
 ENTRY h24 INTERNAL PARAM r RealIsNegative 0 <REAL>
 ENTRY h23 INTERNAL RETURN RealIsNegative <BOOL>
 ENTRY h25 INTERNAL result RealIsPositive <BOOL>
 ENTRY h26 INTERNAL realAsInteger RealIsPositive <INT>
 ENTRY h27 INTERNAL thirtyFirstBit RealIsPositive <INT>
 ENTRY h41 INTERNAL PARAM r RealIsPositive 0 <REAL>
 ENTRY h40 INTERNAL RETURN RealIsPositive <BOOL>
 ENTRY h42 INTERNAL result RealExponent <INT>
 ENTRY h43 INTERNAL realAsInteger RealExponent <INT>
 ENTRY h44 INTERNAL exponent RealExponent <INT>
 ENTRY h54 INTERNAL PARAM r RealExponent 0 <REAL>
 ENTRY h53 INTERNAL RETURN RealExponent <INT>
 ENTRY h55 INTERNAL result RealMantissa <INT>
 ENTRY h56 INTERNAL realAsInt RealMantissa <INT>
 ENTRY h57 INTERNAL significand RealMantissa <INT>
 ENTRY h58 INTERNAL exp RealMantissa <INT>
 ENTRY h67 INTERNAL PARAM r RealMantissa 0 <REAL>
 ENTRY h66 INTERNAL RETURN RealMantissa <INT>
 ENTRY h68 INTERNAL RETURN RGreaterThanOrEqualTo <BOOL>
DATA SECTION
 DEF f32 := 0 <INT>
 DEF GLOBAL f33 := f32 <INT>
 DEF f34 := TRUE <BOOL>
 DEF GLOBAL f35 := f34 <BOOL>
 DEF f36 := 1.0 <REAL>
 DEF GLOBAL f37 := f36 <REAL>
 DEF g51 := 127 <INT>
 DEF GLOBAL h52 := g51 <INT>
BSS SECTION
 DEF GLOBAL f38 := FALSE <BOOL>
CODE SECTION
 DEF f39 := "e is " <STRING>
 CALL WriteString([f39 -> f65]<STRING>) FROM DEF f39 := "e is " <STRING>
 CALL WriteBool([(GLOBAL f35) -> f67]<BOOL>) FROM CALL WriteString([f39 -> f65]<STRING>) FROM DEF f39 := "e is " <STRING>
 CALL WriteLn() FROM CALL WriteBool([(GLOBAL f35) -> f67]<BOOL>) FROM CALL WriteString([f39 -> f65]<STRING>) FROM DEF f39 := "e is " <STRING>
 DEF f68 := BNOT (GLOBAL f35) <BOOL>
 CALL IntToReal([(GLOBAL f33) -> g70]<INT>) FROM DEF f68 := BNOT (GLOBAL f35) <BOOL>
 DEF g71 := (RETURN g69) <REAL>
 CALL RGreaterThanOrEqualTo([(GLOBAL f37) -> h69]<REAL>, [g71 -> h70]<REAL>) FROM DEF g71 := (RETURN g69) <REAL>
 DEF h71 := (RETURN h68) <BOOL>
 DEF h72 := f68 LOR h71 <BOOL>
 GLOBAL f38 := h72 <BOOL>
 CALL WriteBool([(GLOBAL f38) -> f67]<BOOL>) FROM GLOBAL f38 := h72 <BOOL>
END
PROC SECTION
 PROC LABEL WriteString
  DEF f40 := 0 <INT>
  DEF f41 := 0 <INT>
  DEF f42 := 0 <INT>
  DEF f43 := 0 <INT>
  CALL StringAsAddress([(PARAM f65) -> f46]<STRING>) FROM DEF f43 := 0 <INT>
  DEF f48 := (RETURN f47) <INT>
  f40 := f48 <INT>
  DEF f49 := 0 <INT>
  f41 := f49 <INT>
  IPARAM f42
  IPARAM f40
  IPARAM f41
  IASM "LDRB %r, [%r, +%r]"
  IPARAM f42
  IPARAM f42
  IASM "STR %r, %a"
  CALL IntIsZero([f42 -> f53]<INT>) FROM IPARAM f42
  IPARAM f42
  IASM "STR %r, %a"
  DEF f58 := (RETURN f57) <BOOL>
  DEF f59 := BNOT f58 <BOOL>
  DEF f60 := TRUE <BOOL>
  IF f59 BEQ f60
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_0
  ELSE WHILENEXT_0_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_0_SEQ_0_LEVEL_0_0
  IF f59 BEQ f60
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_0
  ELSE WHILEEND_0_LEVEL_0_0
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0_0
  IPARAM f43
  IASM "MOV %r, R0"
  IPARAM f42
  IASM "MOV R0, %r"
  IASM "SWI 6"
  DEF f61 := 1 <INT>
  DEF f62 := f41 IADD f61 <INT>
  f41 := f62 <INT>
  IPARAM f42
  IPARAM f40
  IPARAM f41
  IASM "LDRB %r, [%r, +%r]"
  IPARAM f42
  IPARAM f42
  IASM "STR %r, %a"
  IPARAM f43
  IASM "MOV R0, %r"
  CALL IntIsZero([f42 -> f53]<INT>) FROM IPARAM f43
  IASM "MOV R0, %r"
  DEF f63 := (RETURN f57) <BOOL>
  DEF f64 := BNOT f63 <BOOL>
  f59 := f64 <BOOL>
  GOTO WHILECOND_0_SEQ_0_LEVEL_0_0 FROM f59 := f64 <BOOL>
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_0_LEVEL_0_0
 RETURN FROM WriteString
 PROC LABEL StringAsAddress
  DEF f44 := 0 <INT>
  DEF f45 := 0 <INT>
  IPARAM f45
  IPARAM (PARAM f46)
  IASM "LDR %r, %a"
  IPARAM f45
  IPARAM f44
  IASM "STR %r, %a"
  DEF RETURN f47 := f44 <INT>
 RETURN FROM StringAsAddress
 PROC LABEL IntIsZero
  DEF f50 := FALSE <BOOL>
  DEF f51 := 0 <INT>
  DEF f52 := (PARAM f53) IEQ f51 <BOOL>
  DEF f54 := TRUE <BOOL>
  IF f52 BEQ f54
  THEN IFSTAT_1_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_1_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_0
  DEF f55 := TRUE <BOOL>
  f50 := f55 <BOOL>
  GOTO IFEND_1_LEVEL_0_0 FROM f50 := f55 <BOOL>
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_0
  DEF f56 := FALSE <BOOL>
  f50 := f56 <BOOL>
  GOTO IFEND_1_LEVEL_0_0 FROM f50 := f56 <BOOL>
  LABEL IFNEXT_1_SEQ_1_LEVEL_0_0
  LABEL IFEND_1_LEVEL_0_0
  DEF RETURN f57 := f50 <BOOL>
 RETURN FROM IntIsZero
 PROC LABEL WriteBool
  DEF f66 := 0 <INT>
  IPARAM f66
  IASM "MOV %r, R0"
  IPARAM (PARAM f67)
  IASM "LDRB R0, %a"
  IASM "SWI 6"
  IPARAM f66
  IASM "MOV R0, %r"
 RETURN FROM WriteBool
 PROC LABEL WriteLn
  IASM "SWI 4"
 RETURN FROM WriteLn
 PROC LABEL IntToReal
  DEF f69 := 0.0 <REAL>
  DEF f70 := 0 <INT>
  DEF f71 := FALSE <BOOL>
  DEF f72 := 0 <INT>
  DEF f73 := 0 <INT>
  DEF f74 := 0 <INT>
  DEF f75 := 0 <INT>
  DEF f76 := 0 <INT>
  DEF f77 := 0 <INT>
  DEF f78 := 0 <INT>
  DEF f79 := 0 <INT>
  DEF f80 := 0 <INT>
  DEF f81 := 0 <INT>
  CALL Abs([(PARAM g70) -> f85]<INT>) FROM DEF f81 := 0 <INT>
  DEF f95 := (RETURN f94) <INT>
  f70 := f95 <INT>
  f75 := f70 <INT>
  DEF f96 := 0 <INT>
  f74 := f96 <INT>
  CALL IntIsNegative([(PARAM g70) -> g11]<INT>) FROM f74 := f96 <INT>
  DEF g20 := (RETURN g19) <BOOL>
  f71 := g20 <BOOL>
  CALL IntIsZero([f75 -> f53]<INT>) FROM f71 := g20 <BOOL>
  DEF g21 := (RETURN f57) <BOOL>
  DEF g22 := TRUE <BOOL>
  IF g21 BEQ g22
  THEN IFSTAT_0_SEQ_0_LEVEL_0_1
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_1
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_1
  DEF g23 := 0 <INT>
  f72 := g23 <INT>
  GOTO IFEND_0_LEVEL_0_1 FROM f72 := g23 <INT>
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_1
  CALL IntIsZero([f75 -> f53]<INT>) FROM LABEL IFNEXT_0_SEQ_0_LEVEL_0_1
  DEF g24 := (RETURN f57) <BOOL>
  DEF g25 := BNOT g24 <BOOL>
  DEF g26 := TRUE <BOOL>
  IF g25 BEQ g26
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_1
  ELSE WHILENEXT_0_SEQ_0_LEVEL_0_1
  LABEL WHILECOND_0_SEQ_0_LEVEL_0_1
  IF g25 BEQ g26
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_1
  ELSE WHILEEND_0_LEVEL_0_1
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0_1
  DEF g27 := 1 <INT>
  DEF g28 := f75 IAND g27 <INT>
  f76 := g28 <INT>
  DEF g29 := 1 <INT>
  DEF g30 := f76 IEQ g29 <BOOL>
  DEF g31 := TRUE <BOOL>
  IF g30 BEQ g31
  THEN IFSTAT_1_SEQ_0_LEVEL_1
  ELSE IFNEXT_1_SEQ_0_LEVEL_1
  LABEL IFSTAT_1_SEQ_0_LEVEL_1
  f73 := f74 <INT>
  GOTO IFEND_1_LEVEL_1 FROM f73 := f74 <INT>
  LABEL IFNEXT_1_SEQ_0_LEVEL_1
  LABEL IFEND_1_LEVEL_1
  DEF g32 := 1 <INT>
  DEF g33 := f74 IADD g32 <INT>
  f74 := g33 <INT>
  DEF g34 := 1 <INT>
  DEF g35 := f75 IRSHIFT g34 <INT>
  f75 := g35 <INT>
  CALL IntIsZero([f75 -> f53]<INT>) FROM f75 := g35 <INT>
  DEF g36 := (RETURN f57) <BOOL>
  DEF g37 := BNOT g36 <BOOL>
  g25 := g37 <BOOL>
  GOTO WHILECOND_0_SEQ_0_LEVEL_0_1 FROM g25 := g37 <BOOL>
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0_1
  LABEL WHILEEND_0_LEVEL_0_1
  DEF g38 := 23 <INT>
  DEF g39 := f73 GT g38 <BOOL>
  DEF g40 := TRUE <BOOL>
  IF g39 BEQ g40
  THEN IFSTAT_2_SEQ_0_LEVEL_1_0
  ELSE IFNEXT_2_SEQ_0_LEVEL_1_0
  LABEL IFSTAT_2_SEQ_0_LEVEL_1_0
  DEF g41 := 23 <INT>
  DEF g42 := f73 ISUB g41 <INT>
  DEF g43 := f70 IRSHIFT g42 <INT>
  f70 := g43 <INT>
  GOTO IFEND_2_LEVEL_1_0 FROM f70 := g43 <INT>
  LABEL IFNEXT_2_SEQ_0_LEVEL_1_0
  DEF g44 := 23 <INT>
  DEF g45 := f73 LT g44 <BOOL>
  DEF g46 := TRUE <BOOL>
  IF g45 BEQ g46
  THEN IFSTAT_2_SEQ_1_LEVEL_1_0
  ELSE IFNEXT_2_SEQ_1_LEVEL_1_0
  LABEL IFSTAT_2_SEQ_1_LEVEL_1_0
  DEF g47 := 23 <INT>
  DEF g48 := g47 ISUB f73 <INT>
  DEF g49 := f70 ILSHIFT g48 <INT>
  f70 := g49 <INT>
  GOTO IFEND_2_LEVEL_1_0 FROM f70 := g49 <INT>
  LABEL IFNEXT_2_SEQ_1_LEVEL_1_0
  LABEL IFEND_2_LEVEL_1_0
  DEF g50 := f73 IADD (GLOBAL h52) <INT>
  f78 := g50 <INT>
  DEF g54 := 8388607 <INT>
  f80 := g54 <INT>
  DEF g55 := f70 IAND f80 <INT>
  f79 := g55 <INT>
  f72 := f79 <INT>
  DEF g56 := 23 <INT>
  DEF g57 := f78 ILSHIFT g56 <INT>
  DEF g58 := f72 IOR g57 <INT>
  f72 := g58 <INT>
  DEF g59 := TRUE <BOOL>
  IF f71 BEQ g59
  THEN IFSTAT_3_SEQ_0_LEVEL_1
  ELSE IFNEXT_3_SEQ_0_LEVEL_1
  LABEL IFSTAT_3_SEQ_0_LEVEL_1
  DEF g60 := 1 <INT>
  DEF g61 := 31 <INT>
  DEF g62 := g60 ILSHIFT g61 <INT>
  DEF g63 := f72 IOR g62 <INT>
  f72 := g63 <INT>
  GOTO IFEND_3_LEVEL_1 FROM f72 := g63 <INT>
  LABEL IFNEXT_3_SEQ_0_LEVEL_1
  LABEL IFEND_3_LEVEL_1
  GOTO IFEND_0_LEVEL_0_1 FROM LABEL IFEND_3_LEVEL_1
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_1
  LABEL IFEND_0_LEVEL_0_1
  CALL IntBinaryAsReal([f72 -> g67]<INT>) FROM LABEL IFEND_0_LEVEL_0_1
  DEF g68 := (RETURN g66) <REAL>
  f69 := g68 <REAL>
  DEF RETURN g69 := f69 <REAL>
 RETURN FROM IntToReal
 PROC LABEL Abs
  DEF f82 := 0 <INT>
  DEF f83 := 0 <INT>
  DEF f84 := (PARAM f85) GE f83 <BOOL>
  DEF f86 := TRUE <BOOL>
  IF f84 BEQ f86
  THEN IFSTAT_0_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_0
  f82 := (PARAM f85) <INT>
  GOTO IFEND_0_LEVEL_0_0 FROM f82 := (PARAM f85) <INT>
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_0
  CALL INeg([(PARAM f85) -> f89]<INT>) FROM LABEL IFNEXT_0_SEQ_0_LEVEL_0_0
  DEF f93 := (RETURN f92) <INT>
  f82 := f93 <INT>
  GOTO IFEND_0_LEVEL_0_0 FROM f82 := f93 <INT>
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_0
  LABEL IFEND_0_LEVEL_0_0
  DEF RETURN f94 := f82 <INT>
 RETURN FROM Abs
 PROC LABEL INeg
  DEF f87 := 0 <INT>
  DEF f88 := INOT (PARAM f89) <INT>
  DEF f90 := 1 <INT>
  DEF f91 := f88 IADD f90 <INT>
  f87 := f91 <INT>
  DEF RETURN f92 := f87 <INT>
 RETURN FROM INeg
 PROC LABEL IntIsNegative
  DEF f97 := FALSE <BOOL>
  DEF f98 := 0 <INT>
  DEF f99 := 31 <INT>
  DEF g10 := (PARAM g11) IRSHIFT f99 <INT>
  DEF g12 := 1 <INT>
  DEF g13 := g10 IAND g12 <INT>
  f98 := g13 <INT>
  DEF g14 := 0 <INT>
  DEF g15 := f98 IEQ g14 <BOOL>
  DEF g16 := TRUE <BOOL>
  IF g15 BEQ g16
  THEN IFSTAT_2_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_2_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_2_SEQ_0_LEVEL_0_0
  DEF g17 := FALSE <BOOL>
  f97 := g17 <BOOL>
  GOTO IFEND_2_LEVEL_0_0 FROM f97 := g17 <BOOL>
  LABEL IFNEXT_2_SEQ_0_LEVEL_0_0
  DEF g18 := TRUE <BOOL>
  f97 := g18 <BOOL>
  GOTO IFEND_2_LEVEL_0_0 FROM f97 := g18 <BOOL>
  LABEL IFNEXT_2_SEQ_1_LEVEL_0_0
  LABEL IFEND_2_LEVEL_0_0
  DEF RETURN g19 := f97 <BOOL>
 RETURN FROM IntIsNegative
 PROC LABEL IntBinaryAsReal
  DEF g64 := 0.0 <REAL>
  DEF g65 := 0 <INT>
  IPARAM g65
  IPARAM (PARAM g67)
  IASM "LDR %r, %a"
  IPARAM g65
  IPARAM g64
  IASM "STR %r, %a"
  DEF RETURN g66 := g64 <REAL>
 RETURN FROM IntBinaryAsReal
 PROC LABEL RGreaterThanOrEqualTo
  DEF e14 := FALSE <BOOL>
  DEF e15 := FALSE <BOOL>
  DEF e16 := FALSE <BOOL>
  DEF e17 := FALSE <BOOL>
  DEF e18 := FALSE <BOOL>
  DEF e19 := FALSE <BOOL>
  DEF e20 := FALSE <BOOL>
  DEF e21 := 0 <INT>
  DEF e22 := 0 <INT>
  DEF e23 := 0 <INT>
  DEF e24 := 0 <INT>
  CALL RealIsZero([(PARAM h69) -> g88]<REAL>) FROM DEF e24 := 0 <INT>
  DEF e25 := (RETURN g87) <BOOL>
  e15 := e25 <BOOL>
  CALL RealIsZero([(PARAM h70) -> g88]<REAL>) FROM e15 := e25 <BOOL>
  DEF e26 := (RETURN g87) <BOOL>
  e16 := e26 <BOOL>
  CALL RealIsNegative([(PARAM h69) -> h24]<REAL>) FROM e16 := e26 <BOOL>
  DEF e27 := (RETURN h23) <BOOL>
  e17 := e27 <BOOL>
  CALL RealIsNegative([(PARAM h70) -> h24]<REAL>) FROM e17 := e27 <BOOL>
  DEF e28 := (RETURN h23) <BOOL>
  e18 := e28 <BOOL>
  CALL RealIsPositive([(PARAM h69) -> h41]<REAL>) FROM e18 := e28 <BOOL>
  DEF e29 := (RETURN h40) <BOOL>
  e19 := e29 <BOOL>
  CALL RealIsPositive([(PARAM h70) -> h41]<REAL>) FROM e19 := e29 <BOOL>
  DEF e30 := (RETURN h40) <BOOL>
  e20 := e30 <BOOL>
  DEF e31 := e15 LAND e16 <BOOL>
  DEF e32 := TRUE <BOOL>
  IF e31 BEQ e32
  THEN IFSTAT_73_SEQ_0_LEVEL_0
  ELSE IFNEXT_73_SEQ_0_LEVEL_0
  LABEL IFSTAT_73_SEQ_0_LEVEL_0
  DEF e33 := TRUE <BOOL>
  e14 := e33 <BOOL>
  GOTO IFEND_73_LEVEL_0 FROM e14 := e33 <BOOL>
  LABEL IFNEXT_73_SEQ_0_LEVEL_0
  DEF e34 := e17 LAND e16 <BOOL>
  DEF e35 := TRUE <BOOL>
  IF e34 BEQ e35
  THEN IFSTAT_73_SEQ_1_LEVEL_0
  ELSE IFNEXT_73_SEQ_1_LEVEL_0
  LABEL IFSTAT_73_SEQ_1_LEVEL_0
  DEF e36 := FALSE <BOOL>
  e14 := e36 <BOOL>
  GOTO IFEND_73_LEVEL_0 FROM e14 := e36 <BOOL>
  LABEL IFNEXT_73_SEQ_1_LEVEL_0
  DEF e37 := e17 LAND e20 <BOOL>
  DEF e38 := TRUE <BOOL>
  IF e37 BEQ e38
  THEN IFSTAT_73_SEQ_2_LEVEL_0
  ELSE IFNEXT_73_SEQ_2_LEVEL_0
  LABEL IFSTAT_73_SEQ_2_LEVEL_0
  DEF e39 := FALSE <BOOL>
  e14 := e39 <BOOL>
  GOTO IFEND_73_LEVEL_0 FROM e14 := e39 <BOOL>
  LABEL IFNEXT_73_SEQ_2_LEVEL_0
  DEF e40 := e19 LAND e16 <BOOL>
  DEF e41 := TRUE <BOOL>
  IF e40 BEQ e41
  THEN IFSTAT_73_SEQ_3_LEVEL_0
  ELSE IFNEXT_73_SEQ_3_LEVEL_0
  LABEL IFSTAT_73_SEQ_3_LEVEL_0
  DEF e42 := TRUE <BOOL>
  e14 := e42 <BOOL>
  GOTO IFEND_73_LEVEL_0 FROM e14 := e42 <BOOL>
  LABEL IFNEXT_73_SEQ_3_LEVEL_0
  DEF e43 := e19 LAND e18 <BOOL>
  DEF e44 := TRUE <BOOL>
  IF e43 BEQ e44
  THEN IFSTAT_73_SEQ_4_LEVEL_0
  ELSE IFNEXT_73_SEQ_4_LEVEL_0
  LABEL IFSTAT_73_SEQ_4_LEVEL_0
  DEF e45 := TRUE <BOOL>
  e14 := e45 <BOOL>
  GOTO IFEND_73_LEVEL_0 FROM e14 := e45 <BOOL>
  LABEL IFNEXT_73_SEQ_4_LEVEL_0
  DEF e46 := e15 LAND e20 <BOOL>
  DEF e47 := TRUE <BOOL>
  IF e46 BEQ e47
  THEN IFSTAT_73_SEQ_5_LEVEL_0
  ELSE IFNEXT_73_SEQ_5_LEVEL_0
  LABEL IFSTAT_73_SEQ_5_LEVEL_0
  DEF e48 := FALSE <BOOL>
  e14 := e48 <BOOL>
  GOTO IFEND_73_LEVEL_0 FROM e14 := e48 <BOOL>
  LABEL IFNEXT_73_SEQ_5_LEVEL_0
  DEF e49 := e15 LAND e18 <BOOL>
  DEF e50 := TRUE <BOOL>
  IF e49 BEQ e50
  THEN IFSTAT_73_SEQ_6_LEVEL_0
  ELSE IFNEXT_73_SEQ_6_LEVEL_0
  LABEL IFSTAT_73_SEQ_6_LEVEL_0
  DEF e51 := TRUE <BOOL>
  e14 := e51 <BOOL>
  GOTO IFEND_73_LEVEL_0 FROM e14 := e51 <BOOL>
  LABEL IFNEXT_73_SEQ_6_LEVEL_0
  DEF e52 := e17 LAND e18 <BOOL>
  DEF e53 := TRUE <BOOL>
  IF e52 BEQ e53
  THEN IFSTAT_73_SEQ_7_LEVEL_0
  ELSE IFNEXT_73_SEQ_7_LEVEL_0
  LABEL IFSTAT_73_SEQ_7_LEVEL_0
  CALL RealExponent([(PARAM h69) -> h54]<REAL>) FROM LABEL IFSTAT_73_SEQ_7_LEVEL_0
  DEF e54 := (RETURN h53) <INT>
  e21 := e54 <INT>
  CALL RealExponent([(PARAM h70) -> h54]<REAL>) FROM e21 := e54 <INT>
  DEF e55 := (RETURN h53) <INT>
  e22 := e55 <INT>
  DEF e56 := e21 LT e22 <BOOL>
  DEF e57 := TRUE <BOOL>
  IF e56 BEQ e57
  THEN IFSTAT_74_SEQ_0_LEVEL_1
  ELSE IFNEXT_74_SEQ_0_LEVEL_1
  LABEL IFSTAT_74_SEQ_0_LEVEL_1
  DEF e58 := TRUE <BOOL>
  e14 := e58 <BOOL>
  GOTO IFEND_74_LEVEL_1 FROM e14 := e58 <BOOL>
  LABEL IFNEXT_74_SEQ_0_LEVEL_1
  DEF e59 := e21 IEQ e22 <BOOL>
  DEF e60 := TRUE <BOOL>
  IF e59 BEQ e60
  THEN IFSTAT_74_SEQ_1_LEVEL_1
  ELSE IFNEXT_74_SEQ_1_LEVEL_1
  LABEL IFSTAT_74_SEQ_1_LEVEL_1
  CALL RealMantissa([(PARAM h69) -> h67]<REAL>) FROM LABEL IFSTAT_74_SEQ_1_LEVEL_1
  DEF e61 := (RETURN h66) <INT>
  e23 := e61 <INT>
  CALL RealMantissa([(PARAM h70) -> h67]<REAL>) FROM e23 := e61 <INT>
  DEF e62 := (RETURN h66) <INT>
  e24 := e62 <INT>
  DEF e63 := e23 LE e24 <BOOL>
  DEF e64 := TRUE <BOOL>
  IF e63 BEQ e64
  THEN IFSTAT_75_SEQ_0_LEVEL_2
  ELSE IFNEXT_75_SEQ_0_LEVEL_2
  LABEL IFSTAT_75_SEQ_0_LEVEL_2
  DEF e65 := TRUE <BOOL>
  e14 := e65 <BOOL>
  GOTO IFEND_75_LEVEL_2 FROM e14 := e65 <BOOL>
  LABEL IFNEXT_75_SEQ_0_LEVEL_2
  DEF e66 := FALSE <BOOL>
  e14 := e66 <BOOL>
  GOTO IFEND_75_LEVEL_2 FROM e14 := e66 <BOOL>
  LABEL IFNEXT_75_SEQ_1_LEVEL_2
  LABEL IFEND_75_LEVEL_2
  GOTO IFEND_74_LEVEL_1 FROM LABEL IFEND_75_LEVEL_2
  LABEL IFNEXT_74_SEQ_1_LEVEL_1
  DEF e67 := FALSE <BOOL>
  e14 := e67 <BOOL>
  GOTO IFEND_74_LEVEL_1 FROM e14 := e67 <BOOL>
  LABEL IFNEXT_74_SEQ_2_LEVEL_1
  LABEL IFEND_74_LEVEL_1
  GOTO IFEND_73_LEVEL_0 FROM LABEL IFEND_74_LEVEL_1
  LABEL IFNEXT_73_SEQ_7_LEVEL_0
  DEF e68 := e19 LAND e20 <BOOL>
  DEF e69 := TRUE <BOOL>
  IF e68 BEQ e69
  THEN IFSTAT_73_SEQ_8_LEVEL_0
  ELSE IFNEXT_73_SEQ_8_LEVEL_0
  LABEL IFSTAT_73_SEQ_8_LEVEL_0
  CALL RealExponent([(PARAM h69) -> h54]<REAL>) FROM LABEL IFSTAT_73_SEQ_8_LEVEL_0
  DEF e70 := (RETURN h53) <INT>
  e21 := e70 <INT>
  CALL RealExponent([(PARAM h70) -> h54]<REAL>) FROM e21 := e70 <INT>
  DEF e71 := (RETURN h53) <INT>
  e21 := e71 <INT>
  DEF e72 := e21 GT e22 <BOOL>
  DEF e73 := TRUE <BOOL>
  IF e72 BEQ e73
  THEN IFSTAT_79_SEQ_0_LEVEL_1
  ELSE IFNEXT_79_SEQ_0_LEVEL_1
  LABEL IFSTAT_79_SEQ_0_LEVEL_1
  DEF e74 := TRUE <BOOL>
  e14 := e74 <BOOL>
  GOTO IFEND_79_LEVEL_1 FROM e14 := e74 <BOOL>
  LABEL IFNEXT_79_SEQ_0_LEVEL_1
  DEF e75 := e21 IEQ e22 <BOOL>
  DEF e76 := TRUE <BOOL>
  IF e75 BEQ e76
  THEN IFSTAT_79_SEQ_1_LEVEL_1
  ELSE IFNEXT_79_SEQ_1_LEVEL_1
  LABEL IFSTAT_79_SEQ_1_LEVEL_1
  CALL RealMantissa([(PARAM h69) -> h67]<REAL>) FROM LABEL IFSTAT_79_SEQ_1_LEVEL_1
  DEF e77 := (RETURN h66) <INT>
  e23 := e77 <INT>
  CALL RealMantissa([(PARAM h70) -> h67]<REAL>) FROM e23 := e77 <INT>
  DEF e78 := (RETURN h66) <INT>
  e24 := e78 <INT>
  DEF e79 := e23 GE e24 <BOOL>
  DEF e80 := TRUE <BOOL>
  IF e79 BEQ e80
  THEN IFSTAT_80_SEQ_0_LEVEL_2
  ELSE IFNEXT_80_SEQ_0_LEVEL_2
  LABEL IFSTAT_80_SEQ_0_LEVEL_2
  DEF e81 := TRUE <BOOL>
  e14 := e81 <BOOL>
  GOTO IFEND_80_LEVEL_2 FROM e14 := e81 <BOOL>
  LABEL IFNEXT_80_SEQ_0_LEVEL_2
  DEF e82 := FALSE <BOOL>
  e14 := e82 <BOOL>
  GOTO IFEND_80_LEVEL_2 FROM e14 := e82 <BOOL>
  LABEL IFNEXT_80_SEQ_1_LEVEL_2
  LABEL IFEND_80_LEVEL_2
  GOTO IFEND_79_LEVEL_1 FROM LABEL IFEND_80_LEVEL_2
  LABEL IFNEXT_79_SEQ_1_LEVEL_1
  DEF e83 := FALSE <BOOL>
  e14 := e83 <BOOL>
  GOTO IFEND_79_LEVEL_1 FROM e14 := e83 <BOOL>
  LABEL IFNEXT_79_SEQ_2_LEVEL_1
  LABEL IFEND_79_LEVEL_1
  GOTO IFEND_73_LEVEL_0 FROM LABEL IFEND_79_LEVEL_1
  LABEL IFNEXT_73_SEQ_8_LEVEL_0
  LABEL IFEND_73_LEVEL_0
  DEF RETURN h68 := e14 <BOOL>
 RETURN FROM RGreaterThanOrEqualTo
 PROC LABEL RealIsZero
  DEF g72 := FALSE <BOOL>
  DEF g73 := 0 <INT>
  DEF g74 := 0 <INT>
  CALL RealBinaryAsInt([(PARAM g88) -> g77]<REAL>) FROM DEF g74 := 0 <INT>
  DEF g79 := (RETURN g78) <INT>
  g74 := g79 <INT>
  DEF g80 := 2147483647 <INT>
  DEF g81 := g74 IAND g80 <INT>
  g73 := g81 <INT>
  DEF g82 := 0 <INT>
  DEF g83 := g73 IEQ g82 <BOOL>
  DEF g84 := TRUE <BOOL>
  IF g83 BEQ g84
  THEN IFSTAT_0_SEQ_0_LEVEL_0_2
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_2
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_2
  DEF g85 := TRUE <BOOL>
  g72 := g85 <BOOL>
  GOTO IFEND_0_LEVEL_0_2 FROM g72 := g85 <BOOL>
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_2
  DEF g86 := FALSE <BOOL>
  g72 := g86 <BOOL>
  GOTO IFEND_0_LEVEL_0_2 FROM g72 := g86 <BOOL>
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_2
  LABEL IFEND_0_LEVEL_0_2
  DEF RETURN g87 := g72 <BOOL>
 RETURN FROM RealIsZero
 PROC LABEL RealBinaryAsInt
  DEF g75 := 0 <INT>
  DEF g76 := 0.0 <REAL>
  IPARAM g76
  IPARAM (PARAM g77)
  IASM "LDR %r, %a"
  IPARAM g76
  IPARAM g75
  IASM "STR %r, %a"
  DEF RETURN g78 := g75 <INT>
 RETURN FROM RealBinaryAsInt
 PROC LABEL RealIsNegative
  DEF g89 := FALSE <BOOL>
  DEF g90 := 0 <INT>
  DEF g91 := 0 <INT>
  CALL RealSign([(PARAM h24) -> h10]<REAL>) FROM DEF g91 := 0 <INT>
  DEF h11 := (RETURN g99) <INT>
  g91 := h11 <INT>
  CALL RealBinaryAsInt([(PARAM h24) -> g77]<REAL>) FROM g91 := h11 <INT>
  DEF h12 := (RETURN g78) <INT>
  DEF h13 := 2147483647 <INT>
  DEF h14 := h12 IAND h13 <INT>
  g90 := h14 <INT>
  DEF h15 := 1 <INT>
  DEF h16 := g91 IEQ h15 <BOOL>
  CALL IntIsZero([g90 -> f53]<INT>) FROM DEF h16 := g91 IEQ h15 <BOOL>
  DEF h17 := (RETURN f57) <BOOL>
  DEF h18 := BNOT h17 <BOOL>
  DEF h19 := h16 LAND h18 <BOOL>
  DEF h20 := TRUE <BOOL>
  IF h19 BEQ h20
  THEN IFSTAT_3_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_3_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_3_SEQ_0_LEVEL_0_0
  DEF h21 := TRUE <BOOL>
  g89 := h21 <BOOL>
  GOTO IFEND_3_LEVEL_0_0 FROM g89 := h21 <BOOL>
  LABEL IFNEXT_3_SEQ_0_LEVEL_0_0
  DEF h22 := FALSE <BOOL>
  g89 := h22 <BOOL>
  GOTO IFEND_3_LEVEL_0_0 FROM g89 := h22 <BOOL>
  LABEL IFNEXT_3_SEQ_1_LEVEL_0_0
  LABEL IFEND_3_LEVEL_0_0
  DEF RETURN h23 := g89 <BOOL>
 RETURN FROM RealIsNegative
 PROC LABEL RealSign
  DEF g92 := 0 <INT>
  DEF g93 := 0 <INT>
  CALL RealBinaryAsInt([(PARAM h10) -> g77]<REAL>) FROM DEF g93 := 0 <INT>
  DEF g94 := (RETURN g78) <INT>
  g93 := g94 <INT>
  DEF g95 := 31 <INT>
  DEF g96 := g93 IRSHIFT g95 <INT>
  DEF g97 := 1 <INT>
  DEF g98 := g96 IAND g97 <INT>
  g92 := g98 <INT>
  DEF RETURN g99 := g92 <INT>
 RETURN FROM RealSign
 PROC LABEL RealIsPositive
  DEF h25 := FALSE <BOOL>
  DEF h26 := 0 <INT>
  DEF h27 := 0 <INT>
  CALL RealSign([(PARAM h41) -> h10]<REAL>) FROM DEF h27 := 0 <INT>
  DEF h28 := (RETURN g99) <INT>
  h27 := h28 <INT>
  CALL RealBinaryAsInt([(PARAM h41) -> g77]<REAL>) FROM h27 := h28 <INT>
  DEF h29 := (RETURN g78) <INT>
  DEF h30 := 2147483647 <INT>
  DEF h31 := h29 IAND h30 <INT>
  h26 := h31 <INT>
  DEF h32 := 0 <INT>
  DEF h33 := h27 IEQ h32 <BOOL>
  CALL IntIsZero([h26 -> f53]<INT>) FROM DEF h33 := h27 IEQ h32 <BOOL>
  DEF h34 := (RETURN f57) <BOOL>
  DEF h35 := BNOT h34 <BOOL>
  DEF h36 := h33 LAND h35 <BOOL>
  DEF h37 := TRUE <BOOL>
  IF h36 BEQ h37
  THEN IFSTAT_5_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_5_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_5_SEQ_0_LEVEL_0_0
  DEF h38 := TRUE <BOOL>
  h25 := h38 <BOOL>
  GOTO IFEND_5_LEVEL_0_0 FROM h25 := h38 <BOOL>
  LABEL IFNEXT_5_SEQ_0_LEVEL_0_0
  DEF h39 := FALSE <BOOL>
  h25 := h39 <BOOL>
  GOTO IFEND_5_LEVEL_0_0 FROM h25 := h39 <BOOL>
  LABEL IFNEXT_5_SEQ_1_LEVEL_0_0
  LABEL IFEND_5_LEVEL_0_0
  DEF RETURN h40 := h25 <BOOL>
 RETURN FROM RealIsPositive
 PROC LABEL RealExponent
  DEF h42 := 0 <INT>
  DEF h43 := 0 <INT>
  DEF h44 := 0 <INT>
  CALL RealBinaryAsInt([(PARAM h54) -> g77]<REAL>) FROM DEF h44 := 0 <INT>
  DEF h45 := (RETURN g78) <INT>
  h43 := h45 <INT>
  DEF h46 := 23 <INT>
  DEF h47 := h43 IRSHIFT h46 <INT>
  DEF h48 := 255 <INT>
  DEF h49 := h47 IAND h48 <INT>
  h44 := h49 <INT>
  DEF h50 := h44 ISUB (GLOBAL h52) <INT>
  h42 := h50 <INT>
  DEF RETURN h53 := h42 <INT>
 RETURN FROM RealExponent
 PROC LABEL RealMantissa
  DEF h55 := 0 <INT>
  DEF h56 := 0 <INT>
  DEF h57 := 0 <INT>
  DEF h58 := 0 <INT>
  CALL RealBinaryAsInt([(PARAM h67) -> g77]<REAL>) FROM DEF h58 := 0 <INT>
  DEF h59 := (RETURN g78) <INT>
  h56 := h59 <INT>
  DEF h60 := 8388607 <INT>
  DEF h61 := h56 IAND h60 <INT>
  h57 := h61 <INT>
  CALL RealIsZero([(PARAM h67) -> g88]<REAL>) FROM h57 := h61 <INT>
  DEF h62 := (RETURN g87) <BOOL>
  DEF h63 := TRUE <BOOL>
  IF h62 BEQ h63
  THEN IFSTAT_6_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_6_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_6_SEQ_0_LEVEL_0_0
  h55 := h57 <INT>
  GOTO IFEND_6_LEVEL_0_0 FROM h55 := h57 <INT>
  LABEL IFNEXT_6_SEQ_0_LEVEL_0_0
  DEF h64 := 8388608 <INT>
  DEF h65 := h57 IOR h64 <INT>
  h55 := h65 <INT>
  GOTO IFEND_6_LEVEL_0_0 FROM h55 := h65 <INT>
  LABEL IFNEXT_6_SEQ_1_LEVEL_0
  LABEL IFEND_6_LEVEL_0_0
  DEF RETURN h66 := h55 <INT>
 RETURN FROM RealMantissa
