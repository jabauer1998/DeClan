SYMBOL SECTION
 ENTRY f24 INTERNAL GLOBAL i  <INT>
 ENTRY f25 INTERNAL GLOBAL j  <INT>
 ENTRY f30 INTERNAL tempReg WriteInt <INT>
 ENTRY f31 INTERNAL PARAM i WriteInt 0 <INT>
 ENTRY f36 INTERNAL result INeg <INT>
 ENTRY f38 INTERNAL PARAM n INeg 0 <INT>
 ENTRY f41 INTERNAL RETURN INeg <INT>
DATA SECTION
BSS SECTION
 DEF GLOBAL f24 := 0 <INT>
 DEF GLOBAL f25 := 0 <INT>
CODE SECTION
 DEF f26 := 1 <INT>
 GLOBAL f24 := f26 <INT>
 DEF f27 := 10 <INT>
 LABEL FORBEG_0_LEVEL_0
 IF (GLOBAL f24) INE f27
 THEN FORLOOP_0_LEVEL_0
 ELSE FOREND_0_LEVEL_0
 LABEL FORLOOP_0_LEVEL_0
 DEF f28 := 1 <INT>
 GLOBAL f25 := f28 <INT>
 DEF f29 := 10 <INT>
 LABEL FORBEG_1_LEVEL_1
 IF (GLOBAL f25) LT f29
 THEN FORLOOP_1_LEVEL_1
 ELSE FOREND_1_LEVEL_1
 LABEL FORLOOP_1_LEVEL_1
 CALL WriteInt([(GLOBAL f25) -> f31]<INT>)
 DEF f32 := 1 <INT>
 GLOBAL f25 := (GLOBAL f25) IADD f32 <INT>
 GOTO FORBEG_1_LEVEL_1
 LABEL FOREND_1_LEVEL_1
 CALL WriteLn()
 DEF f33 := 10 <INT>
 GLOBAL f25 := f33 <INT>
 DEF f34 := 0 <INT>
 LABEL FORBEG_2_LEVEL_1
 IF (GLOBAL f25) GT f34
 THEN FORLOOP_2_LEVEL_1
 ELSE FOREND_2_LEVEL_1
 LABEL FORLOOP_2_LEVEL_1
 CALL WriteInt([(GLOBAL f25) -> f31]<INT>)
 DEF f35 := 1 <INT>
 CALL INeg([f35 -> f38]<INT>)
 DEF f42 := (RETURN f41) <INT>
 GLOBAL f25 := (GLOBAL f25) IADD f42 <INT>
 GOTO FORBEG_2_LEVEL_1
 LABEL FOREND_2_LEVEL_1
 CALL WriteLn()
 DEF f43 := 1 <INT>
 DEF f44 := (GLOBAL f24) IADD f43 <INT>
 GLOBAL f24 := f44 <INT>
 GOTO FORBEG_0_LEVEL_0
 LABEL FOREND_0_LEVEL_0
END
PROC SECTION
 PROC LABEL WriteInt
  DEF f30 := 0 <INT>
  IPARAM f30 <INT> %dr
  IASM "MOV %dr, R0"
  IPARAM (PARAM f31) <INT> %a
  IASM "LDR R0, %ua"
  IASM "SWI 1"
  IPARAM f30 <INT> %r
  IASM "MOV R0, %ur"
 RETURN FROM WriteInt
 PROC LABEL WriteLn
  IASM "SWI 4"
 RETURN FROM WriteLn
 PROC LABEL INeg
  DEF f36 := 0 <INT>
  DEF f37 := INOT (PARAM f38) <INT>
  DEF f39 := 1 <INT>
  DEF f40 := f37 IADD f39 <INT>
  f36 := f40 <INT>
  DEF RETURN f41 := f36 <INT>
 RETURN FROM INeg
