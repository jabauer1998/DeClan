SYMBOL SECTION
 ENTRY f25 INTERNAL result INeg <INT>
 ENTRY f27 INTERNAL PARAM n INeg 0 <INT>
 ENTRY f30 INTERNAL RETURN INeg <INT>
 ENTRY f32 CONST INTERNAL GLOBAL answer  <INT>
 ENTRY f33 INTERNAL GLOBAL n  <INT>
 ENTRY f45 INTERNAL total Mod <INT>
 ENTRY f46 INTERNAL result Mod <INT>
 ENTRY f47 INTERNAL PARAM dividend Mod 0 <INT>
 ENTRY f49 INTERNAL PARAM divisor Mod 1 <INT>
 ENTRY f57 INTERNAL RETURN Mod <INT>
 ENTRY f63 INTERNAL tempReg WriteInt <INT>
 ENTRY f64 INTERNAL PARAM i WriteInt 0 <INT>
 ENTRY f69 INTERNAL total Div <INT>
 ENTRY f70 INTERNAL result Div <INT>
 ENTRY f71 INTERNAL tempDividend Div <INT>
 ENTRY f72 INTERNAL dividendLastOne Div <INT>
 ENTRY f73 INTERNAL dividendLastDigit Div <INT>
 ENTRY f74 INTERNAL dividendCount Div <INT>
 ENTRY f75 INTERNAL dividendIndex Div <INT>
 ENTRY f76 INTERNAL bitAtIndex Div <INT>
 ENTRY f77 INTERNAL remainder Div <INT>
 ENTRY f78 INTERNAL PARAM dividend Div 0 <INT>
 ENTRY f81 INTERNAL result IntIsZero <BOOL>
 ENTRY f84 INTERNAL PARAM n IntIsZero 0 <INT>
 ENTRY f88 INTERNAL RETURN IntIsZero <BOOL>
 ENTRY g25 INTERNAL PARAM divisor Div 1 <INT>
 ENTRY g35 INTERNAL RETURN Div <INT>
DATA SECTION
 DEF f24 := 42 <INT>
 CALL INeg([f24 -> f27]<INT>)
 DEF f31 := (RETURN f30) <INT>
 DEF GLOBAL f32 := f31 <INT>
BSS SECTION
 DEF GLOBAL f33 := 0 <INT>
CODE SECTION
 GLOBAL f33 := (GLOBAL f32) <INT>
 DEF f34 := 0 <INT>
 DEF f35 := (GLOBAL f33) LT f34 <BOOL>
 DEF f36 := TRUE <BOOL>
 IF f35 BEQ f36
 THEN WHILESTAT_0_SEQ_0_LEVEL_0_0
 ELSE WHILENEXT_0_SEQ_0_LEVEL_0_0
 LABEL WHILECOND_0_SEQ_0_LEVEL_0_0
 IF f35 BEQ f36
 THEN WHILESTAT_0_SEQ_0_LEVEL_0_0
 ELSE WHILEEND_0_LEVEL_0_0
 LABEL WHILESTAT_0_SEQ_0_LEVEL_0_0
 CALL INeg([(GLOBAL f33) -> f27]<INT>)
 DEF f37 := (RETURN f30) <INT>
 GLOBAL f33 := f37 <INT>
 DEF f38 := 0 <INT>
 DEF f39 := (GLOBAL f33) LT f38 <BOOL>
 f35 := f39 <BOOL>
 GOTO WHILECOND_0_SEQ_0_LEVEL_0_0
 LABEL WHILENEXT_0_SEQ_0_LEVEL_0_0
 DEF f40 := 0 <INT>
 DEF f41 := (GLOBAL f33) GT f40 <BOOL>
 DEF f42 := TRUE <BOOL>
 IF f41 BEQ f42
 THEN WHILESTAT_0_SEQ_1_LEVEL_0
 ELSE WHILENEXT_0_SEQ_1_LEVEL_0
 LABEL WHILECOND_0_SEQ_1_LEVEL_0
 IF f41 BEQ f42
 THEN WHILESTAT_0_SEQ_1_LEVEL_0
 ELSE WHILEEND_0_LEVEL_0_0
 LABEL WHILESTAT_0_SEQ_1_LEVEL_0
 CALL Display([(GLOBAL f33) -> f67]<INT>)
 DEF g45 := 0 <INT>
 DEF g46 := (GLOBAL f33) GT g45 <BOOL>
 f41 := g46 <BOOL>
 GOTO WHILECOND_0_SEQ_1_LEVEL_0
 LABEL WHILENEXT_0_SEQ_1_LEVEL_0
 LABEL WHILEEND_0_LEVEL_0_0
 DEF g47 := 10 <INT>
 GLOBAL f33 := g47 <INT>
 DEF g48 := 2 <INT>
 LABEL FORBEG_0_LEVEL_0
 IF (GLOBAL f33) GT g48
 THEN FORLOOP_0_LEVEL_0
 ELSE FOREND_0_LEVEL_0
 LABEL FORLOOP_0_LEVEL_0
 CALL WriteInt([(GLOBAL f33) -> f64]<INT>)
 DEF g49 := 1 <INT>
 CALL INeg([g49 -> f27]<INT>)
 DEF g50 := (RETURN f30) <INT>
 GLOBAL f33 := (GLOBAL f33) IADD g50 <INT>
 GOTO FORBEG_0_LEVEL_0
 LABEL FOREND_0_LEVEL_0
 DEF g51 := TRUE <BOOL>
 DEF g52 := TRUE <BOOL>
 LABEL REPEATBEG_0_LEVEL_0
 IF g51 BEQ g52
 THEN REPEATEND_0_LEVEL_0
 ELSE REPEATLOOP_0_LEVEL_0
 LABEL REPEATLOOP_0_LEVEL_0
 CALL Display([(GLOBAL f33) -> f67]<INT>)
 DEF g53 := TRUE <BOOL>
 g51 := g53 <BOOL>
 GOTO REPEATBEG_0_LEVEL_0
 LABEL REPEATEND_0_LEVEL_0
END
PROC SECTION
 PROC LABEL INeg
  DEF f25 := 0 <INT>
  DEF f26 := INOT (PARAM f27) <INT>
  DEF f28 := 1 <INT>
  DEF f29 := f26 IADD f28 <INT>
  f25 := f29 <INT>
  DEF RETURN f30 := f25 <INT>
 RETURN FROM INeg
 PROC LABEL Display
  DEF f43 := FALSE <BOOL>
  DEF f44 := 2 <INT>
  CALL Mod([(PARAM f67) -> f47]<INT>, [f44 -> f49]<INT>)
  DEF f58 := (RETURN f57) <INT>
  DEF f59 := 0 <INT>
  DEF f60 := f58 INE f59 <BOOL>
  f43 := f60 <BOOL>
  DEF f61 := TRUE <BOOL>
  IF f43 BEQ f61
  THEN IFSTAT_0_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_0
  DEF f62 := 1 <INT>
  CALL WriteInt([f62 -> f64]<INT>)
  DEF f65 := 1 <INT>
  DEF f66 := (PARAM f67) ISUB f65 <INT>
  DEF f68 := 2 <INT>
  CALL Div([f66 -> f78]<INT>, [f68 -> g25]<INT>)
  DEF g36 := (RETURN g35) <INT>
  PARAM f67 := g36 <INT>
  GOTO IFEND_0_LEVEL_0_1
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_0
  DEF g37 := 0 <INT>
  DEF g38 := (PARAM f67) IEQ g37 <BOOL>
  DEF g39 := TRUE <BOOL>
  IF g38 BEQ g39
  THEN IFSTAT_0_SEQ_1_LEVEL_0_0
  ELSE IFNEXT_0_SEQ_1_LEVEL_0_0
  LABEL IFSTAT_0_SEQ_1_LEVEL_0_0
  DEF g40 := 1 <INT>
  CALL INeg([g40 -> f27]<INT>)
  DEF g41 := (RETURN f30) <INT>
  CALL WriteInt([g41 -> f64]<INT>)
  GOTO IFEND_0_LEVEL_0_1
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_0
  DEF g42 := 0 <INT>
  CALL WriteInt([g42 -> f64]<INT>)
  DEF g43 := 2 <INT>
  CALL Div([(PARAM f67) -> f78]<INT>, [g43 -> g25]<INT>)
  DEF g44 := (RETURN g35) <INT>
  PARAM f67 := g44 <INT>
  GOTO IFEND_0_LEVEL_0_1
  LABEL IFNEXT_0_SEQ_2_LEVEL_0_0
  LABEL IFEND_0_LEVEL_0_1
 RETURN FROM Display
 PROC LABEL Mod
  DEF f45 := 0 <INT>
  DEF f46 := 0 <INT>
  f45 := (PARAM f47) <INT>
  DEF f48 := f45 ISUB (PARAM f49) <INT>
  DEF f50 := 0 <INT>
  DEF f51 := f48 GE f50 <BOOL>
  DEF f52 := TRUE <BOOL>
  IF f51 BEQ f52
  THEN WHILESTAT_4_SEQ_0_LEVEL_0_0
  ELSE WHILENEXT_4_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_4_SEQ_0_LEVEL_0_0
  IF f51 BEQ f52
  THEN WHILESTAT_4_SEQ_0_LEVEL_0_0
  ELSE WHILEEND_4_LEVEL_0_0
  LABEL WHILESTAT_4_SEQ_0_LEVEL_0_0
  DEF f53 := f45 ISUB (PARAM f49) <INT>
  f45 := f53 <INT>
  DEF f54 := f45 ISUB (PARAM f49) <INT>
  DEF f55 := 0 <INT>
  DEF f56 := f54 GE f55 <BOOL>
  f51 := f56 <BOOL>
  GOTO WHILECOND_4_SEQ_0_LEVEL_0_0
  LABEL WHILENEXT_4_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_4_LEVEL_0_0
  DEF RETURN f57 := f45 <INT>
 RETURN FROM Mod
 PROC LABEL WriteInt
  DEF f63 := 0 <INT>
  IPARAM f63 <INT> %dr
  IASM "MOV %dr, R0"
  IPARAM (PARAM f64) <INT> %a
  IASM "LDR R0, %ua"
  IASM "SWI 1"
  IPARAM f63 <INT> %r
  IASM "MOV R0, %ur"
 RETURN FROM WriteInt
 PROC LABEL Div
  DEF f69 := 0 <INT>
  DEF f70 := 0 <INT>
  DEF f71 := 0 <INT>
  DEF f72 := 0 <INT>
  DEF f73 := 0 <INT>
  DEF f74 := 0 <INT>
  DEF f75 := 0 <INT>
  DEF f76 := 0 <INT>
  DEF f77 := 0 <INT>
  f71 := (PARAM f78) <INT>
  DEF f79 := 0 <INT>
  f74 := f79 <INT>
  DEF f80 := 0 <INT>
  f72 := f80 <INT>
  CALL IntIsZero([f71 -> f84]<INT>)
  DEF f89 := (RETURN f88) <BOOL>
  DEF f90 := BNOT f89 <BOOL>
  DEF f91 := TRUE <BOOL>
  IF f90 BEQ f91
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_1
  ELSE WHILENEXT_0_SEQ_0_LEVEL_0_1
  LABEL WHILECOND_0_SEQ_0_LEVEL_0_1
  IF f90 BEQ f91
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_1
  ELSE WHILEEND_0_LEVEL_0_1
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0_1
  DEF f92 := 1 <INT>
  DEF f93 := f71 IAND f92 <INT>
  f73 := f93 <INT>
  DEF f94 := 1 <INT>
  DEF f95 := f73 IEQ f94 <BOOL>
  DEF f96 := TRUE <BOOL>
  IF f95 BEQ f96
  THEN IFSTAT_0_SEQ_0_LEVEL_0_1
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_1
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_1
  f72 := f74 <INT>
  GOTO IFEND_0_LEVEL_0_0
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_1
  LABEL IFEND_0_LEVEL_0_0
  DEF f97 := 1 <INT>
  DEF f98 := f74 IADD f97 <INT>
  f74 := f98 <INT>
  DEF f99 := 1 <INT>
  DEF g10 := f71 IRSHIFT f99 <INT>
  f71 := g10 <INT>
  CALL IntIsZero([f71 -> f84]<INT>)
  DEF g11 := (RETURN f88) <BOOL>
  DEF g12 := BNOT g11 <BOOL>
  f90 := g12 <BOOL>
  GOTO WHILECOND_0_SEQ_0_LEVEL_0_1
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0_1
  LABEL WHILEEND_0_LEVEL_0_1
  f75 := f72 <INT>
  f71 := (PARAM f78) <INT>
  DEF g13 := 0 <INT>
  f77 := g13 <INT>
  DEF g14 := 0 <INT>
  f70 := g14 <INT>
  DEF g15 := 0 <INT>
  DEF g16 := f75 GE g15 <BOOL>
  DEF g17 := TRUE <BOOL>
  IF g16 BEQ g17
  THEN WHILESTAT_2_SEQ_0_LEVEL_0_0
  ELSE WHILENEXT_2_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_2_SEQ_0_LEVEL_0_0
  IF g16 BEQ g17
  THEN WHILESTAT_2_SEQ_0_LEVEL_0_0
  ELSE WHILEEND_2_LEVEL_0_0
  LABEL WHILESTAT_2_SEQ_0_LEVEL_0_0
  DEF g18 := f71 IRSHIFT f75 <INT>
  DEF g19 := 1 <INT>
  DEF g20 := g18 IAND g19 <INT>
  f76 := g20 <INT>
  DEF g21 := 1 <INT>
  DEF g22 := f77 ILSHIFT g21 <INT>
  DEF g23 := g22 IOR f76 <INT>
  f77 := g23 <INT>
  DEF g24 := f77 GE (PARAM g25) <BOOL>
  DEF g26 := TRUE <BOOL>
  IF g24 BEQ g26
  THEN IFSTAT_1_SEQ_0_LEVEL_0_1
  ELSE IFNEXT_1_SEQ_0_LEVEL_0_1
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_1
  DEF g27 := 1 <INT>
  DEF g28 := g27 ILSHIFT f75 <INT>
  DEF g29 := f70 IOR g28 <INT>
  f70 := g29 <INT>
  DEF g30 := f77 ISUB (PARAM g25) <INT>
  f77 := g30 <INT>
  GOTO IFEND_1_LEVEL_0_1
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_1
  LABEL IFEND_1_LEVEL_0_1
  DEF g31 := 1 <INT>
  DEF g32 := f75 ISUB g31 <INT>
  f75 := g32 <INT>
  DEF g33 := 0 <INT>
  DEF g34 := f75 GE g33 <BOOL>
  g16 := g34 <BOOL>
  GOTO WHILECOND_2_SEQ_0_LEVEL_0_0
  LABEL WHILENEXT_2_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_2_LEVEL_0_0
  DEF RETURN g35 := f70 <INT>
 RETURN FROM Div
 PROC LABEL IntIsZero
  DEF f81 := FALSE <BOOL>
  DEF f82 := 0 <INT>
  DEF f83 := (PARAM f84) IEQ f82 <BOOL>
  DEF f85 := TRUE <BOOL>
  IF f83 BEQ f85
  THEN IFSTAT_1_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_1_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_0
  DEF f86 := TRUE <BOOL>
  f81 := f86 <BOOL>
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_0
  DEF f87 := FALSE <BOOL>
  f81 := f87 <BOOL>
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_1_LEVEL_0_0
  LABEL IFEND_1_LEVEL_0_0
  DEF RETURN f88 := f81 <BOOL>
 RETURN FROM IntIsZero
