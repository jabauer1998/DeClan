SYMBOL SECTION
 ENTRY f33 INTERNAL result INeg <INT>
 ENTRY f35 INTERNAL PARAM n INeg 0 <INT>
 ENTRY f38 INTERNAL RETURN INeg <INT>
 ENTRY f40 CONST INTERNAL GLOBAL answer  <INT>
 ENTRY f41 INTERNAL GLOBAL n  <INT>
 ENTRY f53 INTERNAL total Mod <INT>
 ENTRY f54 INTERNAL result Mod <INT>
 ENTRY f55 INTERNAL PARAM dividend Mod 0 <INT>
 ENTRY f57 INTERNAL PARAM divisor Mod 1 <INT>
 ENTRY f65 INTERNAL RETURN Mod <INT>
 ENTRY f71 INTERNAL tempReg WriteInt <INT>
 ENTRY f72 INTERNAL PARAM i WriteInt 0 <INT>
 ENTRY f77 INTERNAL total Div <INT>
 ENTRY f78 INTERNAL result Div <INT>
 ENTRY f79 INTERNAL tempDividend Div <INT>
 ENTRY f80 INTERNAL dividendLastOne Div <INT>
 ENTRY f81 INTERNAL dividendLastDigit Div <INT>
 ENTRY f82 INTERNAL dividendCount Div <INT>
 ENTRY f83 INTERNAL dividendIndex Div <INT>
 ENTRY f84 INTERNAL bitAtIndex Div <INT>
 ENTRY f85 INTERNAL remainder Div <INT>
 ENTRY f86 INTERNAL PARAM dividend Div 0 <INT>
 ENTRY f89 INTERNAL result IntIsZero <BOOL>
 ENTRY f92 INTERNAL PARAM n IntIsZero 0 <INT>
 ENTRY f96 INTERNAL RETURN IntIsZero <BOOL>
 ENTRY g33 INTERNAL PARAM divisor Div 1 <INT>
 ENTRY g43 INTERNAL RETURN Div <INT>
DATA SECTION
 DEF f32 := 42 <INT>
 CALL INeg([f32 -> f35]<INT>)
 DEF f39 := (RETURN f38) <INT>
 DEF GLOBAL f40 := f39 <INT>
BSS SECTION
 DEF GLOBAL f41 := 0 <INT>
CODE SECTION
 GLOBAL f41 := (GLOBAL f40) <INT>
 DEF f42 := 0 <INT>
 DEF f43 := (GLOBAL f41) LT f42 <BOOL>
 DEF f44 := TRUE <BOOL>
 IF f43 BEQ f44
 THEN WHILESTAT_0_SEQ_0_LEVEL_0_0
 ELSE WHILENEXT_0_SEQ_0_LEVEL_0_0
 LABEL WHILECOND_0_SEQ_0_LEVEL_0_0
 IF f43 BEQ f44
 THEN WHILESTAT_0_SEQ_0_LEVEL_0_0
 ELSE WHILEEND_0_LEVEL_0_0
 LABEL WHILESTAT_0_SEQ_0_LEVEL_0_0
 CALL INeg([(GLOBAL f41) -> f35]<INT>)
 DEF f45 := (RETURN f38) <INT>
 GLOBAL f41 := f45 <INT>
 DEF f46 := 0 <INT>
 DEF f47 := (GLOBAL f41) LT f46 <BOOL>
 f43 := f47 <BOOL>
 GOTO WHILECOND_0_SEQ_0_LEVEL_0_0
 LABEL WHILENEXT_0_SEQ_0_LEVEL_0_0
 DEF f48 := 0 <INT>
 DEF f49 := (GLOBAL f41) GT f48 <BOOL>
 DEF f50 := TRUE <BOOL>
 IF f49 BEQ f50
 THEN WHILESTAT_0_SEQ_1_LEVEL_0
 ELSE WHILENEXT_0_SEQ_1_LEVEL_0
 LABEL WHILECOND_0_SEQ_1_LEVEL_0
 IF f49 BEQ f50
 THEN WHILESTAT_0_SEQ_1_LEVEL_0
 ELSE WHILEEND_0_LEVEL_0_0
 LABEL WHILESTAT_0_SEQ_1_LEVEL_0
 CALL Display([(GLOBAL f41) -> f75]<INT>)
 DEF g53 := 0 <INT>
 DEF g54 := (GLOBAL f41) GT g53 <BOOL>
 f49 := g54 <BOOL>
 GOTO WHILECOND_0_SEQ_1_LEVEL_0
 LABEL WHILENEXT_0_SEQ_1_LEVEL_0
 LABEL WHILEEND_0_LEVEL_0_0
 DEF g55 := 10 <INT>
 GLOBAL f41 := g55 <INT>
 DEF g56 := 2 <INT>
 LABEL FORBEG_0_LEVEL_0
 IF (GLOBAL f41) GT g56
 THEN FORLOOP_0_LEVEL_0
 ELSE FOREND_0_LEVEL_0
 LABEL FORLOOP_0_LEVEL_0
 CALL WriteInt([(GLOBAL f41) -> f72]<INT>)
 DEF g57 := 1 <INT>
 CALL INeg([g57 -> f35]<INT>)
 DEF g58 := (RETURN f38) <INT>
 GLOBAL f41 := (GLOBAL f41) IADD g58 <INT>
 GOTO FORBEG_0_LEVEL_0
 LABEL FOREND_0_LEVEL_0
 DEF g59 := TRUE <BOOL>
 DEF g60 := TRUE <BOOL>
 LABEL REPEATBEG_0_LEVEL_0
 IF g59 BEQ g60
 THEN REPEATEND_0_LEVEL_0
 ELSE REPEATLOOP_0_LEVEL_0
 LABEL REPEATLOOP_0_LEVEL_0
 CALL Display([(GLOBAL f41) -> f75]<INT>)
 DEF g61 := TRUE <BOOL>
 g59 := g61 <BOOL>
 GOTO REPEATBEG_0_LEVEL_0
 LABEL REPEATEND_0_LEVEL_0
END
PROC SECTION
 PROC LABEL INeg
  DEF f33 := 0 <INT>
  DEF f34 := INOT (PARAM f35) <INT>
  DEF f36 := 1 <INT>
  DEF f37 := f34 IADD f36 <INT>
  f33 := f37 <INT>
  DEF RETURN f38 := f33 <INT>
 RETURN FROM INeg
 PROC LABEL Display
  DEF f51 := FALSE <BOOL>
  DEF f52 := 2 <INT>
  CALL Mod([(PARAM f75) -> f55]<INT>, [f52 -> f57]<INT>)
  DEF f66 := (RETURN f65) <INT>
  DEF f67 := 0 <INT>
  DEF f68 := f66 INE f67 <BOOL>
  f51 := f68 <BOOL>
  DEF f69 := TRUE <BOOL>
  IF f51 BEQ f69
  THEN IFSTAT_0_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_0
  DEF f70 := 1 <INT>
  CALL WriteInt([f70 -> f72]<INT>)
  DEF f73 := 1 <INT>
  DEF f74 := (PARAM f75) ISUB f73 <INT>
  DEF f76 := 2 <INT>
  CALL Div([f74 -> f86]<INT>, [f76 -> g33]<INT>)
  DEF g44 := (RETURN g43) <INT>
  PARAM f75 := g44 <INT>
  GOTO IFEND_0_LEVEL_0_1
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_0
  DEF g45 := 0 <INT>
  DEF g46 := (PARAM f75) IEQ g45 <BOOL>
  DEF g47 := TRUE <BOOL>
  IF g46 BEQ g47
  THEN IFSTAT_0_SEQ_1_LEVEL_0_0
  ELSE IFNEXT_0_SEQ_1_LEVEL_0_0
  LABEL IFSTAT_0_SEQ_1_LEVEL_0_0
  DEF g48 := 1 <INT>
  CALL INeg([g48 -> f35]<INT>)
  DEF g49 := (RETURN f38) <INT>
  CALL WriteInt([g49 -> f72]<INT>)
  GOTO IFEND_0_LEVEL_0_1
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_0
  DEF g50 := 0 <INT>
  CALL WriteInt([g50 -> f72]<INT>)
  DEF g51 := 2 <INT>
  CALL Div([(PARAM f75) -> f86]<INT>, [g51 -> g33]<INT>)
  DEF g52 := (RETURN g43) <INT>
  PARAM f75 := g52 <INT>
  GOTO IFEND_0_LEVEL_0_1
  LABEL IFNEXT_0_SEQ_2_LEVEL_0_0
  LABEL IFEND_0_LEVEL_0_1
 RETURN FROM Display
 PROC LABEL Mod
  DEF f53 := 0 <INT>
  DEF f54 := 0 <INT>
  f53 := (PARAM f55) <INT>
  DEF f56 := f53 ISUB (PARAM f57) <INT>
  DEF f58 := 0 <INT>
  DEF f59 := f56 GE f58 <BOOL>
  DEF f60 := TRUE <BOOL>
  IF f59 BEQ f60
  THEN WHILESTAT_4_SEQ_0_LEVEL_0_0
  ELSE WHILENEXT_4_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_4_SEQ_0_LEVEL_0_0
  IF f59 BEQ f60
  THEN WHILESTAT_4_SEQ_0_LEVEL_0_0
  ELSE WHILEEND_4_LEVEL_0_0
  LABEL WHILESTAT_4_SEQ_0_LEVEL_0_0
  DEF f61 := f53 ISUB (PARAM f57) <INT>
  f53 := f61 <INT>
  DEF f62 := f53 ISUB (PARAM f57) <INT>
  DEF f63 := 0 <INT>
  DEF f64 := f62 GE f63 <BOOL>
  f59 := f64 <BOOL>
  GOTO WHILECOND_4_SEQ_0_LEVEL_0_0
  LABEL WHILENEXT_4_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_4_LEVEL_0_0
  DEF RETURN f65 := f53 <INT>
 RETURN FROM Mod
 PROC LABEL WriteInt
  DEF f71 := 0 <INT>
  IPARAM f71
  IASM "MOV %r, R0"
  IPARAM (PARAM f72)
  IASM "LDR R0, %a"
  IASM "SWI 1"
  IPARAM f71
  IASM "MOV R0, %r"
 RETURN FROM WriteInt
 PROC LABEL Div
  DEF f77 := 0 <INT>
  DEF f78 := 0 <INT>
  DEF f79 := 0 <INT>
  DEF f80 := 0 <INT>
  DEF f81 := 0 <INT>
  DEF f82 := 0 <INT>
  DEF f83 := 0 <INT>
  DEF f84 := 0 <INT>
  DEF f85 := 0 <INT>
  f79 := (PARAM f86) <INT>
  DEF f87 := 0 <INT>
  f82 := f87 <INT>
  DEF f88 := 0 <INT>
  f80 := f88 <INT>
  CALL IntIsZero([f79 -> f92]<INT>)
  DEF f97 := (RETURN f96) <BOOL>
  DEF f98 := BNOT f97 <BOOL>
  DEF f99 := TRUE <BOOL>
  IF f98 BEQ f99
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_1
  ELSE WHILENEXT_0_SEQ_0_LEVEL_0_1
  LABEL WHILECOND_0_SEQ_0_LEVEL_0_1
  IF f98 BEQ f99
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_1
  ELSE WHILEEND_0_LEVEL_0_1
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0_1
  DEF g10 := 1 <INT>
  DEF g11 := f79 IAND g10 <INT>
  f81 := g11 <INT>
  DEF g12 := 1 <INT>
  DEF g13 := f81 IEQ g12 <BOOL>
  DEF g14 := TRUE <BOOL>
  IF g13 BEQ g14
  THEN IFSTAT_0_SEQ_0_LEVEL_0_1
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_1
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_1
  f80 := f82 <INT>
  GOTO IFEND_0_LEVEL_0_0
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_1
  LABEL IFEND_0_LEVEL_0_0
  DEF g15 := 1 <INT>
  DEF g16 := f82 IADD g15 <INT>
  f82 := g16 <INT>
  DEF g17 := 1 <INT>
  DEF g18 := f79 IRSHIFT g17 <INT>
  f79 := g18 <INT>
  CALL IntIsZero([f79 -> f92]<INT>)
  DEF g19 := (RETURN f96) <BOOL>
  DEF g20 := BNOT g19 <BOOL>
  f98 := g20 <BOOL>
  GOTO WHILECOND_0_SEQ_0_LEVEL_0_1
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0_1
  LABEL WHILEEND_0_LEVEL_0_1
  f83 := f80 <INT>
  f79 := (PARAM f86) <INT>
  DEF g21 := 0 <INT>
  f85 := g21 <INT>
  DEF g22 := 0 <INT>
  f78 := g22 <INT>
  DEF g23 := 0 <INT>
  DEF g24 := f83 GE g23 <BOOL>
  DEF g25 := TRUE <BOOL>
  IF g24 BEQ g25
  THEN WHILESTAT_2_SEQ_0_LEVEL_0_0
  ELSE WHILENEXT_2_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_2_SEQ_0_LEVEL_0_0
  IF g24 BEQ g25
  THEN WHILESTAT_2_SEQ_0_LEVEL_0_0
  ELSE WHILEEND_2_LEVEL_0_0
  LABEL WHILESTAT_2_SEQ_0_LEVEL_0_0
  DEF g26 := f79 IRSHIFT f83 <INT>
  DEF g27 := 1 <INT>
  DEF g28 := g26 IAND g27 <INT>
  f84 := g28 <INT>
  DEF g29 := 1 <INT>
  DEF g30 := f85 ILSHIFT g29 <INT>
  DEF g31 := g30 IOR f84 <INT>
  f85 := g31 <INT>
  DEF g32 := f85 GE (PARAM g33) <BOOL>
  DEF g34 := TRUE <BOOL>
  IF g32 BEQ g34
  THEN IFSTAT_1_SEQ_0_LEVEL_0_1
  ELSE IFNEXT_1_SEQ_0_LEVEL_0_1
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_1
  DEF g35 := 1 <INT>
  DEF g36 := g35 ILSHIFT f83 <INT>
  DEF g37 := f78 IOR g36 <INT>
  f78 := g37 <INT>
  DEF g38 := f85 ISUB (PARAM g33) <INT>
  f85 := g38 <INT>
  GOTO IFEND_1_LEVEL_0_1
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_1
  LABEL IFEND_1_LEVEL_0_1
  DEF g39 := 1 <INT>
  DEF g40 := f83 ISUB g39 <INT>
  f83 := g40 <INT>
  DEF g41 := 0 <INT>
  DEF g42 := f83 GE g41 <BOOL>
  g24 := g42 <BOOL>
  GOTO WHILECOND_2_SEQ_0_LEVEL_0_0
  LABEL WHILENEXT_2_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_2_LEVEL_0_0
  DEF RETURN g43 := f78 <INT>
 RETURN FROM Div
 PROC LABEL IntIsZero
  DEF f89 := FALSE <BOOL>
  DEF f90 := 0 <INT>
  DEF f91 := (PARAM f92) IEQ f90 <BOOL>
  DEF f93 := TRUE <BOOL>
  IF f91 BEQ f93
  THEN IFSTAT_1_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_1_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_0
  DEF f94 := TRUE <BOOL>
  f89 := f94 <BOOL>
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_0
  DEF f95 := FALSE <BOOL>
  f89 := f95 <BOOL>
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_1_LEVEL_0_0
  LABEL IFEND_1_LEVEL_0_0
  DEF RETURN f96 := f89 <BOOL>
 RETURN FROM IntIsZero
