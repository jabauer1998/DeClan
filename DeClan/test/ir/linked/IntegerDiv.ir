SYMBOL SECTION
 ENTRY f25 CONST INTERNAL GLOBAL i1  <INT>
 ENTRY f27 CONST INTERNAL GLOBAL i2  <INT>
 ENTRY f28 INTERNAL GLOBAL result  <INT>
 ENTRY f29 INTERNAL total Div <INT>
 ENTRY f30 INTERNAL result Div <INT>
 ENTRY f31 INTERNAL tempDividend Div <INT>
 ENTRY f32 INTERNAL dividendLastOne Div <INT>
 ENTRY f33 INTERNAL dividendLastDigit Div <INT>
 ENTRY f34 INTERNAL dividendCount Div <INT>
 ENTRY f35 INTERNAL dividendIndex Div <INT>
 ENTRY f36 INTERNAL bitAtIndex Div <INT>
 ENTRY f37 INTERNAL remainder Div <INT>
 ENTRY f38 INTERNAL PARAM dividend Div 0 <INT>
 ENTRY f41 INTERNAL result IntIsZero <BOOL>
 ENTRY f44 INTERNAL PARAM n IntIsZero 0 <INT>
 ENTRY f48 INTERNAL RETURN IntIsZero <BOOL>
 ENTRY f75 INTERNAL PARAM divisor Div 1 <INT>
 ENTRY f85 INTERNAL RETURN Div <INT>
 ENTRY f87 INTERNAL tempReg WriteInt <INT>
 ENTRY f88 INTERNAL PARAM i WriteInt 0 <INT>
DATA SECTION
 DEF f24 := 20 <INT>
 DEF GLOBAL f25 := f24 <INT>
 DEF f26 := 5 <INT>
 DEF GLOBAL f27 := f26 <INT>
BSS SECTION
 DEF GLOBAL f28 := 0 <INT>
CODE SECTION
 CALL Div([(GLOBAL f25) -> f38]<INT>, [(GLOBAL f27) -> f75]<INT>)
 DEF f86 := (RETURN f85) <INT>
 GLOBAL f28 := f86 <INT>
 CALL WriteInt([(GLOBAL f28) -> f88]<INT>)
END
PROC SECTION
 PROC LABEL Div
  DEF f29 := 0 <INT>
  DEF f30 := 0 <INT>
  DEF f31 := 0 <INT>
  DEF f32 := 0 <INT>
  DEF f33 := 0 <INT>
  DEF f34 := 0 <INT>
  DEF f35 := 0 <INT>
  DEF f36 := 0 <INT>
  DEF f37 := 0 <INT>
  f31 := (PARAM f38) <INT>
  DEF f39 := 0 <INT>
  f34 := f39 <INT>
  DEF f40 := 0 <INT>
  f32 := f40 <INT>
  CALL IntIsZero([f31 -> f44]<INT>)
  DEF f49 := (RETURN f48) <BOOL>
  DEF f50 := BNOT f49 <BOOL>
  DEF f51 := TRUE <BOOL>
  IF f50 BEQ f51
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_0
  ELSE WHILENEXT_0_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_0_SEQ_0_LEVEL_0_0
  IF f50 BEQ f51
  THEN WHILESTAT_0_SEQ_0_LEVEL_0_0
  ELSE WHILEEND_0_LEVEL_0_0
  LABEL WHILESTAT_0_SEQ_0_LEVEL_0_0
  DEF f52 := 1 <INT>
  DEF f53 := f31 IAND f52 <INT>
  f33 := f53 <INT>
  DEF f54 := 1 <INT>
  DEF f55 := f33 IEQ f54 <BOOL>
  DEF f56 := TRUE <BOOL>
  IF f55 BEQ f56
  THEN IFSTAT_0_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_0
  f32 := f34 <INT>
  GOTO IFEND_0_LEVEL_0_0
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_0
  LABEL IFEND_0_LEVEL_0_0
  DEF f57 := 1 <INT>
  DEF f58 := f34 IADD f57 <INT>
  f34 := f58 <INT>
  DEF f59 := 1 <INT>
  DEF f60 := f31 IRSHIFT f59 <INT>
  f31 := f60 <INT>
  CALL IntIsZero([f31 -> f44]<INT>)
  DEF f61 := (RETURN f48) <BOOL>
  DEF f62 := BNOT f61 <BOOL>
  f50 := f62 <BOOL>
  GOTO WHILECOND_0_SEQ_0_LEVEL_0_0
  LABEL WHILENEXT_0_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_0_LEVEL_0_0
  f35 := f32 <INT>
  f31 := (PARAM f38) <INT>
  DEF f63 := 0 <INT>
  f37 := f63 <INT>
  DEF f64 := 0 <INT>
  f30 := f64 <INT>
  DEF f65 := 0 <INT>
  DEF f66 := f35 GE f65 <BOOL>
  DEF f67 := TRUE <BOOL>
  IF f66 BEQ f67
  THEN WHILESTAT_2_SEQ_0_LEVEL_0_0
  ELSE WHILENEXT_2_SEQ_0_LEVEL_0_0
  LABEL WHILECOND_2_SEQ_0_LEVEL_0_0
  IF f66 BEQ f67
  THEN WHILESTAT_2_SEQ_0_LEVEL_0_0
  ELSE WHILEEND_2_LEVEL_0_0
  LABEL WHILESTAT_2_SEQ_0_LEVEL_0_0
  DEF f68 := f31 IRSHIFT f35 <INT>
  DEF f69 := 1 <INT>
  DEF f70 := f68 IAND f69 <INT>
  f36 := f70 <INT>
  DEF f71 := 1 <INT>
  DEF f72 := f37 ILSHIFT f71 <INT>
  DEF f73 := f72 IOR f36 <INT>
  f37 := f73 <INT>
  DEF f74 := f37 GE (PARAM f75) <BOOL>
  DEF f76 := TRUE <BOOL>
  IF f74 BEQ f76
  THEN IFSTAT_1_SEQ_0_LEVEL_0_1
  ELSE IFNEXT_1_SEQ_0_LEVEL_0_1
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_1
  DEF f77 := 1 <INT>
  DEF f78 := f77 ILSHIFT f35 <INT>
  DEF f79 := f30 IOR f78 <INT>
  f30 := f79 <INT>
  DEF f80 := f37 ISUB (PARAM f75) <INT>
  f37 := f80 <INT>
  GOTO IFEND_1_LEVEL_0_1
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_1
  LABEL IFEND_1_LEVEL_0_1
  DEF f81 := 1 <INT>
  DEF f82 := f35 ISUB f81 <INT>
  f35 := f82 <INT>
  DEF f83 := 0 <INT>
  DEF f84 := f35 GE f83 <BOOL>
  f66 := f84 <BOOL>
  GOTO WHILECOND_2_SEQ_0_LEVEL_0_0
  LABEL WHILENEXT_2_SEQ_0_LEVEL_0_0
  LABEL WHILEEND_2_LEVEL_0_0
  DEF RETURN f85 := f30 <INT>
 RETURN FROM Div
 PROC LABEL IntIsZero
  DEF f41 := FALSE <BOOL>
  DEF f42 := 0 <INT>
  DEF f43 := (PARAM f44) IEQ f42 <BOOL>
  DEF f45 := TRUE <BOOL>
  IF f43 BEQ f45
  THEN IFSTAT_1_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_1_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_0
  DEF f46 := TRUE <BOOL>
  f41 := f46 <BOOL>
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_0
  DEF f47 := FALSE <BOOL>
  f41 := f47 <BOOL>
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_1_LEVEL_0_0
  LABEL IFEND_1_LEVEL_0_0
  DEF RETURN f48 := f41 <BOOL>
 RETURN FROM IntIsZero
 PROC LABEL WriteInt
  DEF f87 := 0 <INT>
  IPARAM f87 <INT> %dr
  IASM "MOV %dr, R0"
  IPARAM (PARAM f88) <INT> %a
  IASM "LDR R0, %ua"
  IASM "SWI 1"
  IPARAM f87 <INT> %r
  IASM "MOV R0, %ur"
 RETURN FROM WriteInt
