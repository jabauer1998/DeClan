SYMBOL SECTION
 ENTRY f25 CONST INTERNAL GLOBAL ifTrue  <BOOL>
 ENTRY f27 CONST INTERNAL GLOBAL ifFalse  <BOOL>
 ENTRY f31 INTERNAL tempReg WriteInt <INT>
 ENTRY f32 INTERNAL PARAM i WriteInt 0 <INT>
DATA SECTION
 DEF f24 := TRUE <BOOL>
 DEF GLOBAL f25 := f24 <BOOL>
 DEF f26 := FALSE <BOOL>
 DEF GLOBAL f27 := f26 <BOOL>
BSS SECTION
CODE SECTION
 DEF f28 := TRUE <BOOL>
 IF (GLOBAL f25) BEQ f28
 THEN IFSTAT_0_SEQ_0_LEVEL_0_0
 ELSE IFNEXT_0_SEQ_0_LEVEL_0_0
 LABEL IFSTAT_0_SEQ_0_LEVEL_0_0
 DEF f29 := TRUE <BOOL>
 IF (GLOBAL f27) BEQ f29
 THEN IFSTAT_1_SEQ_0_LEVEL_1_0
 ELSE IFNEXT_1_SEQ_0_LEVEL_1_0
 LABEL IFSTAT_1_SEQ_0_LEVEL_1_0
 DEF f30 := 5 <INT>
 CALL WriteInt([f30 -> f32]<INT>)
 GOTO IFEND_1_LEVEL_1_0
 LABEL IFNEXT_1_SEQ_0_LEVEL_1_0
 DEF f33 := 6 <INT>
 CALL WriteInt([f33 -> f32]<INT>)
 GOTO IFEND_1_LEVEL_1_0
 LABEL IFNEXT_1_SEQ_1_LEVEL_1
 LABEL IFEND_1_LEVEL_1_0
 GOTO IFEND_0_LEVEL_0_0
 LABEL IFNEXT_0_SEQ_0_LEVEL_0_0
 DEF f34 := TRUE <BOOL>
 IF (GLOBAL f27) BEQ f34
 THEN IFSTAT_3_SEQ_0_LEVEL_1_0
 ELSE IFNEXT_3_SEQ_0_LEVEL_1_0
 LABEL IFSTAT_3_SEQ_0_LEVEL_1_0
 DEF f35 := 7 <INT>
 CALL WriteInt([f35 -> f32]<INT>)
 GOTO IFEND_3_LEVEL_1_0
 LABEL IFNEXT_3_SEQ_0_LEVEL_1_0
 DEF f36 := 8 <INT>
 CALL WriteInt([f36 -> f32]<INT>)
 GOTO IFEND_3_LEVEL_1_0
 LABEL IFNEXT_3_SEQ_1_LEVEL_1
 LABEL IFEND_3_LEVEL_1_0
 GOTO IFEND_0_LEVEL_0_0
 LABEL IFNEXT_0_SEQ_1_LEVEL_0_0
 LABEL IFEND_0_LEVEL_0_0
END
PROC SECTION
 PROC LABEL WriteInt
  DEF f31 := 0 <INT>
  IPARAM f31 <INT> %dr
  IASM "MOV %dr, R0"
  IPARAM (PARAM f32) <INT> %a
  IASM "LDR R0, %ua"
  IASM "SWI 1"
  IPARAM f31 <INT> %r
  IASM "MOV R0, %ur"
 RETURN FROM WriteInt
