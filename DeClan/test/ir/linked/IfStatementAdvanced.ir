SYMBOL SECTION
 ENTRY f33 CONST INTERNAL GLOBAL ifTrue  <BOOL>
 ENTRY f35 CONST INTERNAL GLOBAL ifFalse  <BOOL>
 ENTRY f39 INTERNAL tempReg WriteInt <INT>
 ENTRY f40 INTERNAL PARAM i WriteInt 0 <INT>
DATA SECTION
 DEF f32 := TRUE <BOOL>
 DEF GLOBAL f33 := f32 <BOOL>
 DEF f34 := FALSE <BOOL>
 DEF GLOBAL f35 := f34 <BOOL>
BSS SECTION
CODE SECTION
 DEF f36 := TRUE <BOOL>
 IF (GLOBAL f33) BEQ f36
 THEN IFSTAT_0_SEQ_0_LEVEL_0_0
 ELSE IFNEXT_0_SEQ_0_LEVEL_0_0
 LABEL IFSTAT_0_SEQ_0_LEVEL_0_0
 DEF f37 := TRUE <BOOL>
 IF (GLOBAL f35) BEQ f37
 THEN IFSTAT_1_SEQ_0_LEVEL_1_0
 ELSE IFNEXT_1_SEQ_0_LEVEL_1_0
 LABEL IFSTAT_1_SEQ_0_LEVEL_1_0
 DEF f38 := 5 <INT>
 CALL WriteInt([f38 -> f40]<INT>) FROM DEF f38 := 5 <INT>
 GOTO IFEND_1_LEVEL_1_0 FROM CALL WriteInt([f38 -> f40]<INT>) FROM DEF f38 := 5 <INT>
 LABEL IFNEXT_1_SEQ_0_LEVEL_1_0
 DEF f41 := 6 <INT>
 CALL WriteInt([f41 -> f40]<INT>) FROM DEF f41 := 6 <INT>
 GOTO IFEND_1_LEVEL_1_0 FROM CALL WriteInt([f41 -> f40]<INT>) FROM DEF f41 := 6 <INT>
 LABEL IFNEXT_1_SEQ_1_LEVEL_1
 LABEL IFEND_1_LEVEL_1_0
 GOTO IFEND_0_LEVEL_0_0 FROM LABEL IFEND_1_LEVEL_1_0
 LABEL IFNEXT_0_SEQ_0_LEVEL_0_0
 DEF f42 := TRUE <BOOL>
 IF (GLOBAL f35) BEQ f42
 THEN IFSTAT_3_SEQ_0_LEVEL_1_0
 ELSE IFNEXT_3_SEQ_0_LEVEL_1_0
 LABEL IFSTAT_3_SEQ_0_LEVEL_1_0
 DEF f43 := 7 <INT>
 CALL WriteInt([f43 -> f40]<INT>) FROM DEF f43 := 7 <INT>
 GOTO IFEND_3_LEVEL_1_0 FROM CALL WriteInt([f43 -> f40]<INT>) FROM DEF f43 := 7 <INT>
 LABEL IFNEXT_3_SEQ_0_LEVEL_1_0
 DEF f44 := 8 <INT>
 CALL WriteInt([f44 -> f40]<INT>) FROM DEF f44 := 8 <INT>
 GOTO IFEND_3_LEVEL_1_0 FROM CALL WriteInt([f44 -> f40]<INT>) FROM DEF f44 := 8 <INT>
 LABEL IFNEXT_3_SEQ_1_LEVEL_1
 LABEL IFEND_3_LEVEL_1_0
 GOTO IFEND_0_LEVEL_0_0 FROM LABEL IFEND_3_LEVEL_1_0
 LABEL IFNEXT_0_SEQ_1_LEVEL_0_0
 LABEL IFEND_0_LEVEL_0_0
END
PROC SECTION
 PROC LABEL WriteInt
  DEF f39 := 0 <INT>
  IPARAM f39
  IASM "MOV %r, R0"
  IPARAM (PARAM f40)
  IASM "LDR R0, %a"
  IASM "SWI 1"
  IPARAM f39
  IASM "MOV R0, %r"
 RETURN FROM WriteInt
