SYMBOL SECTION
 ENTRY f25 CONST INTERNAL GLOBAL ifTrue  <BOOL>
 ENTRY f27 CONST INTERNAL GLOBAL ifFalse  <BOOL>
 ENTRY f30 INTERNAL tempReg WriteInt <INT>
 ENTRY f31 INTERNAL PARAM i WriteInt 0 <INT>
DATA SECTION
 DEF f24 := TRUE <BOOL>
 DEF GLOBAL f25 := f24 <BOOL>
 DEF f26 := FALSE <BOOL>
 DEF GLOBAL f27 := f26 <BOOL>
BSS SECTION
CODE SECTION
 DEF f28 := TRUE <BOOL>
 IF (GLOBAL f25) BEQ f28
 THEN IFSTAT_0_SEQ_0_LEVEL_0_0
 ELSE IFNEXT_0_SEQ_0_LEVEL_0_0
 LABEL IFSTAT_0_SEQ_0_LEVEL_0_0
 DEF f29 := 4 <INT>
 CALL WriteInt([f29 -> f31]<INT>)
 GOTO IFEND_0_LEVEL_0_0
 LABEL IFNEXT_0_SEQ_0_LEVEL_0_0
 DEF f32 := 5 <INT>
 CALL WriteInt([f32 -> f31]<INT>)
 GOTO IFEND_0_LEVEL_0_0
 LABEL IFNEXT_0_SEQ_1_LEVEL_0_0
 LABEL IFEND_0_LEVEL_0_0
 DEF f33 := TRUE <BOOL>
 IF (GLOBAL f27) BEQ f33
 THEN IFSTAT_1_SEQ_0_LEVEL_0_0
 ELSE IFNEXT_1_SEQ_0_LEVEL_0_0
 LABEL IFSTAT_1_SEQ_0_LEVEL_0_0
 DEF f34 := 2 <INT>
 CALL WriteInt([f34 -> f31]<INT>)
 GOTO IFEND_1_LEVEL_0_0
 LABEL IFNEXT_1_SEQ_0_LEVEL_0_0
 DEF f35 := TRUE <BOOL>
 IF (GLOBAL f25) BEQ f35
 THEN IFSTAT_1_SEQ_1_LEVEL_0_0
 ELSE IFNEXT_1_SEQ_1_LEVEL_0_0
 LABEL IFSTAT_1_SEQ_1_LEVEL_0_0
 DEF f36 := 5 <INT>
 CALL WriteInt([f36 -> f31]<INT>)
 GOTO IFEND_1_LEVEL_0_0
 LABEL IFNEXT_1_SEQ_1_LEVEL_0_0
 DEF f37 := 6 <INT>
 CALL WriteInt([f37 -> f31]<INT>)
 GOTO IFEND_1_LEVEL_0_0
 LABEL IFNEXT_1_SEQ_2_LEVEL_0_0
 LABEL IFEND_1_LEVEL_0_0
END
PROC SECTION
 PROC LABEL WriteInt
  DEF f30 := 0 <INT>
  IPARAM f30 <INT> %dr
  IASM "MOV %dr, R0"
  IPARAM (PARAM f31) <INT> %a
  IASM "LDR R0, %ua"
  IASM "SWI 1"
  IPARAM f30 <INT> %r
  IASM "MOV R0, %ur"
 RETURN FROM WriteInt
