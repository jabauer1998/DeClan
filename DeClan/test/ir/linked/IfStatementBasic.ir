SYMBOL SECTION
 ENTRY f33 CONST INTERNAL GLOBAL ifTrue  <BOOL>
 ENTRY f35 CONST INTERNAL GLOBAL ifFalse  <BOOL>
 ENTRY f38 INTERNAL tempReg WriteInt <INT>
 ENTRY f39 INTERNAL PARAM i WriteInt 0 <INT>
DATA SECTION
 DEF f32 := TRUE <BOOL>
 DEF GLOBAL f33 := f32 <BOOL>
 DEF f34 := FALSE <BOOL>
 DEF GLOBAL f35 := f34 <BOOL>
BSS SECTION
CODE SECTION
 DEF f36 := TRUE <BOOL>
 IF (GLOBAL f33) BEQ f36
 THEN IFSTAT_0_SEQ_0_LEVEL_0_0
 ELSE IFNEXT_0_SEQ_0_LEVEL_0_0
 LABEL IFSTAT_0_SEQ_0_LEVEL_0_0
 DEF f37 := 4 <INT>
 CALL WriteInt([f37 -> f39]<INT>) FROM DEF f37 := 4 <INT>
 GOTO IFEND_0_LEVEL_0_0 FROM CALL WriteInt([f37 -> f39]<INT>) FROM DEF f37 := 4 <INT>
 LABEL IFNEXT_0_SEQ_0_LEVEL_0_0
 DEF f40 := 5 <INT>
 CALL WriteInt([f40 -> f39]<INT>) FROM DEF f40 := 5 <INT>
 GOTO IFEND_0_LEVEL_0_0 FROM CALL WriteInt([f40 -> f39]<INT>) FROM DEF f40 := 5 <INT>
 LABEL IFNEXT_0_SEQ_1_LEVEL_0_0
 LABEL IFEND_0_LEVEL_0_0
 DEF f41 := TRUE <BOOL>
 IF (GLOBAL f35) BEQ f41
 THEN IFSTAT_1_SEQ_0_LEVEL_0_0
 ELSE IFNEXT_1_SEQ_0_LEVEL_0_0
 LABEL IFSTAT_1_SEQ_0_LEVEL_0_0
 DEF f42 := 2 <INT>
 CALL WriteInt([f42 -> f39]<INT>) FROM DEF f42 := 2 <INT>
 GOTO IFEND_1_LEVEL_0_0 FROM CALL WriteInt([f42 -> f39]<INT>) FROM DEF f42 := 2 <INT>
 LABEL IFNEXT_1_SEQ_0_LEVEL_0_0
 DEF f43 := TRUE <BOOL>
 IF (GLOBAL f33) BEQ f43
 THEN IFSTAT_1_SEQ_1_LEVEL_0_0
 ELSE IFNEXT_1_SEQ_1_LEVEL_0_0
 LABEL IFSTAT_1_SEQ_1_LEVEL_0_0
 DEF f44 := 5 <INT>
 CALL WriteInt([f44 -> f39]<INT>) FROM DEF f44 := 5 <INT>
 GOTO IFEND_1_LEVEL_0_0 FROM CALL WriteInt([f44 -> f39]<INT>) FROM DEF f44 := 5 <INT>
 LABEL IFNEXT_1_SEQ_1_LEVEL_0_0
 DEF f45 := 6 <INT>
 CALL WriteInt([f45 -> f39]<INT>) FROM DEF f45 := 6 <INT>
 GOTO IFEND_1_LEVEL_0_0 FROM CALL WriteInt([f45 -> f39]<INT>) FROM DEF f45 := 6 <INT>
 LABEL IFNEXT_1_SEQ_2_LEVEL_0_0
 LABEL IFEND_1_LEVEL_0_0
END
PROC SECTION
 PROC LABEL WriteInt
  DEF f38 := 0 <INT>
  IPARAM f38
  IASM "MOV %r, R0"
  IPARAM (PARAM f39)
  IASM "LDR R0, %a"
  IASM "SWI 1"
  IPARAM f38
  IASM "MOV R0, %r"
 RETURN FROM WriteInt
