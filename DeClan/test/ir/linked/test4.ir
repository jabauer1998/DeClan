SYMBOL SECTION
 ENTRY f32 INTERNAL GLOBAL n  <INT>
 ENTRY f33 INTERNAL GLOBAL i  <INT>
 ENTRY f34 INTERNAL GLOBAL result  <INT>
 ENTRY f35 INTERNAL result ReadInt <INT>
 ENTRY f36 INTERNAL tempReg ReadInt <INT>
 ENTRY f37 INTERNAL RETURN ReadInt <INT>
 ENTRY f51 INTERNAL temp M <INT>
 ENTRY f52 INTERNAL result M <INT>
 ENTRY f55 INTERNAL PARAM n M 0 <INT>
 ENTRY f61 INTERNAL RETURN M <INT>
 ENTRY f67 INTERNAL tempReg WriteInt <INT>
 ENTRY f68 INTERNAL PARAM i WriteInt 0 <INT>
 ENTRY f80 INTERNAL low Multiply <INT>
 ENTRY f81 INTERNAL high Multiply <INT>
 ENTRY f82 INTERNAL PARAM a Multiply 0 <INT>
 ENTRY f83 INTERNAL PARAM b Multiply 1 <INT>
 ENTRY f84 INTERNAL RETURN Multiply <INT>
DATA SECTION
BSS SECTION
 DEF GLOBAL f32 := 0 <INT>
 DEF GLOBAL f33 := 0 <INT>
 DEF GLOBAL f34 := 0 <INT>
CODE SECTION
 CALL ReadInt() FROM CODE SECTION
 DEF f38 := (RETURN f37) <INT>
 GLOBAL f32 := f38 <INT>
 DEF f39 := 0 <INT>
 GLOBAL f33 := f39 <INT>
 LABEL FORBEG_0_LEVEL_0
 IF (GLOBAL f33) LT (GLOBAL f32)
 THEN FORLOOP_0_LEVEL_0
 ELSE FOREND_0_LEVEL_0
 LABEL FORLOOP_0_LEVEL_0
 CALL F([(GLOBAL f33) -> f44]<INT>) FROM LABEL FORLOOP_0_LEVEL_0
 DEF f66 := (RETURN f50) <INT>
 GLOBAL f34 := f66 <INT>
 CALL WriteInt([(GLOBAL f34) -> f68]<INT>) FROM GLOBAL f34 := f66 <INT>
 CALL Fact([(GLOBAL f33) -> f73]<INT>) FROM CALL WriteInt([(GLOBAL f34) -> f68]<INT>) FROM GLOBAL f34 := f66 <INT>
 DEF f86 := (RETURN f79) <INT>
 GLOBAL f34 := f86 <INT>
 CALL WriteInt([(GLOBAL f34) -> f68]<INT>) FROM GLOBAL f34 := f86 <INT>
 CALL WriteLn() FROM CALL WriteInt([(GLOBAL f34) -> f68]<INT>) FROM GLOBAL f34 := f86 <INT>
 DEF f87 := 1 <INT>
 GLOBAL f33 := (GLOBAL f33) IADD f87 <INT>
 GOTO FORBEG_0_LEVEL_0 FROM GLOBAL f33 := (GLOBAL f33) IADD f87 <INT>
 LABEL FOREND_0_LEVEL_0
END
PROC SECTION
 PROC LABEL ReadInt
  DEF f35 := 0 <INT>
  DEF f36 := 0 <INT>
  IPARAM f36
  IASM "MOV %r, R0"
  IASM "SWI 3"
  IPARAM f35
  IASM "STR R0, %a"
  IPARAM f36
  IASM "MOV R0, %r"
  DEF RETURN f37 := f35 <INT>
 RETURN FROM ReadInt
 PROC LABEL F
  DEF f40 := 0 <INT>
  DEF f41 := 0 <INT>
  DEF f42 := 0 <INT>
  DEF f43 := (PARAM f44) IEQ f42 <BOOL>
  DEF f45 := TRUE <BOOL>
  IF f43 BEQ f45
  THEN IFSTAT_1_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_1_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_0
  DEF f46 := 1 <INT>
  f41 := f46 <INT>
  GOTO IFEND_1_LEVEL_0_0 FROM f41 := f46 <INT>
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_0
  DEF f47 := 1 <INT>
  DEF f48 := (PARAM f44) ISUB f47 <INT>
  CALL F([f48 -> f44]<INT>) FROM DEF f48 := (PARAM f44) ISUB f47 <INT>
  DEF f49 := (RETURN f50) <INT>
  f40 := f49 <INT>
  CALL M([f40 -> f55]<INT>) FROM f40 := f49 <INT>
  DEF f64 := (RETURN f61) <INT>
  f41 := f64 <INT>
  DEF f65 := (PARAM f44) ISUB f41 <INT>
  f41 := f65 <INT>
  GOTO IFEND_1_LEVEL_0_0 FROM f41 := f65 <INT>
  LABEL IFNEXT_1_SEQ_1_LEVEL_0_0
  LABEL IFEND_1_LEVEL_0_0
  DEF RETURN f50 := f41 <INT>
 RETURN FROM F
 PROC LABEL M
  DEF f51 := 0 <INT>
  DEF f52 := 0 <INT>
  DEF f53 := 0 <INT>
  DEF f54 := (PARAM f55) IEQ f53 <BOOL>
  DEF f56 := TRUE <BOOL>
  IF f54 BEQ f56
  THEN IFSTAT_0_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_0
  DEF f57 := 0 <INT>
  f52 := f57 <INT>
  GOTO IFEND_0_LEVEL_0_0 FROM f52 := f57 <INT>
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_0
  DEF f58 := 1 <INT>
  DEF f59 := (PARAM f55) ISUB f58 <INT>
  CALL M([f59 -> f55]<INT>) FROM DEF f59 := (PARAM f55) ISUB f58 <INT>
  DEF f60 := (RETURN f61) <INT>
  f51 := f60 <INT>
  CALL F([f51 -> f44]<INT>) FROM f51 := f60 <INT>
  DEF f62 := (RETURN f50) <INT>
  f52 := f62 <INT>
  DEF f63 := (PARAM f55) ISUB f52 <INT>
  f52 := f63 <INT>
  GOTO IFEND_0_LEVEL_0_0 FROM f52 := f63 <INT>
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_0
  LABEL IFEND_0_LEVEL_0_0
  DEF RETURN f61 := f52 <INT>
 RETURN FROM M
 PROC LABEL WriteInt
  DEF f67 := 0 <INT>
  IPARAM f67
  IASM "MOV %r, R0"
  IPARAM (PARAM f68)
  IASM "LDR R0, %a"
  IASM "SWI 1"
  IPARAM f67
  IASM "MOV R0, %r"
 RETURN FROM WriteInt
 PROC LABEL Fact
  DEF f69 := 0 <INT>
  DEF f70 := 0 <INT>
  DEF f71 := 0 <INT>
  DEF f72 := (PARAM f73) IEQ f71 <BOOL>
  DEF f74 := TRUE <BOOL>
  IF f72 BEQ f74
  THEN IFSTAT_2_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_2_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_2_SEQ_0_LEVEL_0_0
  DEF f75 := 1 <INT>
  f70 := f75 <INT>
  GOTO IFEND_2_LEVEL_0_0 FROM f70 := f75 <INT>
  LABEL IFNEXT_2_SEQ_0_LEVEL_0_0
  DEF f76 := 1 <INT>
  DEF f77 := (PARAM f73) ISUB f76 <INT>
  CALL Fact([f77 -> f73]<INT>) FROM DEF f77 := (PARAM f73) ISUB f76 <INT>
  DEF f78 := (RETURN f79) <INT>
  f69 := f78 <INT>
  CALL Multiply([(PARAM f73) -> f82]<INT>, [f69 -> f83]<INT>) FROM f69 := f78 <INT>
  DEF f85 := (RETURN f84) <INT>
  f70 := f85 <INT>
  GOTO IFEND_2_LEVEL_0_0 FROM f70 := f85 <INT>
  LABEL IFNEXT_2_SEQ_1_LEVEL_0_0
  LABEL IFEND_2_LEVEL_0_0
  DEF RETURN f79 := f70 <INT>
 RETURN FROM Fact
 PROC LABEL Multiply
  DEF f80 := 0 <INT>
  DEF f81 := 0 <INT>
  IPARAM f80
  IPARAM f81
  IPARAM (PARAM f82)
  IPARAM (PARAM f83)
  IASM "MULL %r, %r, %r, %r"
  DEF RETURN f84 := f80 <INT>
 RETURN FROM Multiply
 PROC LABEL WriteLn
  IASM "SWI 4"
 RETURN FROM WriteLn
