SYMBOL SECTION
 ENTRY f24 INTERNAL GLOBAL n  <INT>
 ENTRY f25 INTERNAL GLOBAL i  <INT>
 ENTRY f26 INTERNAL GLOBAL result  <INT>
 ENTRY f27 INTERNAL result ReadInt <INT>
 ENTRY f28 INTERNAL tempReg ReadInt <INT>
 ENTRY f29 INTERNAL RETURN ReadInt <INT>
 ENTRY f43 INTERNAL temp M <INT>
 ENTRY f44 INTERNAL result M <INT>
 ENTRY f47 INTERNAL PARAM n M 0 <INT>
 ENTRY f53 INTERNAL RETURN M <INT>
 ENTRY f59 INTERNAL tempReg WriteInt <INT>
 ENTRY f60 INTERNAL PARAM i WriteInt 0 <INT>
 ENTRY f72 INTERNAL low Multiply <INT>
 ENTRY f73 INTERNAL high Multiply <INT>
 ENTRY f74 INTERNAL PARAM a Multiply 0 <INT>
 ENTRY f75 INTERNAL PARAM b Multiply 1 <INT>
 ENTRY f76 INTERNAL RETURN Multiply <INT>
DATA SECTION
BSS SECTION
 DEF GLOBAL f24 := 0 <INT>
 DEF GLOBAL f25 := 0 <INT>
 DEF GLOBAL f26 := 0 <INT>
CODE SECTION
 CALL ReadInt()
 DEF f30 := (RETURN f29) <INT>
 GLOBAL f24 := f30 <INT>
 DEF f31 := 0 <INT>
 GLOBAL f25 := f31 <INT>
 LABEL FORBEG_0_LEVEL_0
 IF (GLOBAL f25) LT (GLOBAL f24)
 THEN FORLOOP_0_LEVEL_0
 ELSE FOREND_0_LEVEL_0
 LABEL FORLOOP_0_LEVEL_0
 CALL F([(GLOBAL f25) -> f36]<INT>)
 DEF f58 := (RETURN f42) <INT>
 GLOBAL f26 := f58 <INT>
 CALL WriteInt([(GLOBAL f26) -> f60]<INT>)
 CALL Fact([(GLOBAL f25) -> f65]<INT>)
 DEF f78 := (RETURN f71) <INT>
 GLOBAL f26 := f78 <INT>
 CALL WriteInt([(GLOBAL f26) -> f60]<INT>)
 CALL WriteLn()
 DEF f79 := 1 <INT>
 GLOBAL f25 := (GLOBAL f25) IADD f79 <INT>
 GOTO FORBEG_0_LEVEL_0
 LABEL FOREND_0_LEVEL_0
END
PROC SECTION
 PROC LABEL ReadInt
  DEF f27 := 0 <INT>
  DEF f28 := 0 <INT>
  IPARAM f28 <INT> %dr
  IASM "MOV %dr, R0"
  IASM "SWI 3"
  IPARAM f27 <INT> %da
  IASM "STR R0, %da"
  IPARAM f28 <INT> %r
  IASM "MOV R0, %ur"
  DEF RETURN f29 := f27 <INT>
 RETURN FROM ReadInt
 PROC LABEL F
  DEF f32 := 0 <INT>
  DEF f33 := 0 <INT>
  DEF f34 := 0 <INT>
  DEF f35 := (PARAM f36) IEQ f34 <BOOL>
  DEF f37 := TRUE <BOOL>
  IF f35 BEQ f37
  THEN IFSTAT_1_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_1_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_1_SEQ_0_LEVEL_0_0
  DEF f38 := 1 <INT>
  f33 := f38 <INT>
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_0_LEVEL_0_0
  DEF f39 := 1 <INT>
  DEF f40 := (PARAM f36) ISUB f39 <INT>
  CALL F([f40 -> f36]<INT>)
  DEF f41 := (RETURN f42) <INT>
  f32 := f41 <INT>
  CALL M([f32 -> f47]<INT>)
  DEF f56 := (RETURN f53) <INT>
  f33 := f56 <INT>
  DEF f57 := (PARAM f36) ISUB f33 <INT>
  f33 := f57 <INT>
  GOTO IFEND_1_LEVEL_0_0
  LABEL IFNEXT_1_SEQ_1_LEVEL_0_0
  LABEL IFEND_1_LEVEL_0_0
  DEF RETURN f42 := f33 <INT>
 RETURN FROM F
 PROC LABEL M
  DEF f43 := 0 <INT>
  DEF f44 := 0 <INT>
  DEF f45 := 0 <INT>
  DEF f46 := (PARAM f47) IEQ f45 <BOOL>
  DEF f48 := TRUE <BOOL>
  IF f46 BEQ f48
  THEN IFSTAT_0_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_0_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_0_SEQ_0_LEVEL_0_0
  DEF f49 := 0 <INT>
  f44 := f49 <INT>
  GOTO IFEND_0_LEVEL_0_0
  LABEL IFNEXT_0_SEQ_0_LEVEL_0_0
  DEF f50 := 1 <INT>
  DEF f51 := (PARAM f47) ISUB f50 <INT>
  CALL M([f51 -> f47]<INT>)
  DEF f52 := (RETURN f53) <INT>
  f43 := f52 <INT>
  CALL F([f43 -> f36]<INT>)
  DEF f54 := (RETURN f42) <INT>
  f44 := f54 <INT>
  DEF f55 := (PARAM f47) ISUB f44 <INT>
  f44 := f55 <INT>
  GOTO IFEND_0_LEVEL_0_0
  LABEL IFNEXT_0_SEQ_1_LEVEL_0_0
  LABEL IFEND_0_LEVEL_0_0
  DEF RETURN f53 := f44 <INT>
 RETURN FROM M
 PROC LABEL WriteInt
  DEF f59 := 0 <INT>
  IPARAM f59 <INT> %dr
  IASM "MOV %dr, R0"
  IPARAM (PARAM f60) <INT> %a
  IASM "LDR R0, %ua"
  IASM "SWI 1"
  IPARAM f59 <INT> %r
  IASM "MOV R0, %ur"
 RETURN FROM WriteInt
 PROC LABEL Fact
  DEF f61 := 0 <INT>
  DEF f62 := 0 <INT>
  DEF f63 := 0 <INT>
  DEF f64 := (PARAM f65) IEQ f63 <BOOL>
  DEF f66 := TRUE <BOOL>
  IF f64 BEQ f66
  THEN IFSTAT_2_SEQ_0_LEVEL_0_0
  ELSE IFNEXT_2_SEQ_0_LEVEL_0_0
  LABEL IFSTAT_2_SEQ_0_LEVEL_0_0
  DEF f67 := 1 <INT>
  f62 := f67 <INT>
  GOTO IFEND_2_LEVEL_0_0
  LABEL IFNEXT_2_SEQ_0_LEVEL_0_0
  DEF f68 := 1 <INT>
  DEF f69 := (PARAM f65) ISUB f68 <INT>
  CALL Fact([f69 -> f65]<INT>)
  DEF f70 := (RETURN f71) <INT>
  f61 := f70 <INT>
  CALL Multiply([(PARAM f65) -> f74]<INT>, [f61 -> f75]<INT>)
  DEF f77 := (RETURN f76) <INT>
  f62 := f77 <INT>
  GOTO IFEND_2_LEVEL_0_0
  LABEL IFNEXT_2_SEQ_1_LEVEL_0_0
  LABEL IFEND_2_LEVEL_0_0
  DEF RETURN f71 := f62 <INT>
 RETURN FROM Fact
 PROC LABEL Multiply
  DEF f72 := 0 <INT>
  DEF f73 := 0 <INT>
  IPARAM f72 <INT> %dr
  IPARAM f73 <INT> %dr
  IPARAM (PARAM f74) <INT> %r
  IPARAM (PARAM f75) <INT> %r
  IASM "MULL %dr, %dr, %ur, %ur"
  DEF RETURN f76 := f72 <INT>
 RETURN FROM Multiply
 PROC LABEL WriteLn
  IASM "SWI 4"
 RETURN FROM WriteLn
